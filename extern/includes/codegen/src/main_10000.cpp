// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObject parent
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XmlSchemaObjectCollection::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.Add
int System::Xml::Schema::XmlSchemaObjectCollection::Add(::System::Xml::Schema::XmlSchemaObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnInsert
void System::Xml::Schema::XmlSchemaObjectCollection::OnInsert(int index, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnInsert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInsert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnSet
void System::Xml::Schema::XmlSchemaObjectCollection::OnSet(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnClear
void System::Xml::Schema::XmlSchemaObjectCollection::OnClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnClear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnRemove
void System::Xml::Schema::XmlSchemaObjectCollection::OnRemove(int index, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnRemove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.EmptyParticle
#include "System/Xml/Schema/XmlSchemaParticle_EmptyParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.XmlSchemaParticle Empty
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::XmlSchemaParticle::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle*>("System.Xml.Schema", "XmlSchemaParticle", "Empty"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.XmlSchemaParticle Empty
void System::Xml::Schema::XmlSchemaParticle::_set_Empty(::System::Xml::Schema::XmlSchemaParticle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal minOccurs
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::XmlSchemaParticle::dyn_minOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_minOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minOccurs"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal maxOccurs
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::XmlSchemaParticle::dyn_maxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_maxOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxOccurs"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs flags
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaParticle::Occurs& System::Xml::Schema::XmlSchemaParticle::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaParticle::Occurs*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.set_MinOccurs
void System::Xml::Schema::XmlSchemaParticle::set_MinOccurs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::set_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.set_MaxOccurs
void System::Xml::Schema::XmlSchemaParticle::set_MaxOccurs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::set_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle..cctor
void System::Xml::Schema::XmlSchemaParticle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaParticle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs None
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs None
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_None(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs Min
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Min"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs Min
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Min(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Min", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs Max
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Max"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs Max
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Max(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaParticle::Occurs::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.EmptyParticle
#include "System/Xml/Schema/XmlSchemaParticle_EmptyParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSequence
#include "System/Xml/Schema/XmlSchemaSequence.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection items
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSequence::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSequence::dyn_items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSequence.get_Items
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaSequence::get_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSequence::get_Items");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Items", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Xml.Schema.XmlSchemaCompilationSettings
#include "System/Xml/Schema/XmlSchemaCompilationSettings.hpp"
// Including type: System.Xml.Schema.ValidationEventArgs
#include "System/Xml/Schema/ValidationEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::Schema::XmlSchemaSet::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList schemas
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList*& System::Xml::Schema::XmlSchemaSet::dyn_schemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_schemas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemas"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler internalEventHandler
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::XmlSchemaSet::dyn_internalEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_internalEventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalEventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler eventHandler
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::XmlSchemaSet::dyn_eventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_eventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable schemaLocations
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaSet::dyn_schemaLocations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_schemaLocations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaLocations"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable chameleonSchemas
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaSet::dyn_chameleonSchemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_chameleonSchemas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chameleonSchemas"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable targetNamespaces
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaSet::dyn_targetNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_targetNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean compileAll
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaSet::dyn_compileAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_compileAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compileAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo cachedCompiledInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaInfo*& System::Xml::Schema::XmlSchemaSet::dyn_cachedCompiledInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_cachedCompiledInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedCompiledInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReaderSettings readerSettings
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReaderSettings*& System::Xml::Schema::XmlSchemaSet::dyn_readerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_readerSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readerSettings"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReaderSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaCompilationSettings compilationSettings
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaCompilationSettings*& System::Xml::Schema::XmlSchemaSet::dyn_compilationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_compilationSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compilationSettings"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaCompilationSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.InternalValidationCallback
void System::Xml::Schema::XmlSchemaSet::InternalValidationCallback(::Il2CppObject* sender, ::System::Xml::Schema::ValidationEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::InternalValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeContent
#include "System/Xml/Schema/XmlSchemaSimpleTypeContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleTypeContent content
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleTypeContent*& System::Xml::Schema::XmlSchemaSimpleType::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleTypeContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleType.get_Content
::System::Xml::Schema::XmlSchemaSimpleTypeContent* System::Xml::Schema::XmlSchemaSimpleType::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleTypeContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleType.set_Content
void System::Xml::Schema::XmlSchemaSimpleType::set_Content(::System::Xml::Schema::XmlSchemaSimpleTypeContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeContent
#include "System/Xml/Schema/XmlSchemaSimpleTypeContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeList
#include "System/Xml/Schema/XmlSchemaSimpleTypeList.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName itemTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType itemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType baseItemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_baseItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_baseItemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseItemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.set_ItemType
void System::Xml::Schema::XmlSchemaSimpleTypeList::set_ItemType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::set_ItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.get_BaseItemType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaSimpleTypeList::get_BaseItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::get_BaseItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.set_BaseItemType
void System::Xml::Schema::XmlSchemaSimpleTypeList::set_BaseItemType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::set_BaseItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeRestriction
#include "System/Xml/Schema/XmlSchemaSimpleTypeRestriction.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName baseTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_baseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_baseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection facets
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_facets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_facets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facets"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeRestriction.set_BaseTypeName
void System::Xml::Schema::XmlSchemaSimpleTypeRestriction::set_BaseTypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::set_BaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod final
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::XmlSchemaType::dyn_final() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_final");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "final"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod derivedBy
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::XmlSchemaType::dyn_derivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_derivedBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "derivedBy"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType baseSchemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlSchemaType::dyn_baseSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_baseSchemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseSchemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatype datatype
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::XmlSchemaType::dyn_datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_datatype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datatype"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaElementDecl elementDecl
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaElementDecl*& System::Xml::Schema::XmlSchemaType::dyn_elementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_elementDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDecl"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaElementDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qname
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaType::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentType contentType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentType& System::Xml::Schema::XmlSchemaType::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_QualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaType::get_QualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_BaseXmlSchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlSchemaType::get_BaseXmlSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_BaseXmlSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseXmlSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_Datatype
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XmlSchemaType::get_Datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_Datatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Datatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_IsMixed
void System::Xml::Schema::XmlSchemaType::set_IsMixed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_IsMixed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsMixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlSchemaType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_ValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlSchemaType::get_ValueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_ValueConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_ElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::XmlSchemaType::get_ElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_ElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_ElementDecl
void System::Xml::Schema::XmlSchemaType::set_ElementDecl(::System::Xml::Schema::SchemaElementDecl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_ElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaType::GetBuiltInSimpleType(::System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::GetBuiltInSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaType", "GetBuiltInSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetQualifiedName
void System::Xml::Schema::XmlSchemaType::SetQualifiedName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetBaseSchemaType
void System::Xml::Schema::XmlSchemaType::SetBaseSchemaType(::System::Xml::Schema::XmlSchemaType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetBaseSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBaseSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetDerivedBy
void System::Xml::Schema::XmlSchemaType::SetDerivedBy(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetDerivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDerivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetDatatype
void System::Xml::Schema::XmlSchemaType::SetDatatype(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetDatatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDatatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetContentType
void System::Xml::Schema::XmlSchemaType::SetContentType(::System::Xml::Schema::XmlSchemaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaValidationFlags
#include "System/Xml/Schema/XmlSchemaValidationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags None
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags None
void System::Xml::Schema::XmlSchemaValidationFlags::_set_None(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessInlineSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessInlineSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessInlineSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema
void System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessInlineSchema(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessInlineSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessInlineSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessSchemaLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessSchemaLocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessSchemaLocation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation
void System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessSchemaLocation(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessSchemaLocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessSchemaLocation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_ReportValidationWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_ReportValidationWarnings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "ReportValidationWarnings"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings
void System::Xml::Schema::XmlSchemaValidationFlags::_set_ReportValidationWarnings(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_ReportValidationWarnings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "ReportValidationWarnings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessIdentityConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessIdentityConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints
void System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessIdentityConstraints(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessIdentityConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessIdentityConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_AllowXmlAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_AllowXmlAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "AllowXmlAttributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes
void System::Xml::Schema::XmlSchemaValidationFlags::_set_AllowXmlAttributes(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_AllowXmlAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "AllowXmlAttributes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaValidationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaValidity
#include "System/Xml/Schema/XmlSchemaValidity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity NotKnown
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_NotKnown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_NotKnown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "NotKnown"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity NotKnown
void System::Xml::Schema::XmlSchemaValidity::_set_NotKnown(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_NotKnown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "NotKnown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity Valid
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_Valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_Valid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "Valid"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity Valid
void System::Xml::Schema::XmlSchemaValidity::_set_Valid(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_Valid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "Valid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity Invalid
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity Invalid
void System::Xml::Schema::XmlSchemaValidity::_set_Invalid(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "Invalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaValidity::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSeverityType Error
::System::Xml::Schema::XmlSeverityType System::Xml::Schema::XmlSeverityType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSeverityType>("System.Xml.Schema", "XmlSeverityType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSeverityType Error
void System::Xml::Schema::XmlSeverityType::_set_Error(::System::Xml::Schema::XmlSeverityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSeverityType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSeverityType Warning
::System::Xml::Schema::XmlSeverityType System::Xml::Schema::XmlSeverityType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSeverityType>("System.Xml.Schema", "XmlSeverityType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSeverityType Warning
void System::Xml::Schema::XmlSeverityType::_set_Warning(::System::Xml::Schema::XmlSeverityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSeverityType", "Warning", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSeverityType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode None
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode None
void System::Xml::Schema::XmlTypeCode::_set_None(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Item
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Item"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Item
void System::Xml::Schema::XmlTypeCode::_set_Item(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Item", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Node
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Node");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Node"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Node
void System::Xml::Schema::XmlTypeCode::_set_Node(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Node");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Node", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Document
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Document
void System::Xml::Schema::XmlTypeCode::_set_Document(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Document", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Element
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Element
void System::Xml::Schema::XmlTypeCode::_set_Element(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Attribute
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Attribute
void System::Xml::Schema::XmlTypeCode::_set_Attribute(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Namespace
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Namespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Namespace
void System::Xml::Schema::XmlTypeCode::_set_Namespace(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Namespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode ProcessingInstruction
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_ProcessingInstruction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "ProcessingInstruction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode ProcessingInstruction
void System::Xml::Schema::XmlTypeCode::_set_ProcessingInstruction(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_ProcessingInstruction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "ProcessingInstruction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Comment
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Comment
void System::Xml::Schema::XmlTypeCode::_set_Comment(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Text
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Text
void System::Xml::Schema::XmlTypeCode::_set_Text(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode AnyAtomicType
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_AnyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_AnyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "AnyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode AnyAtomicType
void System::Xml::Schema::XmlTypeCode::_set_AnyAtomicType(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_AnyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "AnyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UntypedAtomic
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UntypedAtomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UntypedAtomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UntypedAtomic"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UntypedAtomic
void System::Xml::Schema::XmlTypeCode::_set_UntypedAtomic(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UntypedAtomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UntypedAtomic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode String
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode String
void System::Xml::Schema::XmlTypeCode::_set_String(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Boolean
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Boolean
void System::Xml::Schema::XmlTypeCode::_set_Boolean(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Decimal
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Decimal
void System::Xml::Schema::XmlTypeCode::_set_Decimal(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Float
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Float
void System::Xml::Schema::XmlTypeCode::_set_Float(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Double
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Double"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Double
void System::Xml::Schema::XmlTypeCode::_set_Double(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Duration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Duration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Duration
void System::Xml::Schema::XmlTypeCode::_set_Duration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Duration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode DateTime
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode DateTime
void System::Xml::Schema::XmlTypeCode::_set_DateTime(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Time
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Time
void System::Xml::Schema::XmlTypeCode::_set_Time(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Date
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Date
void System::Xml::Schema::XmlTypeCode::_set_Date(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GYearMonth
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GYearMonth
void System::Xml::Schema::XmlTypeCode::_set_GYearMonth(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GYear
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GYear
void System::Xml::Schema::XmlTypeCode::_set_GYear(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GMonthDay
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GMonthDay
void System::Xml::Schema::XmlTypeCode::_set_GMonthDay(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GDay
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GDay
void System::Xml::Schema::XmlTypeCode::_set_GDay(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GMonth
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GMonth
void System::Xml::Schema::XmlTypeCode::_set_GMonth(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode HexBinary
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_HexBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_HexBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "HexBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode HexBinary
void System::Xml::Schema::XmlTypeCode::_set_HexBinary(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_HexBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "HexBinary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Base64Binary
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Base64Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Base64Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Base64Binary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Base64Binary
void System::Xml::Schema::XmlTypeCode::_set_Base64Binary(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Base64Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Base64Binary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode AnyUri
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_AnyUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_AnyUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "AnyUri"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode AnyUri
void System::Xml::Schema::XmlTypeCode::_set_AnyUri(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_AnyUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "AnyUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode QName
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode QName
void System::Xml::Schema::XmlTypeCode::_set_QName(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Notation
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Notation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Notation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Notation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Notation
void System::Xml::Schema::XmlTypeCode::_set_Notation(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Notation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Notation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NormalizedString
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NormalizedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NormalizedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NormalizedString"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NormalizedString
void System::Xml::Schema::XmlTypeCode::_set_NormalizedString(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NormalizedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NormalizedString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Token
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Token
void System::Xml::Schema::XmlTypeCode::_set_Token(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Language
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Language");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Language"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Language
void System::Xml::Schema::XmlTypeCode::_set_Language(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Language");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Language", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NmToken
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NmToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NmToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NmToken"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NmToken
void System::Xml::Schema::XmlTypeCode::_set_NmToken(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NmToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NmToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Name
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Name
void System::Xml::Schema::XmlTypeCode::_set_Name(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NCName
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NCName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NCName
void System::Xml::Schema::XmlTypeCode::_set_NCName(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NCName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Id
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Id");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Id"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Id
void System::Xml::Schema::XmlTypeCode::_set_Id(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Id");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Id", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Idref
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Idref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Idref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Idref"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Idref
void System::Xml::Schema::XmlTypeCode::_set_Idref(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Idref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Idref", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Entity
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Entity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Entity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Entity
void System::Xml::Schema::XmlTypeCode::_set_Entity(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Entity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Entity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Integer
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Integer
void System::Xml::Schema::XmlTypeCode::_set_Integer(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NonPositiveInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NonPositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NonPositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NonPositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NonPositiveInteger
void System::Xml::Schema::XmlTypeCode::_set_NonPositiveInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NonPositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NonPositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NegativeInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NegativeInteger
void System::Xml::Schema::XmlTypeCode::_set_NegativeInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Long
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Long"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Long
void System::Xml::Schema::XmlTypeCode::_set_Long(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Int
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Int"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Int
void System::Xml::Schema::XmlTypeCode::_set_Int(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Short
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Short"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Short
void System::Xml::Schema::XmlTypeCode::_set_Short(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Short", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Byte
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Byte"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Byte
void System::Xml::Schema::XmlTypeCode::_set_Byte(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Byte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NonNegativeInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NonNegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NonNegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NonNegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NonNegativeInteger
void System::Xml::Schema::XmlTypeCode::_set_NonNegativeInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NonNegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NonNegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedLong
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedLong"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedLong
void System::Xml::Schema::XmlTypeCode::_set_UnsignedLong(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedLong", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedInt
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedInt"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedInt
void System::Xml::Schema::XmlTypeCode::_set_UnsignedInt(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedShort
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedShort"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedShort
void System::Xml::Schema::XmlTypeCode::_set_UnsignedShort(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedShort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedByte
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedByte"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedByte
void System::Xml::Schema::XmlTypeCode::_set_UnsignedByte(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedByte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode PositiveInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_PositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_PositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "PositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode PositiveInteger
void System::Xml::Schema::XmlTypeCode::_set_PositiveInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_PositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "PositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode YearMonthDuration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_YearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_YearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "YearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode YearMonthDuration
void System::Xml::Schema::XmlTypeCode::_set_YearMonthDuration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_YearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "YearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode DayTimeDuration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_DayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_DayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "DayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode DayTimeDuration
void System::Xml::Schema::XmlTypeCode::_set_DayTimeDuration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_DayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "DayTimeDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlTypeCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlValueConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlValueConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlBaseConverter
#include "System/Xml/Schema/XmlBaseConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ICollectionType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ICollectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ICollectionType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ICollectionType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ICollectionType
void System::Xml::Schema::XmlBaseConverter::_set_ICollectionType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ICollectionType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ICollectionType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type IEnumerableType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_IEnumerableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_IEnumerableType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "IEnumerableType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type IEnumerableType
void System::Xml::Schema::XmlBaseConverter::_set_IEnumerableType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_IEnumerableType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "IEnumerableType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type IListType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_IListType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_IListType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "IListType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type IListType
void System::Xml::Schema::XmlBaseConverter::_set_IListType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_IListType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "IListType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ObjectArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ObjectArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ObjectArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ObjectArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ObjectArrayType
void System::Xml::Schema::XmlBaseConverter::_set_ObjectArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ObjectArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ObjectArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type StringArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_StringArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_StringArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "StringArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type StringArrayType
void System::Xml::Schema::XmlBaseConverter::_set_StringArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_StringArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "StringArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlAtomicValueArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlAtomicValueArrayType
void System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DecimalType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DecimalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DecimalType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DecimalType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DecimalType
void System::Xml::Schema::XmlBaseConverter::_set_DecimalType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DecimalType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DecimalType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int32Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int32Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int32Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int32Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int32Type
void System::Xml::Schema::XmlBaseConverter::_set_Int32Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int32Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int32Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int64Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int64Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int64Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int64Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int64Type
void System::Xml::Schema::XmlBaseConverter::_set_Int64Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int64Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int64Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type StringType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_StringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_StringType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "StringType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type StringType
void System::Xml::Schema::XmlBaseConverter::_set_StringType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_StringType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "StringType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlAtomicValueType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlAtomicValueType
void System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ObjectType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ObjectType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ObjectType
void System::Xml::Schema::XmlBaseConverter::_set_ObjectType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ObjectType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ByteType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ByteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ByteType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ByteType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ByteType
void System::Xml::Schema::XmlBaseConverter::_set_ByteType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ByteType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ByteType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int16Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int16Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int16Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int16Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int16Type
void System::Xml::Schema::XmlBaseConverter::_set_Int16Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int16Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int16Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type SByteType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_SByteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_SByteType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "SByteType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type SByteType
void System::Xml::Schema::XmlBaseConverter::_set_SByteType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_SByteType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "SByteType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt16Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt16Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt16Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt16Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt16Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt16Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt16Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt16Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt32Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt32Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt32Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt32Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt32Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt32Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt32Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt32Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt64Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt64Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt64Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt64Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt64Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt64Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt64Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt64Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XPathItemType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XPathItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XPathItemType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XPathItemType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XPathItemType
void System::Xml::Schema::XmlBaseConverter::_set_XPathItemType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XPathItemType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XPathItemType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DoubleType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DoubleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DoubleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DoubleType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DoubleType
void System::Xml::Schema::XmlBaseConverter::_set_DoubleType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DoubleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DoubleType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type SingleType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_SingleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_SingleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "SingleType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type SingleType
void System::Xml::Schema::XmlBaseConverter::_set_SingleType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_SingleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "SingleType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DateTimeType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DateTimeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DateTimeType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DateTimeType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DateTimeType
void System::Xml::Schema::XmlBaseConverter::_set_DateTimeType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DateTimeType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DateTimeType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DateTimeOffsetType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DateTimeOffsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DateTimeOffsetType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DateTimeOffsetType
void System::Xml::Schema::XmlBaseConverter::_set_DateTimeOffsetType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DateTimeOffsetType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type BooleanType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_BooleanType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_BooleanType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "BooleanType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type BooleanType
void System::Xml::Schema::XmlBaseConverter::_set_BooleanType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_BooleanType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "BooleanType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ByteArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ByteArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ByteArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ByteArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ByteArrayType
void System::Xml::Schema::XmlBaseConverter::_set_ByteArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ByteArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ByteArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlQualifiedNameType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlQualifiedNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlQualifiedNameType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlQualifiedNameType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlQualifiedNameType
void System::Xml::Schema::XmlBaseConverter::_set_XmlQualifiedNameType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlQualifiedNameType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlQualifiedNameType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UriType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UriType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UriType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UriType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UriType
void System::Xml::Schema::XmlBaseConverter::_set_UriType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UriType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UriType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type TimeSpanType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_TimeSpanType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_TimeSpanType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "TimeSpanType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type TimeSpanType
void System::Xml::Schema::XmlBaseConverter::_set_TimeSpanType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_TimeSpanType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "TimeSpanType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XPathNavigatorType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XPathNavigatorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XPathNavigatorType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XPathNavigatorType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XPathNavigatorType
void System::Xml::Schema::XmlBaseConverter::_set_XPathNavigatorType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XPathNavigatorType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XPathNavigatorType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType schemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlBaseConverter::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlTypeCode typeCode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlTypeCode& System::Xml::Schema::XmlBaseConverter::dyn_typeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_typeCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeCode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type clrTypeDefault
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Schema::XmlBaseConverter::dyn_clrTypeDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_clrTypeDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clrTypeDefault"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlBaseConverter::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlBaseConverter::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_XmlTypeName
::StringW System::Xml::Schema::XmlBaseConverter::get_XmlTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_XmlTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_DefaultClrType
::System::Type* System::Xml::Schema::XmlBaseConverter::get_DefaultClrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_DefaultClrType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultClrType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter..cctor
void System::Xml::Schema::XmlBaseConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.IsDerivedFrom
bool System::Xml::Schema::XmlBaseConverter::IsDerivedFrom(::System::Type* derivedType, ::System::Type* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::IsDerivedFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "IsDerivedFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(baseType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedType, baseType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.CreateInvalidClrMappingException
::System::Exception* System::Xml::Schema::XmlBaseConverter::CreateInvalidClrMappingException(::System::Type* sourceType, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::CreateInvalidClrMappingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInvalidClrMappingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, sourceType, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.QNameToString
::StringW System::Xml::Schema::XmlBaseConverter::QNameToString(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::QNameToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "QNameToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeListType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToBase64Binary
::ArrayW<uint8_t> System::Xml::Schema::XmlBaseConverter::StringToBase64Binary(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToBase64Binary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToBase64Binary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDate
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToDate(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDayTimeDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToDayTimeDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDayTimeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDayTimeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGDay
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGDay(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonth
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGMonth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthDay
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGMonthDay(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYear
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGYear(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearMonth
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGYearMonth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToDateOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGDayOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGDayOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGDayOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGDayOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGMonthOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthDayOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGMonthDayOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthDayOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthDayOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGYearOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearMonthOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGYearMonthOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearMonthOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearMonthOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToHexBinary
::ArrayW<uint8_t> System::Xml::Schema::XmlBaseConverter::StringToHexBinary(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToHexBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToHexBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToQName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlBaseConverter::StringToQName(::StringW value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToYearMonthDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToYearMonthDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToYearMonthDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToYearMonthDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.AnyUriToString
::StringW System::Xml::Schema::XmlBaseConverter::AnyUriToString(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::AnyUriToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "AnyUriToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Base64BinaryToString
::StringW System::Xml::Schema::XmlBaseConverter::Base64BinaryToString(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Base64BinaryToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Base64BinaryToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateToString
::StringW System::Xml::Schema::XmlBaseConverter::DateToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeToString
::StringW System::Xml::Schema::XmlBaseConverter::DateTimeToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DayTimeDurationToString
::StringW System::Xml::Schema::XmlBaseConverter::DayTimeDurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DayTimeDurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DayTimeDurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DurationToString
::StringW System::Xml::Schema::XmlBaseConverter::DurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GDayToString
::StringW System::Xml::Schema::XmlBaseConverter::GDayToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GDayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GDayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthDayToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthDayToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthDayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthDayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearMonthToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearMonthToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearMonthToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearMonthToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::DateOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GDayOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GDayOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GDayOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GDayOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthDayOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthDayOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthDayOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthDayOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearMonthOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearMonthOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearMonthOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearMonthOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.QNameToString
::StringW System::Xml::Schema::XmlBaseConverter::QNameToString(::System::Xml::XmlQualifiedName* qname, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::QNameToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "QNameToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.TimeToString
::StringW System::Xml::Schema::XmlBaseConverter::TimeToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::TimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "TimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.TimeOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::TimeOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::TimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "TimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.YearMonthDurationToString
::StringW System::Xml::Schema::XmlBaseConverter::YearMonthDurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::YearMonthDurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "YearMonthDurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeOffsetToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToInt32
int System::Xml::Schema::XmlBaseConverter::DecimalToInt32(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToInt64
int64_t System::Xml::Schema::XmlBaseConverter::DecimalToInt64(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToUInt64
uint64_t System::Xml::Schema::XmlBaseConverter::DecimalToUInt64(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToByte
uint8_t System::Xml::Schema::XmlBaseConverter::Int32ToByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToInt16
int16_t System::Xml::Schema::XmlBaseConverter::Int32ToInt16(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToSByte
int8_t System::Xml::Schema::XmlBaseConverter::Int32ToSByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToUInt16
uint16_t System::Xml::Schema::XmlBaseConverter::Int32ToUInt16(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int64ToInt32
int System::Xml::Schema::XmlBaseConverter::Int64ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int64ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int64ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int64ToUInt32
uint System::Xml::Schema::XmlBaseConverter::Int64ToUInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int64ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int64ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.UntypedAtomicToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "UntypedAtomicToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.UntypedAtomicToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "UntypedAtomicToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlBaseConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlBaseConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlNumeric10Converter
#include "System/Xml/Schema/XmlNumeric10Converter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlNumeric10Converter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlNumeric10Converter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToDecimal
::System::Decimal System::Xml::Schema::XmlNumeric10Converter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToDecimal
::System::Decimal System::Xml::Schema::XmlNumeric10Converter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlNumeric2Converter
#include "System/Xml/Schema/XmlNumeric2Converter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlNumeric2Converter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlNumeric2Converter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToDouble
double System::Xml::Schema::XmlNumeric2Converter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToDouble
double System::Xml::Schema::XmlNumeric2Converter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlDateTimeConverter
#include "System/Xml/Schema/XmlDateTimeConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlDateTimeConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlDateTimeConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlBooleanConverter
#include "System/Xml/Schema/XmlBooleanConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlBooleanConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBooleanConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToBoolean
bool System::Xml::Schema::XmlBooleanConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToBoolean
bool System::Xml::Schema::XmlBooleanConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToString
::StringW System::Xml::Schema::XmlBooleanConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToString
::StringW System::Xml::Schema::XmlBooleanConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlMiscConverter
#include "System/Xml/Schema/XmlMiscConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlMiscConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlMiscConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ToString
::StringW System::Xml::Schema::XmlMiscConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlStringConverter
#include "System/Xml/Schema/XmlStringConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlStringConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlStringConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlStringConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ToString
::StringW System::Xml::Schema::XmlStringConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlStringConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlStringConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlUntypedConverter
#include "System/Xml/Schema/XmlUntypedConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter Untyped
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlUntypedConverter::_get_Untyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_get_Untyped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlUntypedConverter", "Untyped"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter Untyped
void System::Xml::Schema::XmlUntypedConverter::_set_Untyped(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_set_Untyped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlUntypedConverter", "Untyped", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter UntypedList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlUntypedConverter::_get_UntypedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_get_UntypedList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlUntypedConverter", "UntypedList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter UntypedList
void System::Xml::Schema::XmlUntypedConverter::_set_UntypedList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_set_UntypedList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlUntypedConverter", "UntypedList", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowListToList
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlUntypedConverter::dyn_allowListToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::dyn_allowListToList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowListToList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.SupportsType
bool System::Xml::Schema::XmlUntypedConverter::SupportsType(::System::Type* clrType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::SupportsType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportsType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clrType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clrType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter..cctor
void System::Xml::Schema::XmlUntypedConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlUntypedConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToBoolean
bool System::Xml::Schema::XmlUntypedConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToBoolean
bool System::Xml::Schema::XmlUntypedConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlUntypedConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlUntypedConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlUntypedConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlUntypedConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDouble
double System::Xml::Schema::XmlUntypedConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDouble
double System::Xml::Schema::XmlUntypedConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt32
int System::Xml::Schema::XmlUntypedConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt32
int System::Xml::Schema::XmlUntypedConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt64
int64_t System::Xml::Schema::XmlUntypedConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt64
int64_t System::Xml::Schema::XmlUntypedConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToSingle
float System::Xml::Schema::XmlUntypedConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToSingle
float System::Xml::Schema::XmlUntypedConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeListType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlAnyConverter
#include "System/Xml/Schema/XmlAnyConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XPath.XPathNavigator
#include "System/Xml/XPath/XPathNavigator.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter Item
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyConverter::_get_Item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_get_Item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyConverter", "Item"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter Item
void System::Xml::Schema::XmlAnyConverter::_set_Item(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_set_Item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyConverter", "Item", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomic
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyConverter::_get_AnyAtomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_get_AnyAtomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyConverter", "AnyAtomic"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomic
void System::Xml::Schema::XmlAnyConverter::_set_AnyAtomic(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_set_AnyAtomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyConverter", "AnyAtomic", value));
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToNavigator
::System::Xml::XPath::XPathNavigator* System::Xml::Schema::XmlAnyConverter::ToNavigator(::System::Xml::XPath::XPathNavigator* nav) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToNavigator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToNavigator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nav)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method, nav);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter..cctor
void System::Xml::Schema::XmlAnyConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlAnyConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToBoolean
bool System::Xml::Schema::XmlAnyConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlAnyConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlAnyConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlAnyConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDouble
double System::Xml::Schema::XmlAnyConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToInt32
int System::Xml::Schema::XmlAnyConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToInt64
int64_t System::Xml::Schema::XmlAnyConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToSingle
float System::Xml::Schema::XmlAnyConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlAnyListConverter
#include "System/Xml/Schema/XmlAnyListConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter ItemList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyListConverter::_get_ItemList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_get_ItemList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyListConverter", "ItemList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter ItemList
void System::Xml::Schema::XmlAnyListConverter::_set_ItemList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_set_ItemList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyListConverter", "ItemList", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomicList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyListConverter::_get_AnyAtomicList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_get_AnyAtomicList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyListConverter", "AnyAtomicList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomicList
void System::Xml::Schema::XmlAnyListConverter::_set_AnyAtomicList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_set_AnyAtomicList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyListConverter", "AnyAtomicList", value));
}
// Autogenerated method: System.Xml.Schema.XmlAnyListConverter..cctor
void System::Xml::Schema::XmlAnyListConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlAnyListConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAnyListConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyListConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlListConverter
#include "System/Xml/Schema/XmlListConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.XmlValueConverter atomicConverter
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlValueConverter*& System::Xml::Schema::XmlListConverter::dyn_atomicConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::dyn_atomicConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atomicConverter"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlValueConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlListConverter::Create(::System::Xml::Schema::XmlValueConverter* atomicConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlListConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atomicConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, atomicConverter);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.IsListType
bool System::Xml::Schema::XmlListConverter::IsListType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::IsListType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsListType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ToList
::System::Collections::IList* System::Xml::Schema::XmlListConverter::ToList(::Il2CppObject* list, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method, list, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.StringAsList
::System::Collections::Generic::List_1<::StringW>* System::Xml::Schema::XmlListConverter::StringAsList(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::StringAsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringAsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ListAsString
::StringW System::Xml::Schema::XmlListConverter::ListAsString(::System::Collections::IEnumerable* list, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ListAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, list, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlListConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlListConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeListType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.CreateInvalidClrMappingException
::System::Exception* System::Xml::Schema::XmlListConverter::CreateInvalidClrMappingException(::System::Type* sourceType, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::CreateInvalidClrMappingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInvalidClrMappingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, sourceType, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags DateTime
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags DateTime
void System::Xml::Schema::XsdDateTimeFlags::_set_DateTime(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags Time
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags Time
void System::Xml::Schema::XsdDateTimeFlags::_set_Time(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags Date
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags Date
void System::Xml::Schema::XsdDateTimeFlags::_set_Date(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
void System::Xml::Schema::XsdDateTimeFlags::_set_GYearMonth(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GYear
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GYear
void System::Xml::Schema::XsdDateTimeFlags::_set_GYear(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
void System::Xml::Schema::XsdDateTimeFlags::_set_GMonthDay(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GDay
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GDay
void System::Xml::Schema::XsdDateTimeFlags::_set_GDay(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GMonth
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GMonth
void System::Xml::Schema::XsdDateTimeFlags::_set_GMonth(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTimeNoTz(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTime(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrTimeNoTz(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_AllXsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_AllXsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "AllXsd"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
void System::Xml::Schema::XsdDateTimeFlags::_set_AllXsd(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_AllXsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "AllXsd", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTimeFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime
#include "System/Xml/Schema/XsdDateTime.hpp"
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode
#include "System/Xml/Schema/XsdDateTime_DateTimeTypeCode.hpp"
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind
#include "System/Xml/Schema/XsdDateTime_XsdDateTimeKind.hpp"
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser
#include "System/Xml/Schema/XsdDateTime_Parser.hpp"
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_dd
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_dd
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_ddT
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_ddT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_ddT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_ddT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_ddT
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_ddT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_ddT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_ddT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH
int System::Xml::Schema::XsdDateTime::_get_LzHH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH
void System::Xml::Schema::XsdDateTime::_set_LzHH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_
int System::Xml::Schema::XsdDateTime::_get_LzHH_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_
void System::Xml::Schema::XsdDateTime::_set_LzHH_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm_
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm_
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm_ss
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm_ss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm_ss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm_ss"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm_ss
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm_ss(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm_ss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm_ss", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_
int System::Xml::Schema::XsdDateTime::_get_Lz_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_
void System::Xml::Schema::XsdDateTime::_set_Lz_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz
int System::Xml::Schema::XsdDateTime::_get_Lz_zz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz
void System::Xml::Schema::XsdDateTime::_set_Lz_zz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz_
int System::Xml::Schema::XsdDateTime::_get_Lz_zz_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz_
void System::Xml::Schema::XsdDateTime::_set_Lz_zz_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz_zz
int System::Xml::Schema::XsdDateTime::_get_Lz_zz_zz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz_zz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz_zz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz_zz
void System::Xml::Schema::XsdDateTime::_set_Lz_zz_zz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz_zz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz_zz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__
int System::Xml::Schema::XsdDateTime::_get_Lz__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__
void System::Xml::Schema::XsdDateTime::_set_Lz__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm
int System::Xml::Schema::XsdDateTime::_get_Lz__mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm
void System::Xml::Schema::XsdDateTime::_set_Lz__mm(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm_
int System::Xml::Schema::XsdDateTime::_get_Lz__mm_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm_
void System::Xml::Schema::XsdDateTime::_set_Lz__mm_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm__
int System::Xml::Schema::XsdDateTime::_get_Lz__mm__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm__");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm__"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm__
void System::Xml::Schema::XsdDateTime::_set_Lz__mm__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm__");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm__", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm_dd
int System::Xml::Schema::XsdDateTime::_get_Lz__mm_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm_dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm_dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm_dd
void System::Xml::Schema::XsdDateTime::_set_Lz__mm_dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm_dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm_dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz___
int System::Xml::Schema::XsdDateTime::_get_Lz___() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz___");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz___"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz___
void System::Xml::Schema::XsdDateTime::_set_Lz___(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz___");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz___", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz___dd
int System::Xml::Schema::XsdDateTime::_get_Lz___dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz___dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz___dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz___dd
void System::Xml::Schema::XsdDateTime::_set_Lz___dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz___dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz___dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlTypeCode[] typeCodes
::ArrayW<::System::Xml::Schema::XmlTypeCode> System::Xml::Schema::XsdDateTime::_get_typeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_typeCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XmlTypeCode>>("System.Xml.Schema", "XsdDateTime", "typeCodes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlTypeCode[] typeCodes
void System::Xml::Schema::XsdDateTime::_set_typeCodes(::ArrayW<::System::Xml::Schema::XmlTypeCode> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_typeCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "typeCodes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime dt
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Xml::Schema::XsdDateTime::dyn_dt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::dyn_dt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dt"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 extra
[[deprecated("Use field access instead!")]] uint& System::Xml::Schema::XsdDateTime::dyn_extra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::dyn_extra");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extra"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_InternalTypeCode
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::get_InternalTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_InternalTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_InternalKind
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::get_InternalKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_InternalKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Year
int System::Xml::Schema::XsdDateTime::get_Year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Year");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Year", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Month
int System::Xml::Schema::XsdDateTime::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Month");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Month", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Day
int System::Xml::Schema::XsdDateTime::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Day");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Day", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Hour
int System::Xml::Schema::XsdDateTime::get_Hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Hour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Minute
int System::Xml::Schema::XsdDateTime::get_Minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Minute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Second
int System::Xml::Schema::XsdDateTime::get_Second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Second");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Second", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Fraction
int System::Xml::Schema::XsdDateTime::get_Fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Fraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Fraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_ZoneHour
int System::Xml::Schema::XsdDateTime::get_ZoneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_ZoneHour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ZoneHour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_ZoneMinute
int System::Xml::Schema::XsdDateTime::get_ZoneMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_ZoneMinute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ZoneMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::Xml::Schema::XsdDateTime::Parser parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::DateTime dateTime, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTime, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::DateTimeOffset dateTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTimeOffset);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::DateTimeOffset dateTimeOffset, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTimeOffset), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTimeOffset, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..cctor
void System::Xml::Schema::XsdDateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.InitiateXsdDateTime
void System::Xml::Schema::XsdDateTime::InitiateXsdDateTime(::System::Xml::Schema::XsdDateTime::Parser parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::InitiateXsdDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitiateXsdDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.TryParse
bool System::Xml::Schema::XsdDateTime::TryParse(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds, ByRef<::System::Xml::Schema::XsdDateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, kinds, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintDate
void System::Xml::Schema::XsdDateTime::PrintDate(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintTime
void System::Xml::Schema::XsdDateTime::PrintTime(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintZone
void System::Xml::Schema::XsdDateTime::PrintZone(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.IntToCharArray
void System::Xml::Schema::XsdDateTime::IntToCharArray(::ArrayW<::Il2CppChar> text, int start, int value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::IntToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, start, value, digits);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.ShortToCharArray
void System::Xml::Schema::XsdDateTime::ShortToCharArray(::ArrayW<::Il2CppChar> text, int start, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::ShortToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ShortToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, start, value);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.ToString
::StringW System::Xml::Schema::XsdDateTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode
#include "System/Xml/Schema/XsdDateTime_DateTimeTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode DateTime
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode DateTime
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_DateTime(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode Time
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode Time
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Time(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode Date
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode Date
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Date(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GYearMonth
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GYearMonth
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYearMonth(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GYear
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GYear
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYear(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GMonthDay
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GMonthDay
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonthDay(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GDay
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GDay
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GDay(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GMonth
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GMonth
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonth(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode XdrDateTime
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_XdrDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_XdrDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "XdrDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode XdrDateTime
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_XdrDateTime(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_XdrDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "XdrDateTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::DateTimeTypeCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind
#include "System/Xml/Schema/XsdDateTime_XsdDateTimeKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind Unspecified
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind Unspecified
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Unspecified(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind Zulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Zulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Zulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Zulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind Zulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Zulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Zulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Zulu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind LocalWestOfZulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalWestOfZulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalWestOfZulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalWestOfZulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind LocalWestOfZulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalWestOfZulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalWestOfZulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalWestOfZulu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind LocalEastOfZulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalEastOfZulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalEastOfZulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalEastOfZulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind LocalEastOfZulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalEastOfZulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalEastOfZulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalEastOfZulu", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::XsdDateTimeKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser
#include "System/Xml/Schema/XsdDateTime_Parser.hpp"
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32[] Power10
::ArrayW<int> System::Xml::Schema::XsdDateTime::Parser::_get_Power10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::_get_Power10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XsdDateTime/Parser", "Power10"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] Power10
void System::Xml::Schema::XsdDateTime::Parser::_set_Power10(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::_set_Power10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/Parser", "Power10", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode typeCode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTime::DateTimeTypeCode& System::Xml::Schema::XsdDateTime::Parser::dyn_typeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_typeCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeCode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 year
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_year");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 month
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_month");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 day
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_day");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hour
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_hour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minute
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_minute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 second
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_second");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "second"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fraction
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fraction"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind kind
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTime::XsdDateTimeKind& System::Xml::Schema::XsdDateTime::Parser::dyn_kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_kind");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kind"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 zoneHour
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_zoneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_zoneHour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneHour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 zoneMinute
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_zoneMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_zoneMinute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneMinute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdDateTime::Parser::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_text");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser..cctor
void System::Xml::Schema::XsdDateTime::Parser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime/Parser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.Parse
bool System::Xml::Schema::XsdDateTime::Parser::Parse(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseDate
bool System::Xml::Schema::XsdDateTime::Parser::ParseDate(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseTimeAndZoneAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndZoneAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndZoneAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTimeAndZoneAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseTimeAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTimeAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseTime
bool System::Xml::Schema::XsdDateTime::Parser::ParseTime(ByRef<int> start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(start));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseZoneAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseZoneAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseZoneAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseZoneAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.Parse4Dig
bool System::Xml::Schema::XsdDateTime::Parser::Parse4Dig(int start, ByRef<int> num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse4Dig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse4Dig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(num));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.Parse2Dig
bool System::Xml::Schema::XsdDateTime::Parser::Parse2Dig(int start, ByRef<int> num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse2Dig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse2Dig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(num));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseChar
bool System::Xml::Schema::XsdDateTime::Parser::ParseChar(int start, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, ch);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.Test
bool System::Xml::Schema::XsdDateTime::Parser::Test(::System::Xml::Schema::XsdDateTimeFlags left, ::System::Xml::Schema::XsdDateTimeFlags right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime/Parser", "Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration
#include "System/Xml/Schema/XsdDuration.hpp"
// Including type: System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts
#include "System/Xml/Schema/XsdDuration_Parts.hpp"
// Including type: System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType
#include "System/Xml/Schema/XsdDuration_DurationType.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 years
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_years");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "years"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 months
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_months() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_months");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "months"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 days
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_days() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_days");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "days"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hours
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_hours");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hours"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minutes
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_minutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_minutes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minutes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 seconds
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_seconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 nanoseconds
[[deprecated("Use field access instead!")]] uint& System::Xml::Schema::XsdDuration::dyn_nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_nanoseconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nanoseconds"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_IsNegative
bool System::Xml::Schema::XsdDuration::get_IsNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Years
int System::Xml::Schema::XsdDuration::get_Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Years");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Years", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Months
int System::Xml::Schema::XsdDuration::get_Months() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Months");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Months", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Days
int System::Xml::Schema::XsdDuration::get_Days() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Days");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Days", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Hours
int System::Xml::Schema::XsdDuration::get_Hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Hours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Minutes
int System::Xml::Schema::XsdDuration::get_Minutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Minutes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minutes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Seconds
int System::Xml::Schema::XsdDuration::get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Seconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Seconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Nanoseconds
int System::Xml::Schema::XsdDuration::get_Nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Nanoseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Nanoseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(bool isNegative, int years, int months, int days, int hours, int minutes, int seconds, int nanoseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isNegative), ::il2cpp_utils::ExtractType(years), ::il2cpp_utils::ExtractType(months), ::il2cpp_utils::ExtractType(days), ::il2cpp_utils::ExtractType(hours), ::il2cpp_utils::ExtractType(minutes), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(nanoseconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isNegative, years, months, days, hours, minutes, seconds, nanoseconds);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::System::TimeSpan timeSpan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSpan)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSpan);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::System::TimeSpan timeSpan, ::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSpan), ::il2cpp_utils::ExtractType(durationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSpan, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::StringW s, ::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(durationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToTimeSpan
::System::TimeSpan System::Xml::Schema::XsdDuration::ToTimeSpan(::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryToTimeSpan
::System::Exception* System::Xml::Schema::XsdDuration::TryToTimeSpan(ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryToTimeSpan
::System::Exception* System::Xml::Schema::XsdDuration::TryToTimeSpan(::System::Xml::Schema::XsdDuration::DurationType durationType, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, durationType, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToString
::StringW System::Xml::Schema::XsdDuration::ToString(::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParse
::System::Exception* System::Xml::Schema::XsdDuration::TryParse(::StringW s, ByRef<::System::Xml::Schema::XsdDuration> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDuration&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParse
::System::Exception* System::Xml::Schema::XsdDuration::TryParse(::StringW s, ::System::Xml::Schema::XsdDuration::DurationType durationType, ByRef<::System::Xml::Schema::XsdDuration> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(durationType), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDuration&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, durationType, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParseDigits
::StringW System::Xml::Schema::XsdDuration::TryParseDigits(::StringW s, ByRef<int> offset, bool eatDigits, ByRef<int> result, ByRef<int> numDigits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParseDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParseDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(eatDigits), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(offset), eatDigits, byref(result), byref(numDigits));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToString
::StringW System::Xml::Schema::XsdDuration::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts
#include "System/Xml/Schema/XsdDuration_Parts.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasNone
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasNone"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasNone
void System::Xml::Schema::XsdDuration::Parts::_set_HasNone(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasYears
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasYears() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasYears");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasYears"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasYears
void System::Xml::Schema::XsdDuration::Parts::_set_HasYears(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasYears");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasYears", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasMonths
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasMonths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasMonths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasMonths"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasMonths
void System::Xml::Schema::XsdDuration::Parts::_set_HasMonths(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasMonths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasMonths", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasDays
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasDays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasDays"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasDays
void System::Xml::Schema::XsdDuration::Parts::_set_HasDays(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasDays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasDays", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasHours
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasHours");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasHours"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasHours
void System::Xml::Schema::XsdDuration::Parts::_set_HasHours(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasHours");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasHours", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasMinutes
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasMinutes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasMinutes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasMinutes
void System::Xml::Schema::XsdDuration::Parts::_set_HasMinutes(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasMinutes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasMinutes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasSeconds
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasSeconds
void System::Xml::Schema::XsdDuration::Parts::_set_HasSeconds(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::Parts::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType
#include "System/Xml/Schema/XsdDuration_DurationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType Duration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_Duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "Duration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType Duration
void System::Xml::Schema::XsdDuration::DurationType::_set_Duration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_Duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "Duration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType YearMonthDuration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_YearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_YearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "YearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType YearMonthDuration
void System::Xml::Schema::XsdDuration::DurationType::_set_YearMonthDuration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_YearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "YearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType DayTimeDuration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_DayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_DayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "DayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType DayTimeDuration
void System::Xml::Schema::XsdDuration::DurationType::_set_DayTimeDuration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_DayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "DayTimeDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::DurationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlConfiguration.XmlReaderSection
#include "System/Xml/XmlConfiguration/XmlReaderSection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlConfiguration.XmlReaderSection.get_ProhibitDefaultUrlResolver
bool System::Xml::XmlConfiguration::XmlReaderSection::get_ProhibitDefaultUrlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConfiguration::XmlReaderSection::get_ProhibitDefaultUrlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XmlConfiguration", "XmlReaderSection", "get_ProhibitDefaultUrlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlConfiguration.XmlReaderSection.get_CollapseWhiteSpaceIntoEmptyString
bool System::Xml::XmlConfiguration::XmlReaderSection::get_CollapseWhiteSpaceIntoEmptyString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConfiguration::XmlReaderSection::get_CollapseWhiteSpaceIntoEmptyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XmlConfiguration", "XmlReaderSection", "get_CollapseWhiteSpaceIntoEmptyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Xsl.Runtime.StringConcat
#include "System/Xml/Xsl/Runtime/StringConcat.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String s1
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_s1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_s1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s1"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s2
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_s2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_s2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s3
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_s3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_s3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s3"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s4
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_s4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_s4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s4"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String delimiter
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_delimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_delimiter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delimiter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> strList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Xml::Xsl::Runtime::StringConcat::dyn_strList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_strList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxStr
[[deprecated("Use field access instead!")]] int& System::Xml::Xsl::Runtime::StringConcat::dyn_idxStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_idxStr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxStr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.get_Count
int System::Xml::Xsl::Runtime::StringConcat::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.Clear
void System::Xml::Xsl::Runtime::StringConcat::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.GetResult
::StringW System::Xml::Xsl::Runtime::StringConcat::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.ConcatNoDelimiter
void System::Xml::Xsl::Runtime::StringConcat::ConcatNoDelimiter(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::ConcatNoDelimiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConcatNoDelimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XName
#include "System/Xml/Linq/XName.hpp"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XNamespace ns
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XNamespace*& System::Xml::Linq::XName::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XNamespace**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String localName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XName::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XName::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XName.get_LocalName
::StringW System::Xml::Linq::XName::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.get_Namespace
::System::Xml::Linq::XNamespace* System::Xml::Linq::XName::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.get_NamespaceName
::StringW System::Xml::Linq::XName::get_NamespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::get_NamespaceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.Get
::System::Xml::Linq::XName* System::Xml::Linq::XName::Get(::StringW expandedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XName", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expandedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expandedName);
}
// Autogenerated method: System.Xml.Linq.XName.Get
::System::Xml::Linq::XName* System::Xml::Linq::XName::Get(::StringW localName, ::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XName", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localName, namespaceName);
}
// Autogenerated method: System.Xml.Linq.XName.System.IEquatable<System.Xml.Linq.XName>.Equals
bool System::Xml::Linq::XName::System_IEquatable$System_Xml_Linq_XName$_Equals(::System::Xml::Linq::XName* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::System.IEquatable<System.Xml.Linq.XName>.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IEquatable<System.Xml.Linq.XName>.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Linq.XName.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Xml::Linq::XName::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Xml.Linq.XName.ToString
::StringW System::Xml::Linq::XName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.Equals
bool System::Xml::Linq::XName::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Xml.Linq.XName.GetHashCode
int System::Xml::Linq::XName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.op_Equality
bool System::Xml::Linq::operator ==(::System::Xml::Linq::XName* left, ::System::Xml::Linq::XName& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.NameSerializer
#include "System/Xml/Linq/NameSerializer.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String expandedName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::NameSerializer::dyn_expandedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NameSerializer::dyn_expandedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expandedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.NameSerializer.System.Runtime.Serialization.IObjectReference.GetRealObject
::Il2CppObject* System::Xml::Linq::NameSerializer::System_Runtime_Serialization_IObjectReference_GetRealObject(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NameSerializer::System.Runtime.Serialization.IObjectReference.GetRealObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IObjectReference.GetRealObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Linq.NameSerializer.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Xml::Linq::NameSerializer::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NameSerializer::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
// Including type: System.Xml.Linq.XHashtable`1
#include "System/Xml/Linq/XHashtable_1.hpp"
// Including type: System.Xml.Linq.XName
#include "System/Xml/Linq/XName.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.Linq.XHashtable`1<System.WeakReference> namespaces
::System::Xml::Linq::XHashtable_1<::System::WeakReference*>* System::Xml::Linq::XNamespace::_get_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_get_namespaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XHashtable_1<::System::WeakReference*>*>("System.Xml.Linq", "XNamespace", "namespaces"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Linq.XHashtable`1<System.WeakReference> namespaces
void System::Xml::Linq::XNamespace::_set_namespaces(::System::Xml::Linq::XHashtable_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_set_namespaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XNamespace", "namespaces", value));
}
// Autogenerated static field getter
// Get static field: static private System.WeakReference refNone
::System::WeakReference* System::Xml::Linq::XNamespace::_get_refNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_get_refNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::WeakReference*>("System.Xml.Linq", "XNamespace", "refNone"));
}
// Autogenerated static field setter
// Set static field: static private System.WeakReference refNone
void System::Xml::Linq::XNamespace::_set_refNone(::System::WeakReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_set_refNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XNamespace", "refNone", value));
}
// Autogenerated static field getter
// Get static field: static private System.WeakReference refXml
::System::WeakReference* System::Xml::Linq::XNamespace::_get_refXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_get_refXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::WeakReference*>("System.Xml.Linq", "XNamespace", "refXml"));
}
// Autogenerated static field setter
// Set static field: static private System.WeakReference refXml
void System::Xml::Linq::XNamespace::_set_refXml(::System::WeakReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_set_refXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XNamespace", "refXml", value));
}
// Autogenerated static field getter
// Get static field: static private System.WeakReference refXmlns
::System::WeakReference* System::Xml::Linq::XNamespace::_get_refXmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_get_refXmlns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::WeakReference*>("System.Xml.Linq", "XNamespace", "refXmlns"));
}
// Autogenerated static field setter
// Set static field: static private System.WeakReference refXmlns
void System::Xml::Linq::XNamespace::_set_refXmlns(::System::WeakReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_set_refXmlns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XNamespace", "refXmlns", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String namespaceName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XNamespace::dyn_namespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::dyn_namespaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XNamespace::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XHashtable`1<System.Xml.Linq.XName> names
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XHashtable_1<::System::Xml::Linq::XName*>*& System::Xml::Linq::XNamespace::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XHashtable_1<::System::Xml::Linq::XName*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XNamespace.get_NamespaceName
::StringW System::Xml::Linq::XNamespace::get_NamespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::get_NamespaceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.get_None
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::get_None");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "get_None", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.get_Xml
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::get_Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::get_Xml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "get_Xml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.get_Xmlns
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::get_Xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::get_Xmlns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "get_Xmlns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.GetName
::System::Xml::Linq::XName* System::Xml::Linq::XNamespace::GetName(::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(this, ___internal__method, localName);
}
// Autogenerated method: System.Xml.Linq.XNamespace.Get
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::Get(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.Linq.XNamespace.GetName
::System::Xml::Linq::XName* System::Xml::Linq::XNamespace::GetName(::StringW localName, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(this, ___internal__method, localName, index, count);
}
// Autogenerated method: System.Xml.Linq.XNamespace.Get
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::Get(::StringW namespaceName, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, namespaceName, index, count);
}
// Autogenerated method: System.Xml.Linq.XNamespace.ExtractLocalName
::StringW System::Xml::Linq::XNamespace::ExtractLocalName(::System::Xml::Linq::XName* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::ExtractLocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "ExtractLocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Xml.Linq.XNamespace.ExtractNamespace
::StringW System::Xml::Linq::XNamespace::ExtractNamespace(::System::WeakReference* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::ExtractNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "ExtractNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r);
}
// Autogenerated method: System.Xml.Linq.XNamespace.EnsureNamespace
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::EnsureNamespace(ByRef<::System::WeakReference*> refNmsp, ::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::EnsureNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "EnsureNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refNmsp), ::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(refNmsp), namespaceName);
}
// Autogenerated method: System.Xml.Linq.XNamespace.ToString
::StringW System::Xml::Linq::XNamespace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.Equals
bool System::Xml::Linq::XNamespace::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Xml.Linq.XNamespace.GetHashCode
int System::Xml::Linq::XNamespace::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.op_Equality
bool System::Xml::Linq::operator ==(::System::Xml::Linq::XNamespace* left, ::System::Xml::Linq::XNamespace& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Xml.Linq.XNamespace.op_Inequality
bool System::Xml::Linq::operator !=(::System::Xml::Linq::XNamespace* left, ::System::Xml::Linq::XNamespace& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
// Including type: System.Xml.Linq.XObject/System.Xml.Linq.<Annotations>d__16`1
#include "System/Xml/Linq/XObject_-Annotations-d__16_1.hpp"
// Including type: System.Xml.Linq.XContainer
#include "System/Xml/Linq/XContainer.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Xml.Linq.XObjectChangeEventArgs
#include "System/Xml/Linq/XObjectChangeEventArgs.hpp"
// Including type: System.Xml.Linq.SaveOptions
#include "System/Xml/Linq/SaveOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Linq.XContainer parent
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XContainer*& System::Xml::Linq::XObject::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object annotations
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Linq::XObject::dyn_annotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::dyn_annotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "annotations"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XObject.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XObject::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.get_Parent
::System::Xml::Linq::XElement* System::Xml::Linq::XObject::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.Annotation
::Il2CppObject* System::Xml::Linq::XObject::Annotation(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::Annotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Annotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Linq.XObject.NotifyChanged
bool System::Xml::Linq::XObject::NotifyChanged(::Il2CppObject* sender, ::System::Xml::Linq::XObjectChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::NotifyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Linq.XObject.NotifyChanging
bool System::Xml::Linq::XObject::NotifyChanging(::Il2CppObject* sender, ::System::Xml::Linq::XObjectChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::NotifyChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Linq.XObject.SkipNotify
bool System::Xml::Linq::XObject::SkipNotify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::SkipNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.GetSaveOptionsFromAnnotations
::System::Xml::Linq::SaveOptions System::Xml::Linq::XObject::GetSaveOptionsFromAnnotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::GetSaveOptionsFromAnnotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSaveOptionsFromAnnotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::SaveOptions, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XObjectChange
#include "System/Xml/Linq/XObjectChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.XObjectChange Add
::System::Xml::Linq::XObjectChange System::Xml::Linq::XObjectChange::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChange>("System.Xml.Linq", "XObjectChange", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.XObjectChange Add
void System::Xml::Linq::XObjectChange::_set_Add(::System::Xml::Linq::XObjectChange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChange", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.XObjectChange Remove
::System::Xml::Linq::XObjectChange System::Xml::Linq::XObjectChange::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChange>("System.Xml.Linq", "XObjectChange", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.XObjectChange Remove
void System::Xml::Linq::XObjectChange::_set_Remove(::System::Xml::Linq::XObjectChange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChange", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.XObjectChange Name
::System::Xml::Linq::XObjectChange System::Xml::Linq::XObjectChange::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChange>("System.Xml.Linq", "XObjectChange", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.XObjectChange Name
void System::Xml::Linq::XObjectChange::_set_Name(::System::Xml::Linq::XObjectChange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChange", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.XObjectChange Value
::System::Xml::Linq::XObjectChange System::Xml::Linq::XObjectChange::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChange>("System.Xml.Linq", "XObjectChange", "Value"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.XObjectChange Value
void System::Xml::Linq::XObjectChange::_set_Value(::System::Xml::Linq::XObjectChange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChange", "Value", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XObjectChange::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XObjectChangeEventArgs
#include "System/Xml/Linq/XObjectChangeEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Add
::System::Xml::Linq::XObjectChangeEventArgs* System::Xml::Linq::XObjectChangeEventArgs::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChangeEventArgs*>("System.Xml.Linq", "XObjectChangeEventArgs", "Add"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Add
void System::Xml::Linq::XObjectChangeEventArgs::_set_Add(::System::Xml::Linq::XObjectChangeEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChangeEventArgs", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Remove
::System::Xml::Linq::XObjectChangeEventArgs* System::Xml::Linq::XObjectChangeEventArgs::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChangeEventArgs*>("System.Xml.Linq", "XObjectChangeEventArgs", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Remove
void System::Xml::Linq::XObjectChangeEventArgs::_set_Remove(::System::Xml::Linq::XObjectChangeEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChangeEventArgs", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Name
::System::Xml::Linq::XObjectChangeEventArgs* System::Xml::Linq::XObjectChangeEventArgs::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChangeEventArgs*>("System.Xml.Linq", "XObjectChangeEventArgs", "Name"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Name
void System::Xml::Linq::XObjectChangeEventArgs::_set_Name(::System::Xml::Linq::XObjectChangeEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChangeEventArgs", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Value
::System::Xml::Linq::XObjectChangeEventArgs* System::Xml::Linq::XObjectChangeEventArgs::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChangeEventArgs*>("System.Xml.Linq", "XObjectChangeEventArgs", "Value"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Value
void System::Xml::Linq::XObjectChangeEventArgs::_set_Value(::System::Xml::Linq::XObjectChangeEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChangeEventArgs", "Value", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XObjectChange objectChange
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XObjectChange& System::Xml::Linq::XObjectChangeEventArgs::dyn_objectChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::dyn_objectChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectChange"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XObjectChange*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XObjectChangeEventArgs..cctor
void System::Xml::Linq::XObjectChangeEventArgs::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XObjectChangeEventArgs", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XNode
#include "System/Xml/Linq/XNode.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.Linq.SaveOptions
#include "System/Xml/Linq/SaveOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Linq.XNode next
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XNode*& System::Xml::Linq::XNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XNode.Remove
void System::Xml::Linq::XNode::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNode.WriteTo
void System::Xml::Linq::XNode::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XNode.AppendText
void System::Xml::Linq::XNode::AppendText(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::AppendText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Linq.XNode.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XNode::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNode.GetXmlString
::StringW System::Xml::Linq::XNode::GetXmlString(::System::Xml::Linq::SaveOptions o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::GetXmlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Xml.Linq.XNode.ToString
::StringW System::Xml::Linq::XNode::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XText
#include "System/Xml/Linq/XText.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XText::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XText.get_Value
::StringW System::Xml::Linq::XText::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XText.set_Value
void System::Xml::Linq::XText::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Linq.XText.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XText::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XText.WriteTo
void System::Xml::Linq::XText::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XText.AppendText
void System::Xml::Linq::XText::AppendText(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::AppendText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Linq.XText.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XText::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XCData
#include "System/Xml/Linq/XCData.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Linq.XCData.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XCData::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XCData::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XCData.WriteTo
void System::Xml::Linq::XCData::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XCData::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XCData.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XCData::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XCData::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XContainer
#include "System/Xml/Linq/XContainer.hpp"
// Including type: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18
#include "System/Xml/Linq/XContainer_-Nodes-d__18.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Object content
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Linq::XContainer::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XContainer.get_LastNode
::System::Xml::Linq::XNode* System::Xml::Linq::XContainer::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::get_LastNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer.Add
void System::Xml::Linq::XContainer::Add(::Il2CppObject* content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, content);
}
// Autogenerated method: System.Xml.Linq.XContainer.Nodes
::System::Collections::Generic::IEnumerable_1<::System::Xml::Linq::XNode*>* System::Xml::Linq::XContainer::Nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::Nodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Nodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::Linq::XNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer.AddAttribute
void System::Xml::Linq::XContainer::AddAttribute(::System::Xml::Linq::XAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AddAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Xml.Linq.XContainer.AddAttributeSkipNotify
void System::Xml::Linq::XContainer::AddAttributeSkipNotify(::System::Xml::Linq::XAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AddAttributeSkipNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributeSkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Xml.Linq.XContainer.AddContentSkipNotify
void System::Xml::Linq::XContainer::AddContentSkipNotify(::Il2CppObject* content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AddContentSkipNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddContentSkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, content);
}
// Autogenerated method: System.Xml.Linq.XContainer.AddNode
void System::Xml::Linq::XContainer::AddNode(::System::Xml::Linq::XNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AddNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Xml.Linq.XContainer.AddNodeSkipNotify
void System::Xml::Linq::XContainer::AddNodeSkipNotify(::System::Xml::Linq::XNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AddNodeSkipNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNodeSkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Xml.Linq.XContainer.AddString
void System::Xml::Linq::XContainer::AddString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.Linq.XContainer.AddStringSkipNotify
void System::Xml::Linq::XContainer::AddStringSkipNotify(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AddStringSkipNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStringSkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.Linq.XContainer.AppendNode
void System::Xml::Linq::XContainer::AppendNode(::System::Xml::Linq::XNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AppendNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Xml.Linq.XContainer.AppendNodeSkipNotify
void System::Xml::Linq::XContainer::AppendNodeSkipNotify(::System::Xml::Linq::XNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AppendNodeSkipNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendNodeSkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Xml.Linq.XContainer.ConvertTextToNode
void System::Xml::Linq::XContainer::ConvertTextToNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::ConvertTextToNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTextToNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer.GetDateTimeString
::StringW System::Xml::Linq::XContainer::GetDateTimeString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::GetDateTimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XContainer", "GetDateTimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Linq.XContainer.GetStringValue
::StringW System::Xml::Linq::XContainer::GetStringValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XContainer", "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Linq.XContainer.RemoveNode
void System::Xml::Linq::XContainer::RemoveNode(::System::Xml::Linq::XNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::RemoveNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Xml.Linq.XContainer.ValidateNode
void System::Xml::Linq::XContainer::ValidateNode(::System::Xml::Linq::XNode* node, ::System::Xml::Linq::XNode* previous) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::ValidateNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(previous)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, previous);
}
// Autogenerated method: System.Xml.Linq.XContainer.ValidateString
void System::Xml::Linq::XContainer::ValidateString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::ValidateString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.Linq.XContainer.WriteContentTo
void System::Xml::Linq::XContainer::WriteContentTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::WriteContentTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteContentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XContainer.AppendText
void System::Xml::Linq::XContainer::AppendText(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::AppendText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18
#include "System/Xml/Linq/XContainer_-Nodes-d__18.hpp"
// Including type: System.Xml.Linq.XNode
#include "System/Xml/Linq/XNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XNode <>2__current
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XNode*& System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Linq.XContainer <>4__this
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XContainer*& System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XNode <n>5__1
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XNode*& System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$n$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::dyn_$n$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<n>5__1"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18.System.Collections.Generic.IEnumerator<System.Xml.Linq.XNode>.get_Current
::System::Xml::Linq::XNode* System::Xml::Linq::XContainer::$Nodes$d__18::System_Collections_Generic_IEnumerator$System_Xml_Linq_XNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::System.Collections.Generic.IEnumerator<System.Xml.Linq.XNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Xml.Linq.XNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Xml::Linq::XContainer::$Nodes$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18.System.IDisposable.Dispose
void System::Xml::Linq::XContainer::$Nodes$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18.MoveNext
bool System::Xml::Linq::XContainer::$Nodes$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18.System.Collections.IEnumerator.Reset
void System::Xml::Linq::XContainer::$Nodes$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18.System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Xml::Linq::XNode*>* System::Xml::Linq::XContainer::$Nodes$d__18::System_Collections_Generic_IEnumerable$System_Xml_Linq_XNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Xml::Linq::XNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XContainer/System.Xml.Linq.<Nodes>d__18.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Xml::Linq::XContainer::$Nodes$d__18::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XContainer::$Nodes$d__18::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
// Including type: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105
#include "System/Xml/Linq/XElement_-GetAttributes-d__105.hpp"
// Including type: System.Xml.Linq.XName
#include "System/Xml/Linq/XName.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
// Including type: System.Xml.Linq.XStreamingElement
#include "System/Xml/Linq/XStreamingElement.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.Linq.XNode
#include "System/Xml/Linq/XNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Linq.XName name
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XName*& System::Xml::Linq::XElement::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Linq.XAttribute lastAttr
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XAttribute*& System::Xml::Linq::XElement::dyn_lastAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::dyn_lastAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAttr"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XElement.get_IsEmpty
bool System::Xml::Linq::XElement::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement.get_Name
::System::Xml::Linq::XName* System::Xml::Linq::XElement::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement.get_Value
::StringW System::Xml::Linq::XElement::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement.Attribute
::System::Xml::Linq::XAttribute* System::Xml::Linq::XElement::Attribute(::System::Xml::Linq::XName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XAttribute*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Linq.XElement.Attributes
::System::Collections::Generic::IEnumerable_1<::System::Xml::Linq::XAttribute*>* System::Xml::Linq::XElement::Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::Linq::XAttribute*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement.GetPrefixOfNamespace
::StringW System::Xml::Linq::XElement::GetPrefixOfNamespace(::System::Xml::Linq::XNamespace* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::GetPrefixOfNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.Linq.XElement.AppendAttribute
void System::Xml::Linq::XElement::AppendAttribute(::System::Xml::Linq::XAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::AppendAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Xml.Linq.XElement.AppendAttributeSkipNotify
void System::Xml::Linq::XElement::AppendAttributeSkipNotify(::System::Xml::Linq::XAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::AppendAttributeSkipNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendAttributeSkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Xml.Linq.XElement.GetAttributes
::System::Collections::Generic::IEnumerable_1<::System::Xml::Linq::XAttribute*>* System::Xml::Linq::XElement::GetAttributes(::System::Xml::Linq::XName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::Linq::XAttribute*>*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Linq.XElement.GetNamespaceOfPrefixInScope
::StringW System::Xml::Linq::XElement::GetNamespaceOfPrefixInScope(::StringW prefix, ::System::Xml::Linq::XElement* outOfScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::GetNamespaceOfPrefixInScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamespaceOfPrefixInScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(outOfScope)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix, outOfScope);
}
// Autogenerated method: System.Xml.Linq.XElement.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XElement::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement.WriteTo
void System::Xml::Linq::XElement::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XElement.AddAttribute
void System::Xml::Linq::XElement::AddAttribute(::System::Xml::Linq::XAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::AddAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Xml.Linq.XElement.AddAttributeSkipNotify
void System::Xml::Linq::XElement::AddAttributeSkipNotify(::System::Xml::Linq::XAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::AddAttributeSkipNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributeSkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Xml.Linq.XElement.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XElement::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement.ValidateNode
void System::Xml::Linq::XElement::ValidateNode(::System::Xml::Linq::XNode* node, ::System::Xml::Linq::XNode* previous) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::ValidateNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(previous)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, previous);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105
#include "System/Xml/Linq/XElement_-GetAttributes-d__105.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
// Including type: System.Xml.Linq.XName
#include "System/Xml/Linq/XName.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XAttribute <>2__current
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XAttribute*& System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Linq.XElement <>4__this
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XElement*& System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XAttribute <a>5__1
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XAttribute*& System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$a$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$a$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<a>5__1"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XName name
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XName*& System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Linq.XName <>3__name
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XName*& System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$3__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::dyn_$$3__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__name"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105.System.Collections.Generic.IEnumerator<System.Xml.Linq.XAttribute>.get_Current
::System::Xml::Linq::XAttribute* System::Xml::Linq::XElement::$GetAttributes$d__105::System_Collections_Generic_IEnumerator$System_Xml_Linq_XAttribute$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::System.Collections.Generic.IEnumerator<System.Xml.Linq.XAttribute>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Xml.Linq.XAttribute>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Xml::Linq::XElement::$GetAttributes$d__105::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105.System.IDisposable.Dispose
void System::Xml::Linq::XElement::$GetAttributes$d__105::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105.MoveNext
bool System::Xml::Linq::XElement::$GetAttributes$d__105::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105.System.Collections.IEnumerator.Reset
void System::Xml::Linq::XElement::$GetAttributes$d__105::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105.System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Xml::Linq::XAttribute*>* System::Xml::Linq::XElement::$GetAttributes$d__105::System_Collections_Generic_IEnumerable$System_Xml_Linq_XAttribute$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Xml::Linq::XAttribute*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XElement/System.Xml.Linq.<GetAttributes>d__105.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Xml::Linq::XElement::$GetAttributes$d__105::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XElement::$GetAttributes$d__105::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.ElementWriter
#include "System/Xml/Linq/ElementWriter.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWriter writer
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWriter*& System::Xml::Linq::ElementWriter::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::dyn_writer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.NamespaceResolver resolver
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::NamespaceResolver& System::Xml::Linq::ElementWriter::dyn_resolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::dyn_resolver");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolver"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::NamespaceResolver*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.ElementWriter..ctor
System::Xml::Linq::ElementWriter::ElementWriter(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.ElementWriter.WriteElement
void System::Xml::Linq::ElementWriter::WriteElement(::System::Xml::Linq::XElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::WriteElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Linq.ElementWriter.GetPrefixOfNamespace
::StringW System::Xml::Linq::ElementWriter::GetPrefixOfNamespace(::System::Xml::Linq::XNamespace* ns, bool allowDefaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::GetPrefixOfNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(allowDefaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns, allowDefaultNamespace);
}
// Autogenerated method: System.Xml.Linq.ElementWriter.PushAncestors
void System::Xml::Linq::ElementWriter::PushAncestors(::System::Xml::Linq::XElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::PushAncestors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushAncestors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Linq.ElementWriter.PushElement
void System::Xml::Linq::ElementWriter::PushElement(::System::Xml::Linq::XElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::PushElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Linq.ElementWriter.WriteEndElement
void System::Xml::Linq::ElementWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::WriteEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.ElementWriter.WriteFullEndElement
void System::Xml::Linq::ElementWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::WriteFullEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.ElementWriter.WriteStartElement
void System::Xml::Linq::ElementWriter::WriteStartElement(::System::Xml::Linq::XElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::ElementWriter::WriteStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.NamespaceResolver
#include "System/Xml/Linq/NamespaceResolver.hpp"
// Including type: System.Xml.Linq.NamespaceResolver/System.Xml.Linq.NamespaceDeclaration
#include "System/Xml/Linq/NamespaceResolver_NamespaceDeclaration.hpp"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 scope
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::NamespaceResolver::dyn_scope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::dyn_scope");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scope"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.NamespaceResolver/System.Xml.Linq.NamespaceDeclaration declaration
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration*& System::Xml::Linq::NamespaceResolver::dyn_declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::dyn_declaration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "declaration"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.NamespaceResolver/System.Xml.Linq.NamespaceDeclaration rover
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration*& System::Xml::Linq::NamespaceResolver::dyn_rover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::dyn_rover");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rover"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.NamespaceResolver.PushScope
void System::Xml::Linq::NamespaceResolver::PushScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::PushScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.NamespaceResolver.PopScope
void System::Xml::Linq::NamespaceResolver::PopScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::PopScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PopScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.NamespaceResolver.Add
void System::Xml::Linq::NamespaceResolver::Add(::StringW prefix, ::System::Xml::Linq::XNamespace* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.Linq.NamespaceResolver.AddFirst
void System::Xml::Linq::NamespaceResolver::AddFirst(::StringW prefix, ::System::Xml::Linq::XNamespace* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::AddFirst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddFirst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.Linq.NamespaceResolver.GetPrefixOfNamespace
::StringW System::Xml::Linq::NamespaceResolver::GetPrefixOfNamespace(::System::Xml::Linq::XNamespace* ns, bool allowDefaultNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::GetPrefixOfNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(allowDefaultNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns, allowDefaultNamespace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.NamespaceResolver/System.Xml.Linq.NamespaceDeclaration
#include "System/Xml/Linq/NamespaceResolver_NamespaceDeclaration.hpp"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::NamespaceResolver::NamespaceDeclaration::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Linq.XNamespace ns
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XNamespace*& System::Xml::Linq::NamespaceResolver::NamespaceDeclaration::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XNamespace**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scope
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::NamespaceResolver::NamespaceDeclaration::dyn_scope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration::dyn_scope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scope"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Linq.NamespaceResolver/System.Xml.Linq.NamespaceDeclaration prev
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration*& System::Xml::Linq::NamespaceResolver::NamespaceDeclaration::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::NamespaceResolver::NamespaceDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.SaveOptions
#include "System/Xml/Linq/SaveOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.SaveOptions None
::System::Xml::Linq::SaveOptions System::Xml::Linq::SaveOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::SaveOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::SaveOptions>("System.Xml.Linq", "SaveOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.SaveOptions None
void System::Xml::Linq::SaveOptions::_set_None(::System::Xml::Linq::SaveOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::SaveOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "SaveOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.SaveOptions DisableFormatting
::System::Xml::Linq::SaveOptions System::Xml::Linq::SaveOptions::_get_DisableFormatting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::SaveOptions::_get_DisableFormatting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::SaveOptions>("System.Xml.Linq", "SaveOptions", "DisableFormatting"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.SaveOptions DisableFormatting
void System::Xml::Linq::SaveOptions::_set_DisableFormatting(::System::Xml::Linq::SaveOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::SaveOptions::_set_DisableFormatting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "SaveOptions", "DisableFormatting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.SaveOptions OmitDuplicateNamespaces
::System::Xml::Linq::SaveOptions System::Xml::Linq::SaveOptions::_get_OmitDuplicateNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::SaveOptions::_get_OmitDuplicateNamespaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::SaveOptions>("System.Xml.Linq", "SaveOptions", "OmitDuplicateNamespaces"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.SaveOptions OmitDuplicateNamespaces
void System::Xml::Linq::SaveOptions::_set_OmitDuplicateNamespaces(::System::Xml::Linq::SaveOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::SaveOptions::_set_OmitDuplicateNamespaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "SaveOptions", "OmitDuplicateNamespaces", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::SaveOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::SaveOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XDocument
#include "System/Xml/Linq/XDocument.hpp"
// Including type: System.Xml.Linq.XDeclaration
#include "System/Xml/Linq/XDeclaration.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
// Including type: System.Xml.Linq.XNode
#include "System/Xml/Linq/XNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XDeclaration declaration
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDeclaration*& System::Xml::Linq::XDocument::dyn_declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::dyn_declaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "declaration"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XDocument.get_Declaration
::System::Xml::Linq::XDeclaration* System::Xml::Linq::XDocument::get_Declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::get_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDeclaration*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocument.set_Declaration
void System::Xml::Linq::XDocument::set_Declaration(::System::Xml::Linq::XDeclaration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::set_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Linq.XDocument.get_Root
::System::Xml::Linq::XElement* System::Xml::Linq::XDocument::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::get_Root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocument.IsWhitespace
bool System::Xml::Linq::XDocument::IsWhitespace(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::IsWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XDocument", "IsWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.Linq.XDocument.ValidateDocument
void System::Xml::Linq::XDocument::ValidateDocument(::System::Xml::Linq::XNode* previous, ::System::Xml::XmlNodeType allowBefore, ::System::Xml::XmlNodeType allowAfter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::ValidateDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previous), ::il2cpp_utils::ExtractType(allowBefore), ::il2cpp_utils::ExtractType(allowAfter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previous, allowBefore, allowAfter);
}
// Autogenerated method: System.Xml.Linq.XDocument.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XDocument::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocument.WriteTo
void System::Xml::Linq::XDocument::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XDocument.AddAttribute
void System::Xml::Linq::XDocument::AddAttribute(::System::Xml::Linq::XAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::AddAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Xml.Linq.XDocument.AddAttributeSkipNotify
void System::Xml::Linq::XDocument::AddAttributeSkipNotify(::System::Xml::Linq::XAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::AddAttributeSkipNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttributeSkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Xml.Linq.XDocument.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XDocument::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocument.ValidateNode
void System::Xml::Linq::XDocument::ValidateNode(::System::Xml::Linq::XNode* node, ::System::Xml::Linq::XNode* previous) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::ValidateNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(previous)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, previous);
}
// Autogenerated method: System.Xml.Linq.XDocument.ValidateString
void System::Xml::Linq::XDocument::ValidateString(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocument::ValidateString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XComment
#include "System/Xml/Linq/XComment.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XComment::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XComment::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XComment.get_Value
::StringW System::Xml::Linq::XComment::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XComment::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XComment.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XComment::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XComment::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XComment.WriteTo
void System::Xml::Linq::XComment::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XComment::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XComment.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XComment::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XComment::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XProcessingInstruction
#include "System/Xml/Linq/XProcessingInstruction.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String target
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XProcessingInstruction::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XProcessingInstruction::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String data
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XProcessingInstruction::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XProcessingInstruction::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XProcessingInstruction.get_Data
::StringW System::Xml::Linq::XProcessingInstruction::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XProcessingInstruction::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XProcessingInstruction.get_Target
::StringW System::Xml::Linq::XProcessingInstruction::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XProcessingInstruction::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XProcessingInstruction.ValidateName
void System::Xml::Linq::XProcessingInstruction::ValidateName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XProcessingInstruction::ValidateName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XProcessingInstruction", "ValidateName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Linq.XProcessingInstruction.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XProcessingInstruction::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XProcessingInstruction::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XProcessingInstruction.WriteTo
void System::Xml::Linq::XProcessingInstruction::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XProcessingInstruction::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XProcessingInstruction.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XProcessingInstruction::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XProcessingInstruction::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XDeclaration
#include "System/Xml/Linq/XDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String version
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XDeclaration::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDeclaration::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String encoding
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XDeclaration::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDeclaration::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String standalone
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XDeclaration::dyn_standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDeclaration::dyn_standalone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standalone"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XDeclaration.get_Encoding
::StringW System::Xml::Linq::XDeclaration::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDeclaration::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDeclaration.get_Standalone
::StringW System::Xml::Linq::XDeclaration::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDeclaration::get_Standalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDeclaration.get_Version
::StringW System::Xml::Linq::XDeclaration::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDeclaration::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDeclaration.ToString
::StringW System::Xml::Linq::XDeclaration::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDeclaration::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XDocumentType
#include "System/Xml/Linq/XDocumentType.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XDocumentType::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String publicId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XDocumentType::dyn_publicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::dyn_publicId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XDocumentType::dyn_systemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::dyn_systemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalSubset
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XDocumentType::dyn_internalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::dyn_internalSubset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalSubset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdInfo dtdInfo
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdInfo*& System::Xml::Linq::XDocumentType::dyn_dtdInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::dyn_dtdInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdInfo"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XDocumentType.get_InternalSubset
::StringW System::Xml::Linq::XDocumentType::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::get_InternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocumentType.get_Name
::StringW System::Xml::Linq::XDocumentType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocumentType.get_PublicId
::StringW System::Xml::Linq::XDocumentType::get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::get_PublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocumentType.get_SystemId
::StringW System::Xml::Linq::XDocumentType::get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::get_SystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocumentType.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XDocumentType::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XDocumentType.WriteTo
void System::Xml::Linq::XDocumentType::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XDocumentType.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XDocumentType::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XDocumentType::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
// Including type: System.Xml.Linq.XName
#include "System/Xml/Linq/XName.hpp"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Linq.XAttribute next
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XAttribute*& System::Xml::Linq::XAttribute::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Linq.XName name
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XName*& System::Xml::Linq::XAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XAttribute.get_IsNamespaceDeclaration
bool System::Xml::Linq::XAttribute::get_IsNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::get_IsNamespaceDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XAttribute.get_Name
::System::Xml::Linq::XName* System::Xml::Linq::XAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XAttribute.get_Value
::StringW System::Xml::Linq::XAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XAttribute.GetPrefixOfNamespace
::StringW System::Xml::Linq::XAttribute::GetPrefixOfNamespace(::System::Xml::Linq::XNamespace* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::GetPrefixOfNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.Linq.XAttribute.ValidateAttribute
void System::Xml::Linq::XAttribute::ValidateAttribute(::System::Xml::Linq::XName* name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::ValidateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XAttribute", "ValidateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: System.Xml.Linq.XAttribute.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XAttribute::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XAttribute.ToString
::StringW System::Xml::Linq::XAttribute::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XAttribute::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.Res
#include "System/Xml/Linq/Res.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Linq.Res.GetString
::StringW System::Xml::Linq::Res::GetString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::Res::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "Res", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Linq.Res.GetString
::StringW System::Xml::Linq::Res::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::Res::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "Res", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub___.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub___::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub___::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestCategories
#include "GlobalNamespace/TestCategories.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kLongRunning
::StringW GlobalNamespace::TestCategories::_get_kLongRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestCategories::_get_kLongRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TestCategories", "kLongRunning"));
}
// Autogenerated static field setter
// Set static field: static public System.String kLongRunning
void GlobalNamespace::TestCategories::_set_kLongRunning(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestCategories::_set_kLongRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestCategories", "kLongRunning", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kSingleplayer
::StringW GlobalNamespace::TestCategories::_get_kSingleplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestCategories::_get_kSingleplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TestCategories", "kSingleplayer"));
}
// Autogenerated static field setter
// Set static field: static public System.String kSingleplayer
void GlobalNamespace::TestCategories::_set_kSingleplayer(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestCategories::_set_kSingleplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestCategories", "kSingleplayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kMultiplayer
::StringW GlobalNamespace::TestCategories::_get_kMultiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestCategories::_get_kMultiplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TestCategories", "kMultiplayer"));
}
// Autogenerated static field setter
// Set static field: static public System.String kMultiplayer
void GlobalNamespace::TestCategories::_set_kMultiplayer(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestCategories::_set_kMultiplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestCategories", "kMultiplayer", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kOnlyMustPassBeforeRelease
::StringW GlobalNamespace::TestCategories::_get_kOnlyMustPassBeforeRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestCategories::_get_kOnlyMustPassBeforeRelease");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TestCategories", "kOnlyMustPassBeforeRelease"));
}
// Autogenerated static field setter
// Set static field: static public System.String kOnlyMustPassBeforeRelease
void GlobalNamespace::TestCategories::_set_kOnlyMustPassBeforeRelease(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestCategories::_set_kOnlyMustPassBeforeRelease");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestCategories", "kOnlyMustPassBeforeRelease", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PackedPlayModeBuildLogs
#include "GlobalNamespace/PackedPlayModeBuildLogs.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PackedPlayModeBuildLogs/RuntimeBuildLog> m_RuntimeBuildLogs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog>*& GlobalNamespace::PackedPlayModeBuildLogs::dyn_m_RuntimeBuildLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PackedPlayModeBuildLogs::dyn_m_RuntimeBuildLogs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RuntimeBuildLogs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PackedPlayModeBuildLogs.get_RuntimeBuildLogs
::System::Collections::Generic::List_1<::GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog>* GlobalNamespace::PackedPlayModeBuildLogs::get_RuntimeBuildLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PackedPlayModeBuildLogs::get_RuntimeBuildLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RuntimeBuildLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog>*, false>(this, ___internal__method);
}
// Autogenerated method: PackedPlayModeBuildLogs.set_RuntimeBuildLogs
void GlobalNamespace::PackedPlayModeBuildLogs::set_RuntimeBuildLogs(::System::Collections::Generic::List_1<::GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PackedPlayModeBuildLogs::set_RuntimeBuildLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RuntimeBuildLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PackedPlayModeBuildLogs/RuntimeBuildLog
#include "GlobalNamespace/PackedPlayModeBuildLogs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LogType Type
[[deprecated("Use field access instead!")]] ::UnityEngine::LogType& GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog::dyn_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::UnityEngine::LogType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog::dyn_Message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PackedPlayModeBuildLogs/RuntimeBuildLog..ctor
// ABORTED elsewhere.  GlobalNamespace::PackedPlayModeBuildLogs::RuntimeBuildLog::RuntimeBuildLog(::UnityEngine::LogType type, ::StringW message)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetReferenceUIRestriction
#include "UnityEngine/AssetReferenceUIRestriction.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetReferenceUIRestriction.ValidateAsset
bool UnityEngine::AssetReferenceUIRestriction::ValidateAsset(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetReferenceUIRestriction::ValidateAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AssetReferenceUIRestriction.ValidateAsset
bool UnityEngine::AssetReferenceUIRestriction::ValidateAsset(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetReferenceUIRestriction::ValidateAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetReferenceUILabelRestriction
#include "UnityEngine/AssetReferenceUILabelRestriction.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] m_AllowedLabels
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& UnityEngine::AssetReferenceUILabelRestriction::dyn_m_AllowedLabels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetReferenceUILabelRestriction::dyn_m_AllowedLabels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowedLabels"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String m_CachedToString
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AssetReferenceUILabelRestriction::dyn_m_CachedToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetReferenceUILabelRestriction::dyn_m_CachedToString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedToString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AssetReferenceUILabelRestriction.ValidateAsset
bool UnityEngine::AssetReferenceUILabelRestriction::ValidateAsset(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetReferenceUILabelRestriction::ValidateAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AssetReferenceUILabelRestriction.ValidateAsset
bool UnityEngine::AssetReferenceUILabelRestriction::ValidateAsset(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetReferenceUILabelRestriction::ValidateAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: UnityEngine.AssetReferenceUILabelRestriction.ToString
::StringW UnityEngine::AssetReferenceUILabelRestriction::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetReferenceUILabelRestriction::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.AsyncOperations.InitalizationObjectsOperation
#include "UnityEngine/ResourceManagement/AsyncOperations/InitalizationObjectsOperation.hpp"
// Including type: UnityEngine.AddressableAssets.Initialization.ResourceManagerRuntimeData
#include "UnityEngine/AddressableAssets/Initialization/ResourceManagerRuntimeData.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl
#include "UnityEngine/AddressableAssets/AddressablesImpl.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.AddressableAssets.Initialization.ResourceManagerRuntimeData> m_RtdOp
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::Initialization::ResourceManagerRuntimeData*>& UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::dyn_m_RtdOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::dyn_m_RtdOp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RtdOp"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::Initialization::ResourceManagerRuntimeData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.AddressablesImpl m_Addressables
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::dyn_m_Addressables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::dyn_m_Addressables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Addressables"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle>> m_DepOp
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>& UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::dyn_m_DepOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::dyn_m_DepOp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DepOp"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.InitalizationObjectsOperation.Init
void UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::Init(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::Initialization::ResourceManagerRuntimeData*> rtdOp, ::UnityEngine::AddressableAssets::AddressablesImpl* addressables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rtdOp), ::il2cpp_utils::ExtractType(addressables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rtdOp, addressables);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.InitalizationObjectsOperation.LogRuntimeWarnings
bool UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::LogRuntimeWarnings(::StringW pathToBuildLogs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::LogRuntimeWarnings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogRuntimeWarnings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathToBuildLogs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pathToBuildLogs);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.InitalizationObjectsOperation.<Execute>b__8_0
void UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::$Execute$b__8_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::<Execute>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Execute>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.InitalizationObjectsOperation.get_DebugName
::StringW UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::get_DebugName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::get_DebugName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.InitalizationObjectsOperation.InvokeWaitForCompletion
bool UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::InvokeWaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::InvokeWaitForCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.InitalizationObjectsOperation.Execute
void UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceManagement::AsyncOperations::InitalizationObjectsOperation::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.InvalidKeyException
#include "UnityEngine/AddressableAssets/InvalidKeyException.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::AddressableAssets::InvalidKeyException::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::InvalidKeyException::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::AddressableAssets::InvalidKeyException::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::InvalidKeyException::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.InvalidKeyException.get_Key
::Il2CppObject* UnityEngine::AddressableAssets::InvalidKeyException::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::InvalidKeyException::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.InvalidKeyException.set_Key
void UnityEngine::AddressableAssets::InvalidKeyException::set_Key(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::InvalidKeyException::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.InvalidKeyException.get_Type
::System::Type* UnityEngine::AddressableAssets::InvalidKeyException::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::InvalidKeyException::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.InvalidKeyException.set_Type
void UnityEngine::AddressableAssets::InvalidKeyException::set_Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::InvalidKeyException::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.InvalidKeyException.get_Message
::StringW UnityEngine::AddressableAssets::InvalidKeyException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::InvalidKeyException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.Addressables
#include "UnityEngine/AddressableAssets/Addressables.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl
#include "UnityEngine/AddressableAssets/AddressablesImpl.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IInstanceProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/IInstanceProvider.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator
#include "UnityEngine/AddressableAssets/ResourceLocators/IResourceLocator.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters
#include "UnityEngine/ResourceManagement/ResourceProviders/InstantiationParameters.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean reinitializeAddressables
bool UnityEngine::AddressableAssets::Addressables::_get_reinitializeAddressables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_get_reinitializeAddressables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.AddressableAssets", "Addressables", "reinitializeAddressables"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean reinitializeAddressables
void UnityEngine::AddressableAssets::Addressables::_set_reinitializeAddressables(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_set_reinitializeAddressables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables", "reinitializeAddressables", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.AddressableAssets.AddressablesImpl m_AddressablesInstance
::UnityEngine::AddressableAssets::AddressablesImpl* UnityEngine::AddressableAssets::Addressables::_get_m_AddressablesInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_get_m_AddressablesInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AddressableAssets::AddressablesImpl*>("UnityEngine.AddressableAssets", "Addressables", "m_AddressablesInstance"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.AddressableAssets.AddressablesImpl m_AddressablesInstance
void UnityEngine::AddressableAssets::Addressables::_set_m_AddressablesInstance(::UnityEngine::AddressableAssets::AddressablesImpl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_set_m_AddressablesInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables", "m_AddressablesInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kAddressablesRuntimeDataPath
::StringW UnityEngine::AddressableAssets::Addressables::_get_kAddressablesRuntimeDataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_get_kAddressablesRuntimeDataPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.AddressableAssets", "Addressables", "kAddressablesRuntimeDataPath"));
}
// Autogenerated static field setter
// Set static field: static public System.String kAddressablesRuntimeDataPath
void UnityEngine::AddressableAssets::Addressables::_set_kAddressablesRuntimeDataPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_set_kAddressablesRuntimeDataPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables", "kAddressablesRuntimeDataPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_AddressablesLogConditional
::StringW UnityEngine::AddressableAssets::Addressables::_get_k_AddressablesLogConditional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_get_k_AddressablesLogConditional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.AddressableAssets", "Addressables", "k_AddressablesLogConditional"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_AddressablesLogConditional
void UnityEngine::AddressableAssets::Addressables::_set_k_AddressablesLogConditional(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_set_k_AddressablesLogConditional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables", "k_AddressablesLogConditional", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kAddressablesRuntimeBuildLogPath
::StringW UnityEngine::AddressableAssets::Addressables::_get_kAddressablesRuntimeBuildLogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_get_kAddressablesRuntimeBuildLogPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.AddressableAssets", "Addressables", "kAddressablesRuntimeBuildLogPath"));
}
// Autogenerated static field setter
// Set static field: static public System.String kAddressablesRuntimeBuildLogPath
void UnityEngine::AddressableAssets::Addressables::_set_kAddressablesRuntimeBuildLogPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_set_kAddressablesRuntimeBuildLogPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables", "kAddressablesRuntimeBuildLogPath", value));
}
// Autogenerated static field getter
// Get static field: static System.String LibraryPath
::StringW UnityEngine::AddressableAssets::Addressables::_get_LibraryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_get_LibraryPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.AddressableAssets", "Addressables", "LibraryPath"));
}
// Autogenerated static field setter
// Set static field: static System.String LibraryPath
void UnityEngine::AddressableAssets::Addressables::_set_LibraryPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::_set_LibraryPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables", "LibraryPath", value));
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_m_Addressables
::UnityEngine::AddressableAssets::AddressablesImpl* UnityEngine::AddressableAssets::Addressables::get_m_Addressables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_m_Addressables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_m_Addressables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AddressableAssets::AddressablesImpl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_ResourceManager
::UnityEngine::ResourceManagement::ResourceManager* UnityEngine::AddressableAssets::Addressables::get_ResourceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_ResourceManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_ResourceManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::ResourceManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_Instance
::UnityEngine::AddressableAssets::AddressablesImpl* UnityEngine::AddressableAssets::Addressables::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AddressableAssets::AddressablesImpl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_InstanceProvider
::UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider* UnityEngine::AddressableAssets::Addressables::get_InstanceProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_InstanceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_InstanceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_InternalIdTransformFunc
::System::Func_2<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::StringW>* UnityEngine::AddressableAssets::Addressables::get_InternalIdTransformFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_InternalIdTransformFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_InternalIdTransformFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.set_InternalIdTransformFunc
void UnityEngine::AddressableAssets::Addressables::set_InternalIdTransformFunc(::System::Func_2<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::set_InternalIdTransformFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "set_InternalIdTransformFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_StreamingAssetsSubFolder
::StringW UnityEngine::AddressableAssets::Addressables::get_StreamingAssetsSubFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_StreamingAssetsSubFolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_StreamingAssetsSubFolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_BuildPath
::StringW UnityEngine::AddressableAssets::Addressables::get_BuildPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_BuildPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_BuildPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_PlayerBuildDataPath
::StringW UnityEngine::AddressableAssets::Addressables::get_PlayerBuildDataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_PlayerBuildDataPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_PlayerBuildDataPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_RuntimePath
::StringW UnityEngine::AddressableAssets::Addressables::get_RuntimePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_RuntimePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_RuntimePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_ResourceLocators
::System::Collections::Generic::IEnumerable_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>* UnityEngine::AddressableAssets::Addressables::get_ResourceLocators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_ResourceLocators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_ResourceLocators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.get_InitializationOperation
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::Addressables::get_InitializationOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::get_InitializationOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "get_InitializationOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables..cctor
void UnityEngine::AddressableAssets::Addressables::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ResolveInternalId
::StringW UnityEngine::AddressableAssets::Addressables::ResolveInternalId(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ResolveInternalId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ResolveInternalId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InternalSafeSerializationLog
void UnityEngine::AddressableAssets::Addressables::InternalSafeSerializationLog(::StringW msg, ::UnityEngine::LogType logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InternalSafeSerializationLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InternalSafeSerializationLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(logType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg, logType);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InternalSafeSerializationLogFormat
void UnityEngine::AddressableAssets::Addressables::InternalSafeSerializationLogFormat(::StringW format, ::UnityEngine::LogType logType, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InternalSafeSerializationLogFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InternalSafeSerializationLogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, logType, args);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Log
void UnityEngine::AddressableAssets::Addressables::Log(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LogFormat
void UnityEngine::AddressableAssets::Addressables::LogFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LogFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LogWarning
void UnityEngine::AddressableAssets::Addressables::LogWarning(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LogWarningFormat
void UnityEngine::AddressableAssets::Addressables::LogWarningFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LogWarningFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LogWarningFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LogError
void UnityEngine::AddressableAssets::Addressables::LogError(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LogException
void UnityEngine::AddressableAssets::Addressables::LogException(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op, ex);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LogErrorFormat
void UnityEngine::AddressableAssets::Addressables::LogErrorFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LogErrorFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LogErrorFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Initialize
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::Addressables::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InitializeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::Addressables::InitializeAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InitializeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InitializeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadContentCatalog
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::Addressables::LoadContentCatalog(::StringW catalogPath, ::StringW providerSuffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadContentCatalog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadContentCatalog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(catalogPath), ::il2cpp_utils::ExtractType(providerSuffix)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, catalogPath, providerSuffix);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadContentCatalogAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::Addressables::LoadContentCatalogAsync(::StringW catalogPath, ::StringW providerSuffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadContentCatalogAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadContentCatalogAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(catalogPath), ::il2cpp_utils::ExtractType(providerSuffix)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, catalogPath, providerSuffix);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadContentCatalogAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::Addressables::LoadContentCatalogAsync(::StringW catalogPath, bool autoReleaseHandle, ::StringW providerSuffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadContentCatalogAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadContentCatalogAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(catalogPath), ::il2cpp_utils::ExtractType(autoReleaseHandle), ::il2cpp_utils::ExtractType(providerSuffix)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, catalogPath, autoReleaseHandle, providerSuffix);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadResourceLocations
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::Addressables::LoadResourceLocations(::System::Collections::Generic::IList_1<::Il2CppObject*>* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadResourceLocations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadResourceLocations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, mode, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadResourceLocationsAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::Addressables::LoadResourceLocationsAsync(::System::Collections::Generic::IList_1<::Il2CppObject*>* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadResourceLocationsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadResourceLocationsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, mode, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadResourceLocationsAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::Addressables::LoadResourceLocationsAsync(::System::Collections::IEnumerable* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadResourceLocationsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadResourceLocationsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, mode, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadResourceLocations
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::Addressables::LoadResourceLocations(::Il2CppObject* key, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadResourceLocations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadResourceLocations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadResourceLocationsAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::Addressables::LoadResourceLocationsAsync(::Il2CppObject* key, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadResourceLocationsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadResourceLocationsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Release
void UnityEngine::AddressableAssets::Addressables::Release(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ReleaseInstance
bool UnityEngine::AddressableAssets::Addressables::ReleaseInstance(::UnityEngine::GameObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ReleaseInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ReleaseInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ReleaseInstance
bool UnityEngine::AddressableAssets::Addressables::ReleaseInstance(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ReleaseInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ReleaseInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ReleaseInstance
bool UnityEngine::AddressableAssets::Addressables::ReleaseInstance(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ReleaseInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ReleaseInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.GetDownloadSize
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::Addressables::GetDownloadSize(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::GetDownloadSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "GetDownloadSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.GetDownloadSizeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::Addressables::GetDownloadSizeAsync(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::GetDownloadSizeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "GetDownloadSizeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.GetDownloadSizeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::Addressables::GetDownloadSizeAsync(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::GetDownloadSizeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "GetDownloadSizeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.GetDownloadSizeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::Addressables::GetDownloadSizeAsync(::System::Collections::Generic::IList_1<::Il2CppObject*>* keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::GetDownloadSizeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "GetDownloadSizeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.GetDownloadSizeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::Addressables::GetDownloadSizeAsync(::System::Collections::IEnumerable* keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::GetDownloadSizeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "GetDownloadSizeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.DownloadDependencies
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::Addressables::DownloadDependencies(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::DownloadDependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "DownloadDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.DownloadDependenciesAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::Addressables::DownloadDependenciesAsync(::Il2CppObject* key, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::DownloadDependenciesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "DownloadDependenciesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.DownloadDependenciesAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::Addressables::DownloadDependenciesAsync(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::DownloadDependenciesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "DownloadDependenciesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, locations, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.DownloadDependenciesAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::Addressables::DownloadDependenciesAsync(::System::Collections::Generic::IList_1<::Il2CppObject*>* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::DownloadDependenciesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "DownloadDependenciesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, mode, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.DownloadDependenciesAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::Addressables::DownloadDependenciesAsync(::System::Collections::IEnumerable* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::DownloadDependenciesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "DownloadDependenciesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, mode, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
void UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
void UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, locations);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
void UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::System::Collections::Generic::IList_1<::Il2CppObject*>* keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
void UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::System::Collections::IEnumerable* keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
void UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::Il2CppObject* key, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, locations, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::System::Collections::Generic::IList_1<::Il2CppObject*>* keys, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::System::Collections::IEnumerable* keys, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearDependencyCacheAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync(::StringW key, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Instantiate
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::Instantiate(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, parent, instantiateInWorldSpace, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Instantiate
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::Instantiate(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, position, rotation, parent, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Instantiate
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::Instantiate(::Il2CppObject* key, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, parent, instantiateInWorldSpace, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Instantiate
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::Instantiate(::Il2CppObject* key, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, position, rotation, parent, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Instantiate
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::Instantiate(::Il2CppObject* key, ::UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(instantiateParameters), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, instantiateParameters, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.Instantiate
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::Instantiate(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(instantiateParameters), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, instantiateParameters, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::InstantiateAsync(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, parent, instantiateInWorldSpace, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::InstantiateAsync(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, position, rotation, parent, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::InstantiateAsync(::Il2CppObject* key, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, parent, instantiateInWorldSpace, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::InstantiateAsync(::Il2CppObject* key, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, position, rotation, parent, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::InstantiateAsync(::Il2CppObject* key, ::UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(instantiateParameters), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, instantiateParameters, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::Addressables::InstantiateAsync(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(instantiateParameters), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, instantiateParameters, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadScene
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::LoadScene(::Il2CppObject* key, ::UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, loadMode, activateOnLoad, priority);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadScene
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::LoadScene(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, loadMode, activateOnLoad, priority);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::LoadSceneAsync(::Il2CppObject* key, ::UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, loadMode, activateOnLoad, priority);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.LoadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::LoadSceneAsync(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, location, loadMode, activateOnLoad, priority);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.UnloadScene
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::UnloadScene(::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance scene, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::UnloadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "UnloadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.UnloadScene
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::UnloadScene(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::UnloadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "UnloadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.UnloadScene
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::UnloadScene(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::UnloadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "UnloadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.UnloadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::UnloadSceneAsync(::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance scene, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.UnloadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::UnloadSceneAsync(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.UnloadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::Addressables::UnloadSceneAsync(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.CheckForCatalogUpdates
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::StringW>*> UnityEngine::AddressableAssets::Addressables::CheckForCatalogUpdates(bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::CheckForCatalogUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "CheckForCatalogUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::StringW>*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.UpdateCatalogs
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*> UnityEngine::AddressableAssets::Addressables::UpdateCatalogs(::System::Collections::Generic::IEnumerable_1<::StringW>* catalogs, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::UpdateCatalogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "UpdateCatalogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(catalogs), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, catalogs, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.AddResourceLocator
void UnityEngine::AddressableAssets::Addressables::AddResourceLocator(::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator* locator, ::StringW localCatalogHash, ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* remoteCatalogLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::AddResourceLocator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "AddResourceLocator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locator), ::il2cpp_utils::ExtractType(localCatalogHash), ::il2cpp_utils::ExtractType(remoteCatalogLocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, locator, localCatalogHash, remoteCatalogLocation);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.RemoveResourceLocator
void UnityEngine::AddressableAssets::Addressables::RemoveResourceLocator(::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator* locator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::RemoveResourceLocator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "RemoveResourceLocator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, locator);
}
// Autogenerated method: UnityEngine.AddressableAssets.Addressables.ClearResourceLocators
void UnityEngine::AddressableAssets::Addressables::ClearResourceLocators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::ClearResourceLocators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "Addressables", "ClearResourceLocators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode
#include "UnityEngine/AddressableAssets/Addressables.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode None
::UnityEngine::AddressableAssets::Addressables::MergeMode UnityEngine::AddressableAssets::Addressables::MergeMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AddressableAssets::Addressables::MergeMode>("UnityEngine.AddressableAssets", "Addressables/MergeMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode None
void UnityEngine::AddressableAssets::Addressables::MergeMode::_set_None(::UnityEngine::AddressableAssets::Addressables::MergeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables/MergeMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode UseFirst
::UnityEngine::AddressableAssets::Addressables::MergeMode UnityEngine::AddressableAssets::Addressables::MergeMode::_get_UseFirst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::_get_UseFirst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AddressableAssets::Addressables::MergeMode>("UnityEngine.AddressableAssets", "Addressables/MergeMode", "UseFirst"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode UseFirst
void UnityEngine::AddressableAssets::Addressables::MergeMode::_set_UseFirst(::UnityEngine::AddressableAssets::Addressables::MergeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::_set_UseFirst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables/MergeMode", "UseFirst", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode Union
::UnityEngine::AddressableAssets::Addressables::MergeMode UnityEngine::AddressableAssets::Addressables::MergeMode::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AddressableAssets::Addressables::MergeMode>("UnityEngine.AddressableAssets", "Addressables/MergeMode", "Union"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode Union
void UnityEngine::AddressableAssets::Addressables::MergeMode::_set_Union(::UnityEngine::AddressableAssets::Addressables::MergeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables/MergeMode", "Union", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode Intersection
::UnityEngine::AddressableAssets::Addressables::MergeMode UnityEngine::AddressableAssets::Addressables::MergeMode::_get_Intersection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::_get_Intersection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AddressableAssets::Addressables::MergeMode>("UnityEngine.AddressableAssets", "Addressables/MergeMode", "Intersection"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode Intersection
void UnityEngine::AddressableAssets::Addressables::MergeMode::_set_Intersection(::UnityEngine::AddressableAssets::Addressables::MergeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::_set_Intersection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "Addressables/MergeMode", "Intersection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AddressableAssets::Addressables::MergeMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Addressables::MergeMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl
#include "UnityEngine/AddressableAssets/AddressablesImpl.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo
#include "UnityEngine/AddressableAssets/AddressablesImpl_ResourceLocatorInfo.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeyOp
#include "UnityEngine/AddressableAssets/AddressablesImpl_LoadResourceLocationKeyOp.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeysOp
#include "UnityEngine/AddressableAssets/AddressablesImpl_LoadResourceLocationKeysOp.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass33_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass33_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass53_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass53_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass60_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass60_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass66_0`1
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass66_0_1.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass70_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass70_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass72_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass72_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass75_0`1
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass75_0_1.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass77_0`1
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass77_0_1.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass83_0`1
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass83_0_1.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass85_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass85_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass86_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass86_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass89_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass89_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass92_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass92_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass94_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass94_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass98_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass98_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass99_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass99_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass100_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass100_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass105_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass105_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass107_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass107_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass110_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass110_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass116_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass116_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass117_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass117_0.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass124_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass124_0.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IInstanceProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/IInstanceProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ISceneProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/ISceneProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator
#include "UnityEngine/AddressableAssets/ResourceLocators/IResourceLocator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.ResourceManagement.Util.IAllocationStrategy
#include "UnityEngine/ResourceManagement/Util/IAllocationStrategy.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase
#include "UnityEngine/ResourceManagement/ResourceLocations/ResourceLocationBase.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters
#include "UnityEngine/ResourceManagement/ResourceProviders/InstantiationParameters.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IAssetBundleResource
#include "UnityEngine/ResourceManagement/ResourceProviders/IAssetBundleResource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String kCacheDataFolder
::StringW UnityEngine::AddressableAssets::AddressablesImpl::_get_kCacheDataFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::_get_kCacheDataFolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.AddressableAssets", "AddressablesImpl", "kCacheDataFolder"));
}
// Autogenerated static field setter
// Set static field: static System.String kCacheDataFolder
void UnityEngine::AddressableAssets::AddressablesImpl::_set_kCacheDataFolder(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::_set_kCacheDataFolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "AddressablesImpl", "kCacheDataFolder", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceManager m_ResourceManager
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceManager*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_ResourceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_ResourceManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResourceManager"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::ResourceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceProviders.IInstanceProvider m_InstanceProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_InstanceProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_InstanceProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InstanceProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ResourceManagement.ResourceProviders.ISceneProvider SceneProvider
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceProviders::ISceneProvider*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_SceneProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_SceneProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SceneProvider"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::ResourceProviders::ISceneProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo> m_ResourceLocators
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*>*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_ResourceLocators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_ResourceLocators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResourceLocators"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator> m_InitializationOperation
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_InitializationOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_InitializationOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitializationOperation"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.List`1<System.String>> m_ActiveCheckUpdateOperation
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::StringW>*>& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_ActiveCheckUpdateOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_ActiveCheckUpdateOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveCheckUpdateOperation"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::StringW>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.List`1<UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator>> m_ActiveUpdateOperation
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*>& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_ActiveUpdateOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_ActiveUpdateOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveUpdateOperation"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_OnHandleCompleteAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_OnHandleCompleteAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_OnHandleCompleteAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHandleCompleteAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_OnSceneHandleCompleteAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_OnSceneHandleCompleteAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_OnSceneHandleCompleteAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSceneHandleCompleteAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_OnHandleDestroyedAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_OnHandleDestroyedAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_OnHandleDestroyedAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnHandleDestroyedAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_resultToHandle
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Il2CppObject*, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_resultToHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_resultToHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_resultToHandle"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Il2CppObject*, ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.HashSet`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_SceneInstances
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_SceneInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_m_SceneInstances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SceneInstances"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean hasStartedInitialization
[[deprecated("Use field access instead!")]] bool& UnityEngine::AddressableAssets::AddressablesImpl::dyn_hasStartedInitialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::dyn_hasStartedInitialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasStartedInitialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_InstanceProvider
::UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider* UnityEngine::AddressableAssets::AddressablesImpl::get_InstanceProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_InstanceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstanceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.set_InstanceProvider
void UnityEngine::AddressableAssets::AddressablesImpl::set_InstanceProvider(::UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::set_InstanceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InstanceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_ResourceManager
::UnityEngine::ResourceManagement::ResourceManager* UnityEngine::AddressableAssets::AddressablesImpl::get_ResourceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_ResourceManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResourceManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::ResourceManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_SceneOperationCount
int UnityEngine::AddressableAssets::AddressablesImpl::get_SceneOperationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_SceneOperationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SceneOperationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_TrackedHandleCount
int UnityEngine::AddressableAssets::AddressablesImpl::get_TrackedHandleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_TrackedHandleCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrackedHandleCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_InternalIdTransformFunc
::System::Func_2<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::StringW>* UnityEngine::AddressableAssets::AddressablesImpl::get_InternalIdTransformFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_InternalIdTransformFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalIdTransformFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.set_InternalIdTransformFunc
void UnityEngine::AddressableAssets::AddressablesImpl::set_InternalIdTransformFunc(::System::Func_2<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::set_InternalIdTransformFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalIdTransformFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_ChainOperation
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::AddressablesImpl::get_ChainOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_ChainOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_ShouldChainRequest
bool UnityEngine::AddressableAssets::AddressablesImpl::get_ShouldChainRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_ShouldChainRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldChainRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_StreamingAssetsSubFolder
::StringW UnityEngine::AddressableAssets::AddressablesImpl::get_StreamingAssetsSubFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_StreamingAssetsSubFolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StreamingAssetsSubFolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_BuildPath
::StringW UnityEngine::AddressableAssets::AddressablesImpl::get_BuildPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_BuildPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuildPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_PlayerBuildDataPath
::StringW UnityEngine::AddressableAssets::AddressablesImpl::get_PlayerBuildDataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_PlayerBuildDataPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerBuildDataPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_RuntimePath
::StringW UnityEngine::AddressableAssets::AddressablesImpl::get_RuntimePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_RuntimePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RuntimePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_ResourceLocators
::System::Collections::Generic::IEnumerable_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>* UnityEngine::AddressableAssets::AddressablesImpl::get_ResourceLocators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_ResourceLocators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResourceLocators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.get_CatalogsWithAvailableUpdates
::System::Collections::Generic::IEnumerable_1<::StringW>* UnityEngine::AddressableAssets::AddressablesImpl::get_CatalogsWithAvailableUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::get_CatalogsWithAvailableUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CatalogsWithAvailableUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ReleaseSceneManagerOperation
void UnityEngine::AddressableAssets::AddressablesImpl::ReleaseSceneManagerOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ReleaseSceneManagerOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseSceneManagerOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.OnSceneUnloaded
void UnityEngine::AddressableAssets::AddressablesImpl::OnSceneUnloaded(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::OnSceneUnloaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSceneUnloaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scene);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.Log
void UnityEngine::AddressableAssets::AddressablesImpl::Log(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LogFormat
void UnityEngine::AddressableAssets::AddressablesImpl::LogFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LogFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LogWarning
void UnityEngine::AddressableAssets::AddressablesImpl::LogWarning(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LogWarningFormat
void UnityEngine::AddressableAssets::AddressablesImpl::LogWarningFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LogWarningFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarningFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LogError
void UnityEngine::AddressableAssets::AddressablesImpl::LogError(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LogException
void UnityEngine::AddressableAssets::AddressablesImpl::LogException(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, ex);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LogErrorFormat
void UnityEngine::AddressableAssets::AddressablesImpl::LogErrorFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LogErrorFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogErrorFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ResolveInternalId
::StringW UnityEngine::AddressableAssets::AddressablesImpl::ResolveInternalId(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResolveInternalId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveInternalId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.AddResourceLocator
void UnityEngine::AddressableAssets::AddressablesImpl::AddResourceLocator(::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator* loc, ::StringW localCatalogHash, ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* remoteCatalogLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::AddResourceLocator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddResourceLocator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loc), ::il2cpp_utils::ExtractType(localCatalogHash), ::il2cpp_utils::ExtractType(remoteCatalogLocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loc, localCatalogHash, remoteCatalogLocation);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.RemoveResourceLocator
void UnityEngine::AddressableAssets::AddressablesImpl::RemoveResourceLocator(::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator* loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::RemoveResourceLocator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveResourceLocator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loc);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ClearResourceLocators
void UnityEngine::AddressableAssets::AddressablesImpl::ClearResourceLocators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ClearResourceLocators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearResourceLocators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GetResourceLocations
bool UnityEngine::AddressableAssets::AddressablesImpl::GetResourceLocations(::Il2CppObject* key, ::System::Type* type, ByRef<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> locations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GetResourceLocations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResourceLocations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, type, byref(locations));
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GetResourceLocations
bool UnityEngine::AddressableAssets::AddressablesImpl::GetResourceLocations(::System::Collections::IEnumerable* keys, ::System::Type* type, ::UnityEngine::AddressableAssets::Addressables::MergeMode merge, ByRef<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> locations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GetResourceLocations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResourceLocations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(merge), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keys, type, merge, byref(locations));
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InitializeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::AddressablesImpl::InitializeAsync(::StringW runtimeDataPath, ::StringW providerSuffix, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InitializeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runtimeDataPath), ::il2cpp_utils::ExtractType(providerSuffix), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(this, ___internal__method, runtimeDataPath, providerSuffix, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InitializeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::AddressablesImpl::InitializeAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InitializeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.CreateCatalogLocationWithHashDependencies
::UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase* UnityEngine::AddressableAssets::AddressablesImpl::CreateCatalogLocationWithHashDependencies(::StringW catalogPath, ::StringW hashFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::CreateCatalogLocationWithHashDependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCatalogLocationWithHashDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(catalogPath), ::il2cpp_utils::ExtractType(hashFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase*, false>(this, ___internal__method, catalogPath, hashFilePath);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LoadContentCatalogAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::AddressablesImpl::LoadContentCatalogAsync(::StringW catalogPath, bool autoReleaseHandle, ::StringW providerSuffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadContentCatalogAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadContentCatalogAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(catalogPath), ::il2cpp_utils::ExtractType(autoReleaseHandle), ::il2cpp_utils::ExtractType(providerSuffix)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(this, ___internal__method, catalogPath, autoReleaseHandle, providerSuffix);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.TrackHandle
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::TrackHandle(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::TrackHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.TrackHandle
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::AddressablesImpl::TrackHandle(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::TrackHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ClearTrackHandles
void UnityEngine::AddressableAssets::AddressablesImpl::ClearTrackHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ClearTrackHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTrackHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LoadResourceLocationsWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationsWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::System::Collections::IEnumerable* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationsWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadResourceLocationsWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(this, ___internal__method, dep, keys, mode, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LoadResourceLocationsAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationsAsync(::System::Collections::IEnumerable* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadResourceLocationsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(this, ___internal__method, keys, mode, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LoadResourceLocationsWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationsWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::Il2CppObject* key, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationsWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadResourceLocationsWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(this, ___internal__method, dep, key, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LoadResourceLocationsAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationsAsync(::Il2CppObject* key, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadResourceLocationsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(this, ___internal__method, key, type);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.OnHandleDestroyed
void UnityEngine::AddressableAssets::AddressablesImpl::OnHandleDestroyed(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::OnHandleDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHandleDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.OnSceneHandleCompleted
void UnityEngine::AddressableAssets::AddressablesImpl::OnSceneHandleCompleted(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::OnSceneHandleCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSceneHandleCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.OnHandleCompleted
void UnityEngine::AddressableAssets::AddressablesImpl::OnHandleCompleted(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::OnHandleCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnHandleCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.Release
void UnityEngine::AddressableAssets::AddressablesImpl::Release(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GetDownloadSizeWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::AddressablesImpl::GetDownloadSizeWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GetDownloadSizeWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadSizeWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(this, ___internal__method, dep, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GetDownloadSizeWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::AddressablesImpl::GetDownloadSizeWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::System::Collections::IEnumerable* keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GetDownloadSizeWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadSizeWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(keys)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(this, ___internal__method, dep, keys);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GetDownloadSizeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::AddressablesImpl::GetDownloadSizeAsync(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GetDownloadSizeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadSizeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GetDownloadSizeAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::AddressablesImpl::GetDownloadSizeAsync(::System::Collections::IEnumerable* keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GetDownloadSizeAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadSizeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(this, ___internal__method, keys);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.DownloadDependenciesAsyncWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsyncWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::Il2CppObject* key, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsyncWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadDependenciesAsyncWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method, dep, key, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GatherDependenciesFromLocations
::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* UnityEngine::AddressableAssets::AddressablesImpl::GatherDependenciesFromLocations(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GatherDependenciesFromLocations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "AddressablesImpl", "GatherDependenciesFromLocations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, locations);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.DownloadDependenciesAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsync(::Il2CppObject* key, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadDependenciesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method, key, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.DownloadDependenciesAsyncWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsyncWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsyncWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadDependenciesAsyncWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(locations), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method, dep, locations, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.DownloadDependenciesAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsync(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadDependenciesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method, locations, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.DownloadDependenciesAsyncWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsyncWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::System::Collections::IEnumerable* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsyncWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadDependenciesAsyncWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method, dep, keys, mode, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.DownloadDependenciesAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsync(::System::Collections::IEnumerable* keys, ::UnityEngine::AddressableAssets::Addressables::MergeMode mode, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::DownloadDependenciesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadDependenciesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(this, ___internal__method, keys, mode, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ClearDependencyCacheForKey
bool UnityEngine::AddressableAssets::AddressablesImpl::ClearDependencyCacheForKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ClearDependencyCacheForKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDependencyCacheForKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.AutoReleaseHandleOnCompletion
void UnityEngine::AddressableAssets::AddressablesImpl::AutoReleaseHandleOnCompletion(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::AutoReleaseHandleOnCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoReleaseHandleOnCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ClearDependencyCacheAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::AddressablesImpl::ClearDependencyCacheAsync(::Il2CppObject* key, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(this, ___internal__method, key, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ClearDependencyCacheAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::AddressablesImpl::ClearDependencyCacheAsync(::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* locations, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locations), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(this, ___internal__method, locations, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ClearDependencyCacheAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::AddressablesImpl::ClearDependencyCacheAsync(::System::Collections::IEnumerable* keys, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ClearDependencyCacheAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDependencyCacheAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(this, ___internal__method, keys, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(this, ___internal__method, location, parent, instantiateInWorldSpace, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(this, ___internal__method, location, position, rotation, parent, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync(::Il2CppObject* key, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(this, ___internal__method, key, parent, instantiateInWorldSpace, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync(::Il2CppObject* key, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(this, ___internal__method, key, position, rotation, parent, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InstantiateWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::AddressablesImpl::InstantiateWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::Il2CppObject* key, ::UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InstantiateWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(instantiateParameters), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(this, ___internal__method, dep, key, instantiateParameters, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync(::Il2CppObject* key, ::UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(instantiateParameters), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(this, ___internal__method, key, instantiateParameters, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InstantiateWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::AddressablesImpl::InstantiateWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InstantiateWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(instantiateParameters), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(this, ___internal__method, dep, location, instantiateParameters, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InstantiateAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*> UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InstantiateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(instantiateParameters), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::GameObject*>, false>(this, ___internal__method, location, instantiateParameters, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.ReleaseInstance
bool UnityEngine::AddressableAssets::AddressablesImpl::ReleaseInstance(::UnityEngine::GameObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ReleaseInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instance);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LoadSceneWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::LoadSceneWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dep, ::Il2CppObject* key, ::UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadSceneWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dep), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, dep, key, loadMode, activateOnLoad, priority);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LoadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::LoadSceneAsync(::Il2CppObject* key, ::UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, key, loadMode, activateOnLoad, priority, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.LoadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::LoadSceneAsync(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority, bool trackHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority), ::il2cpp_utils::ExtractType(trackHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, location, loadMode, activateOnLoad, priority, trackHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.UnloadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::UnloadSceneAsync(::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance scene, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, scene, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.UnloadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::UnloadSceneAsync(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.UnloadSceneAsync
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::UnloadSceneAsync(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.CreateUnloadSceneWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::CreateUnloadSceneWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::CreateUnloadSceneWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnloadSceneWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.CreateUnloadSceneWithChain
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::CreateUnloadSceneWithChain(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::CreateUnloadSceneWithChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUnloadSceneWithChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.InternalUnloadScene
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::AddressableAssets::AddressablesImpl::InternalUnloadScene(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::InternalUnloadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnloadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(this, ___internal__method, handle, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.EvaluateKey
::Il2CppObject* UnityEngine::AddressableAssets::AddressablesImpl::EvaluateKey(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::EvaluateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.CheckForCatalogUpdates
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::StringW>*> UnityEngine::AddressableAssets::AddressablesImpl::CheckForCatalogUpdates(bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::CheckForCatalogUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForCatalogUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::StringW>*>, false>(this, ___internal__method, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GetLocatorInfo
::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo* UnityEngine::AddressableAssets::AddressablesImpl::GetLocatorInfo(::StringW c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GetLocatorInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocatorInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.UpdateCatalogs
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*> UnityEngine::AddressableAssets::AddressablesImpl::UpdateCatalogs(::System::Collections::Generic::IEnumerable_1<::StringW>* catalogIds, bool autoReleaseHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::UpdateCatalogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCatalogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(catalogIds), ::il2cpp_utils::ExtractType(autoReleaseHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::List_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*>, false>(this, ___internal__method, catalogIds, autoReleaseHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.Equals
bool UnityEngine::AddressableAssets::AddressablesImpl::Equals(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* x, ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.GetHashCode
int UnityEngine::AddressableAssets::AddressablesImpl::GetHashCode(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loc)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, loc);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<InitializeAsync>b__57_0
void UnityEngine::AddressableAssets::AddressablesImpl::$InitializeAsync$b__57_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<InitializeAsync>b__57_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializeAsync>b__57_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<TrackHandle>b__61_0
void UnityEngine::AddressableAssets::AddressablesImpl::$TrackHandle$b__61_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<TrackHandle>b__61_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TrackHandle>b__61_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<DownloadDependenciesAsync>b__91_0
void UnityEngine::AddressableAssets::AddressablesImpl::$DownloadDependenciesAsync$b__91_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<DownloadDependenciesAsync>b__91_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsync>b__91_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<DownloadDependenciesAsync>b__91_1
void UnityEngine::AddressableAssets::AddressablesImpl::$DownloadDependenciesAsync$b__91_1(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<DownloadDependenciesAsync>b__91_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsync>b__91_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<DownloadDependenciesAsync>b__93_0
void UnityEngine::AddressableAssets::AddressablesImpl::$DownloadDependenciesAsync$b__93_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<DownloadDependenciesAsync>b__93_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsync>b__93_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<DownloadDependenciesAsync>b__95_0
void UnityEngine::AddressableAssets::AddressablesImpl::$DownloadDependenciesAsync$b__95_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<DownloadDependenciesAsync>b__95_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsync>b__95_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<DownloadDependenciesAsync>b__95_1
void UnityEngine::AddressableAssets::AddressablesImpl::$DownloadDependenciesAsync$b__95_1(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<DownloadDependenciesAsync>b__95_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsync>b__95_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<AutoReleaseHandleOnCompletion>b__97_0
void UnityEngine::AddressableAssets::AddressablesImpl::$AutoReleaseHandleOnCompletion$b__97_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<AutoReleaseHandleOnCompletion>b__97_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AutoReleaseHandleOnCompletion>b__97_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<InternalUnloadScene>b__118_0
void UnityEngine::AddressableAssets::AddressablesImpl::$InternalUnloadScene$b__118_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<InternalUnloadScene>b__118_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InternalUnloadScene>b__118_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl.<CheckForCatalogUpdates>b__120_0
void UnityEngine::AddressableAssets::AddressablesImpl::$CheckForCatalogUpdates$b__120_0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::<CheckForCatalogUpdates>b__120_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForCatalogUpdates>b__120_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo
#include "UnityEngine/AddressableAssets/AddressablesImpl_ResourceLocatorInfo.hpp"
// Including type: UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator
#include "UnityEngine/AddressableAssets/ResourceLocators/IResourceLocator.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator <Locator>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*& UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::dyn_$Locator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::dyn_$Locator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Locator>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <LocalHash>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::dyn_$LocalHash$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::dyn_$LocalHash$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocalHash>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation <CatalogLocation>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*& UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::dyn_$CatalogLocation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::dyn_$CatalogLocation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CatalogLocation>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ContentUpdateAvailable>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::dyn_$ContentUpdateAvailable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::dyn_$ContentUpdateAvailable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ContentUpdateAvailable>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.get_Locator
::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator* UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_Locator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_Locator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Locator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.set_Locator
void UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::set_Locator(::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::set_Locator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Locator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.get_LocalHash
::StringW UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_LocalHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_LocalHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.set_LocalHash
void UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::set_LocalHash(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::set_LocalHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocalHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.get_CatalogLocation
::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_CatalogLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_CatalogLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CatalogLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.set_CatalogLocation
void UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::set_CatalogLocation(::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::set_CatalogLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CatalogLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.get_ContentUpdateAvailable
bool UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_ContentUpdateAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_ContentUpdateAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentUpdateAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.set_ContentUpdateAvailable
void UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::set_ContentUpdateAvailable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::set_ContentUpdateAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentUpdateAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.get_HashLocation
::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_HashLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_HashLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.get_CanUpdateContent
bool UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_CanUpdateContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::get_CanUpdateContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanUpdateContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo.UpdateContent
void UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::UpdateContent(::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator* locator, ::StringW hash, ::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo::UpdateContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locator), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(loc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, locator, hash, loc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeyOp
#include "UnityEngine/AddressableAssets/AddressablesImpl_LoadResourceLocationKeyOp.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object m_Keys
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::dyn_m_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::dyn_m_Keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Keys"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> m_locations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::dyn_m_locations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::dyn_m_locations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_locations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.AddressablesImpl m_Addressables
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::dyn_m_Addressables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::dyn_m_Addressables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Addressables"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type m_ResourceType
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::dyn_m_ResourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::dyn_m_ResourceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResourceType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeyOp.Init
void UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::Init(::UnityEngine::AddressableAssets::AddressablesImpl* aa, ::System::Type* t, ::Il2CppObject* keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aa), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(keys)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aa, t, keys);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeyOp.get_DebugName
::StringW UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::get_DebugName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::get_DebugName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeyOp.InvokeWaitForCompletion
bool UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::InvokeWaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::InvokeWaitForCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeyOp.Execute
void UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeyOp::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeysOp
#include "UnityEngine/AddressableAssets/AddressablesImpl_LoadResourceLocationKeysOp.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerable m_Key
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerable*& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Key"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode m_MergeMode
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::Addressables::MergeMode& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_MergeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_MergeMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MergeMode"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::Addressables::MergeMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> m_locations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_locations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_locations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_locations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.AddressablesImpl m_Addressables
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_Addressables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_Addressables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Addressables"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type m_ResourceType
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_ResourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::dyn_m_ResourceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResourceType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeysOp.Init
void UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::Init(::UnityEngine::AddressableAssets::AddressablesImpl* aa, ::System::Type* t, ::System::Collections::IEnumerable* key, ::UnityEngine::AddressableAssets::Addressables::MergeMode mergeMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aa), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(mergeMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aa, t, key, mergeMode);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeysOp.get_DebugName
::StringW UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::get_DebugName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::get_DebugName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeysOp.Execute
void UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.LoadResourceLocationKeysOp.InvokeWaitForCompletion
bool UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::InvokeWaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::LoadResourceLocationKeysOp::InvokeWaitForCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass33_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass33_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.ResourceManagement.ResourceProviders.SceneInstance> op
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass33_0::dyn_op() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass33_0::dyn_op");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "op"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass33_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass33_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass33_0.<OnSceneUnloaded>b__0
void UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass33_0::$OnSceneUnloaded$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass33_0::<OnSceneUnloaded>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnSceneUnloaded>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator
#include "UnityEngine/AddressableAssets/ResourceLocators/IResourceLocator.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo
#include "UnityEngine/AddressableAssets/AddressablesImpl_ResourceLocatorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c <>9
::UnityEngine::AddressableAssets::AddressablesImpl::$$c* UnityEngine::AddressableAssets::AddressablesImpl::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::AddressableAssets::AddressablesImpl::$$c*>("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c <>9
void UnityEngine::AddressableAssets::AddressablesImpl::$$c::_set_$$9(::UnityEngine::AddressableAssets::AddressablesImpl::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo,UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator> <>9__51_0
::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, ::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>* UnityEngine::AddressableAssets::AddressablesImpl::$$c::_get_$$9__51_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::_get_$$9__51_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, ::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*>("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", "<>9__51_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo,UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator> <>9__51_0
void UnityEngine::AddressableAssets::AddressablesImpl::$$c::_set_$$9__51_0(::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, ::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::_set_$$9__51_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", "<>9__51_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo,System.Boolean> <>9__123_0
::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, bool>* UnityEngine::AddressableAssets::AddressablesImpl::$$c::_get_$$9__123_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::_get_$$9__123_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, bool>*>("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", "<>9__123_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo,System.Boolean> <>9__123_0
void UnityEngine::AddressableAssets::AddressablesImpl::$$c::_set_$$9__123_0(::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::_set_$$9__123_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", "<>9__123_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo,System.String> <>9__123_1
::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, ::StringW>* UnityEngine::AddressableAssets::AddressablesImpl::$$c::_get_$$9__123_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::_get_$$9__123_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, ::StringW>*>("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", "<>9__123_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo,System.String> <>9__123_1
void UnityEngine::AddressableAssets::AddressablesImpl::$$c::_set_$$9__123_1(::System::Func_2<::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::_set_$$9__123_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", "<>9__123_1", value)));
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c..cctor
void UnityEngine::AddressableAssets::AddressablesImpl::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AddressableAssets", "AddressablesImpl/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c.<get_ResourceLocators>b__51_0
::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator* UnityEngine::AddressableAssets::AddressablesImpl::$$c::$get_ResourceLocators$b__51_0(::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::<get_ResourceLocators>b__51_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ResourceLocators>b__51_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*, false>(this, ___internal__method, l);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c.<get_CatalogsWithAvailableUpdates>b__123_0
bool UnityEngine::AddressableAssets::AddressablesImpl::$$c::$get_CatalogsWithAvailableUpdates$b__123_0(::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::<get_CatalogsWithAvailableUpdates>b__123_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_CatalogsWithAvailableUpdates>b__123_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c.<get_CatalogsWithAvailableUpdates>b__123_1
::StringW UnityEngine::AddressableAssets::AddressablesImpl::$$c::$get_CatalogsWithAvailableUpdates$b__123_1(::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c::<get_CatalogsWithAvailableUpdates>b__123_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_CatalogsWithAvailableUpdates>b__123_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass53_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass53_0.hpp"
// Including type: UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator
#include "UnityEngine/AddressableAssets/ResourceLocators/IResourceLocator.hpp"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.ResourceLocatorInfo
#include "UnityEngine/AddressableAssets/AddressablesImpl_ResourceLocatorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator loc
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass53_0::dyn_loc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass53_0::dyn_loc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loc"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass53_0.<RemoveResourceLocator>b__0
bool UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass53_0::$RemoveResourceLocator$b__0(::UnityEngine::AddressableAssets::AddressablesImpl::ResourceLocatorInfo* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass53_0::<RemoveResourceLocator>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveResourceLocator>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass60_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass60_0.hpp"
// Including type: UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator
#include "UnityEngine/AddressableAssets/ResourceLocators/IResourceLocator.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String catalogPath
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_catalogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_catalogPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "catalogPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoReleaseHandle
[[deprecated("Use field access instead!")]] bool& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_autoReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_autoReleaseHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoReleaseHandle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String providerSuffix
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_providerSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_providerSuffix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "providerSuffix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.AddressableAssets.ResourceLocators.IResourceLocator> handle
[[deprecated("Use field access instead!")]] ::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass60_0.<LoadContentCatalogAsync>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::$LoadContentCatalogAsync$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::<LoadContentCatalogAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadContentCatalogAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*>, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass60_0.<LoadContentCatalogAsync>b__1
void UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::$LoadContentCatalogAsync$b__1(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::UnityEngine::AddressableAssets::ResourceLocators::IResourceLocator*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass60_0::<LoadContentCatalogAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadContentCatalogAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass70_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass70_0.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.IEnumerable keys
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerable*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode mode
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::Addressables::MergeMode& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::Addressables::MergeMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass70_0.<LoadResourceLocationsWithChain>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::$LoadResourceLocationsWithChain$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass70_0::<LoadResourceLocationsWithChain>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadResourceLocationsWithChain>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(this, ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass72_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass72_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass72_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass72_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass72_0::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass72_0::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass72_0::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass72_0::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass72_0.<LoadResourceLocationsWithChain>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass72_0::$LoadResourceLocationsWithChain$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass72_0::<LoadResourceLocationsWithChain>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadResourceLocationsWithChain>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*>, false>(this, ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass85_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass85_0.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass85_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass85_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass85_0::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass85_0::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass85_0.<GetDownloadSizeWithChain>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass85_0::$GetDownloadSizeWithChain$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass85_0::<GetDownloadSizeWithChain>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDownloadSizeWithChain>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(this, ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass86_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass86_0.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass86_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass86_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.IEnumerable keys
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerable*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass86_0::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass86_0::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass86_0.<GetDownloadSizeWithChain>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass86_0::$GetDownloadSizeWithChain$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass86_0::<GetDownloadSizeWithChain>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDownloadSizeWithChain>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<int64_t>, false>(this, ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass89_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass89_0.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IAssetBundleResource
#include "UnityEngine/ResourceManagement/ResourceProviders/IAssetBundleResource.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass89_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass89_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass89_0::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass89_0::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass89_0.<DownloadDependenciesAsyncWithChain>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass89_0::$DownloadDependenciesAsyncWithChain$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass89_0::<DownloadDependenciesAsyncWithChain>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsyncWithChain>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*>, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass89_0.<DownloadDependenciesAsyncWithChain>b__1
void UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass89_0::$DownloadDependenciesAsyncWithChain$b__1(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass89_0::<DownloadDependenciesAsyncWithChain>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsyncWithChain>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass92_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass92_0.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IAssetBundleResource
#include "UnityEngine/ResourceManagement/ResourceProviders/IAssetBundleResource.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass92_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass92_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> locations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass92_0::dyn_locations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass92_0::dyn_locations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass92_0.<DownloadDependenciesAsyncWithChain>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass92_0::$DownloadDependenciesAsyncWithChain$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass92_0::<DownloadDependenciesAsyncWithChain>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsyncWithChain>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*>, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass92_0.<DownloadDependenciesAsyncWithChain>b__1
void UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass92_0::$DownloadDependenciesAsyncWithChain$b__1(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass92_0::<DownloadDependenciesAsyncWithChain>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsyncWithChain>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass94_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass94_0.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IAssetBundleResource
#include "UnityEngine/ResourceManagement/ResourceProviders/IAssetBundleResource.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.IEnumerable keys
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerable*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.Addressables/UnityEngine.AddressableAssets.MergeMode mode
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::Addressables::MergeMode& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::Addressables::MergeMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass94_0.<DownloadDependenciesAsyncWithChain>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::$DownloadDependenciesAsyncWithChain$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::<DownloadDependenciesAsyncWithChain>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsyncWithChain>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*>, false>(this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass94_0.<DownloadDependenciesAsyncWithChain>b__1
void UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::$DownloadDependenciesAsyncWithChain$b__1(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<::System::Collections::Generic::IList_1<::UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*>*> op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass94_0::<DownloadDependenciesAsyncWithChain>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadDependenciesAsyncWithChain>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass98_0
#include "UnityEngine/AddressableAssets/AddressablesImpl_--c__DisplayClass98_0.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AddressableAssets.AddressablesImpl <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AddressablesImpl*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass98_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass98_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AddressablesImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass98_0::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass98_0::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoReleaseHandle
[[deprecated("Use field access instead!")]] bool& UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass98_0::dyn_autoReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass98_0::dyn_autoReleaseHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoReleaseHandle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AddressableAssets.AddressablesImpl/UnityEngine.AddressableAssets.<>c__DisplayClass98_0.<ClearDependencyCacheAsync>b__0
::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass98_0::$ClearDependencyCacheAsync$b__0(::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::AddressablesImpl::$$c__DisplayClass98_0::<ClearDependencyCacheAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearDependencyCacheAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(this, ___internal__method, op);
}
