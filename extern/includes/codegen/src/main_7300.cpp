// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean StreamingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingApplicationStatus::dyn_StreamingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingApplicationStatus::dyn_StreamingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.LivestreamingStartStatus StreamingResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::LivestreamingStartStatus& Oculus::Platform::Models::LivestreamingStartResult::dyn_StreamingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStartResult::dyn_StreamingResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StreamingResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::LivestreamingStartStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean CommentsVisible
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_CommentsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_CommentsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommentsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsPaused
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_IsPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_IsPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean LivestreamingEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LivestreamingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LivestreamingType
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_LivestreamingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LivestreamingType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean MicEnabled
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::LivestreamingStatus::dyn_MicEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingStatus::dyn_MicEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 CommentCount
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingVideoStats::dyn_CommentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_CommentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CommentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 ReactionCount
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::LivestreamingVideoStats::dyn_ReactionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_ReactionCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReactionCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TotalViews
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::LivestreamingVideoStats::dyn_TotalViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::LivestreamingVideoStats::dyn_TotalViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalViews"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList Candidates
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidateList*& Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_Candidates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_Candidates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Candidates"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidateList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double MyCurrentThreshold
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_MyCurrentThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshot::dyn_MyCurrentThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MyCurrentThreshold"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean CanMatch
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_CanMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_CanMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CanMatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double MyTotalScore
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_MyTotalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_MyTotalScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MyTotalScore"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double TheirCurrentThreshold
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirCurrentThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirCurrentThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TheirCurrentThreshold"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double TheirTotalScore
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirTotalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TheirTotalScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TheirTotalScore"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TraceId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TraceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingAdminSnapshotCandidate::dyn_TraceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TraceId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidateList
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidateList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshotCandidate
#include "Oculus/Platform/Models/MatchmakingAdminSnapshotCandidate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueueResult EnqueueResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueueResult*& Oculus::Platform::Models::MatchmakingBrowseResult::dyn_EnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingBrowseResult::dyn_EnqueueResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnqueueResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueueResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.RoomList Rooms
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::RoomList*& Oculus::Platform::Models::MatchmakingBrowseResult::dyn_Rooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingBrowseResult::dyn_Rooms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rooms"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::RoomList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshot AdminSnapshotOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshot*& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshotOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshotOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminSnapshotOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingAdminSnapshot AdminSnapshot
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingAdminSnapshot*& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AdminSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AdminSnapshot"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingAdminSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 AverageWait
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AverageWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_AverageWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AverageWait"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MatchesInLastHourCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MatchesInLastHourCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MatchesInLastHourCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchesInLastHourCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MaxExpectedWait
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MaxExpectedWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_MaxExpectedWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxExpectedWait"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Pool
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_Pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pool"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 RecentMatchPercentage
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RecentMatchPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RecentMatchPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecentMatchPercentage"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String RequestHash
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RequestHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResult::dyn_RequestHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestHash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueueResult MatchmakingEnqueueResult
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueueResult*& Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_MatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_MatchmakingEnqueueResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchmakingEnqueueResult"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueueResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> CustomData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_CustomData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_CustomData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User UserOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_UserOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_UserOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingEnqueuedUser::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUser
#include "Oculus/Platform/Models/MatchmakingEnqueuedUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 DrawCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_DrawCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_DrawCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DrawCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 LossCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_LossCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_LossCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LossCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 SkillLevel
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_SkillLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillLevel"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double SkillMean
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingStats::dyn_SkillMean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillMean");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillMean"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Double SkillStandardDeviation
[[deprecated("Use field access instead!")]] double& Oculus::Platform::Models::MatchmakingStats::dyn_SkillStandardDeviation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_SkillStandardDeviation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkillStandardDeviation"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 WinCount
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::MatchmakingStats::dyn_WinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MatchmakingStats::dyn_WinCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WinCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.MicrophoneAvailabilityState
#include "Oculus/Platform/Models/MicrophoneAvailabilityState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean MicrophoneAvailable
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::MicrophoneAvailabilityState::dyn_MicrophoneAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::MicrophoneAvailabilityState::dyn_MicrophoneAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncConnection::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.NetSyncDisconnectReason DisconnectReason
[[deprecated("Use field access instead!")]] ::Oculus::Platform::NetSyncDisconnectReason& Oculus::Platform::Models::NetSyncConnection::dyn_DisconnectReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_DisconnectReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisconnectReason"))->offset;
  return *reinterpret_cast<::Oculus::Platform::NetSyncDisconnectReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SessionId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncConnection::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.NetSyncConnectionStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::NetSyncConnectionStatus& Oculus::Platform::Models::NetSyncConnection::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::NetSyncConnectionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ZoneId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::NetSyncConnection::dyn_ZoneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncConnection::dyn_ZoneId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ZoneId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncSession::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Muted
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::NetSyncSession::dyn_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_Muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SessionId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncSession::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetSyncSession::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String VoipGroup
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::NetSyncSession::dyn_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSession::dyn_VoipGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VoipGroup"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 ConnectionId
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_ConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_ConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectionId"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.NetSyncSessionList Sessions
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::NetSyncSessionList*& Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_Sessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSessionsChangedNotification::dyn_Sessions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sessions"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::NetSyncSessionList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSession
#include "Oculus/Platform/Models/NetSyncSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.NetSyncSession Session
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::NetSyncSession*& Oculus::Platform::Models::NetSyncSetSessionPropertyResult::dyn_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncSetSessionPropertyResult::dyn_Session");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Session"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::NetSyncSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Decibels
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Decibels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Decibels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Decibels"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single Distance
[[deprecated("Use field access instead!")]] float& Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetSyncVoipAttenuationValue::dyn_Distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValue
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::NetworkingPeer::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.PeerConnectionState <State>k__BackingField
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PeerConnectionState& Oculus::Platform::Models::NetworkingPeer::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_ID
uint64_t Oculus::Platform::Models::NetworkingPeer::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_ID
void Oculus::Platform::Models::NetworkingPeer::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.get_State
::Oculus::Platform::PeerConnectionState Oculus::Platform::Models::NetworkingPeer::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PeerConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.NetworkingPeer.set_State
void Oculus::Platform::Models::NetworkingPeer::set_State(::Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::NetworkingPeer::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::OrgScopedID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::OrgScopedID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Party::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User LeaderOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_LeaderOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_LeaderOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeaderOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Leader
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Party::dyn_Leader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Leader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Leader"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::Party::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::Party::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Party::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Party::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PartyUpdateAction Action
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PartyUpdateAction& Oculus::Platform::Models::PartyUpdateNotification::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PartyUpdateAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 PartyId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_PartyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PartyId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_SenderId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UpdateTimestamp
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UpdateTimestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateTimestamp"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserAlias
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UserName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PartyUpdateNotification::dyn_UserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Id
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Pid::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Pid::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.Pid
#include "Oculus/Platform/Models/Pid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 <ID>k__BackingField
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_$ID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ID>k__BackingField"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.UInt64> pingTimeUsec
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint64_t>& Oculus::Platform::Models::PingResult::dyn_pingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::dyn_pingTimeUsec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingTimeUsec"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_ID
uint64_t Oculus::Platform::Models::PingResult::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.set_ID
void Oculus::Platform::Models::PingResult::set_ID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::set_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_PingTimeUsec
uint64_t Oculus::Platform::Models::PingResult::get_PingTimeUsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_PingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Models.PingResult.get_IsTimeout
bool Oculus::Platform::Models::PingResult::get_IsTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PingResult::get_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PlatformInitializeResult Result
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PlatformInitializeResult& Oculus::Platform::Models::PlatformInitialize::dyn_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::PlatformInitialize::dyn_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Result"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PlatformInitializeResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String FormattedPrice
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_FormattedPrice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_FormattedPrice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FormattedPrice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Product::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Product
#include "Oculus/Platform/Models/Product.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime ExpirationTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_ExpirationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ExpirationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpirationTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime GrantTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::Purchase::dyn_GrantTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_GrantTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GrantTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Sku
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Purchase::dyn_Sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Purchase::dyn_Sku");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueuedUserList
#include "Oculus/Platform/Models/MatchmakingEnqueuedUserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ApplicationID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Room::dyn_ApplicationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_ApplicationID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplicationID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.Dictionary`2<System.String,System.String> DataStore
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& Oculus::Platform::Models::Room::dyn_DataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_DataStore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataStore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Description
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Room::dyn_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::Room::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_InvitedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_InvitedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList InvitedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_InvitedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_InvitedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvitedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsMembershipLocked
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::Room::dyn_IsMembershipLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_IsMembershipLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsMembershipLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomJoinPolicy JoinPolicy
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomJoinPolicy& Oculus::Platform::Models::Room::dyn_JoinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_JoinPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "JoinPolicy"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinPolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomJoinability Joinability
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomJoinability& Oculus::Platform::Models::Room::dyn_Joinability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Joinability");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Joinability"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinability*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueuedUserList MatchedUsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueuedUserList*& Oculus::Platform::Models::Room::dyn_MatchedUsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MatchedUsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchedUsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueuedUserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.MatchmakingEnqueuedUserList MatchedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::MatchmakingEnqueuedUserList*& Oculus::Platform::Models::Room::dyn_MatchedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MatchedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::MatchmakingEnqueuedUserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 MaxUsers
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::Room::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Room::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User OwnerOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Room::dyn_OwnerOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_OwnerOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OwnerOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User Owner
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::Room::dyn_Owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Owner"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.TeamList TeamsOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::TeamList*& Oculus::Platform::Models::Room::dyn_TeamsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_TeamsOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamsOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::TeamList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.TeamList Teams
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::TeamList*& Oculus::Platform::Models::Room::dyn_Teams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Teams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teams"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::TeamList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.RoomType Type
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomType& Oculus::Platform::Models::Room::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList UsersOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_UsersOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_UsersOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsersOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList Users
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Room::dyn_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Users");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Users"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 Version
[[deprecated("Use field access instead!")]] uint& Oculus::Platform::Models::Room::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Room::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 RoomID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_RoomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 SenderID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SenderID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SenderID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.DateTime SentTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::RoomInviteNotification::dyn_SentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SentTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SdkAccountType AccountType
[[deprecated("Use field access instead!")]] ::Oculus::Platform::SdkAccountType& Oculus::Platform::Models::SdkAccount::dyn_AccountType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_AccountType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccountType"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SdkAccountType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UserId
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::SdkAccount::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SdkAccount::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccount
#include "Oculus/Platform/Models/SdkAccount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.ShareMediaStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::ShareMediaStatus& Oculus::Platform::Models::ShareMediaResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::ShareMediaResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::ShareMediaStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SupplementaryMetric
#include "Oculus/Platform/Models/SupplementaryMetric.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 Metric
[[deprecated("Use field access instead!")]] int64_t& Oculus::Platform::Models::SupplementaryMetric::dyn_Metric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SupplementaryMetric::dyn_Metric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metric"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean HasPermission
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::SystemPermission::dyn_HasPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemPermission::dyn_HasPermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasPermission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.PermissionGrantStatus PermissionGrantStatus
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PermissionGrantStatus& Oculus::Platform::Models::SystemPermission::dyn_PermissionGrantStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemPermission::dyn_PermissionGrantStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PermissionGrantStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PermissionGrantStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.VoipMuteState MicrophoneMuted
[[deprecated("Use field access instead!")]] ::Oculus::Platform::VoipMuteState& Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_MicrophoneMuted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MicrophoneMuted"))->offset;
  return *reinterpret_cast<::Oculus::Platform::VoipMuteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.SystemVoipStatus Status
[[deprecated("Use field access instead!")]] ::Oculus::Platform::SystemVoipStatus& Oculus::Platform::Models::SystemVoipState::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::SystemVoipState::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::Oculus::Platform::SystemVoipStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.UserList AssignedUsers
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::UserList*& Oculus::Platform::Models::Team::dyn_AssignedUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_AssignedUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssignedUsers"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::UserList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MaxUsers
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Team::dyn_MaxUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MaxUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 MinUsers
[[deprecated("Use field access instead!")]] int& Oculus::Platform::Models::Team::dyn_MinUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_MinUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinUsers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::Team::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Team::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.TeamList
#include "Oculus/Platform/Models/TeamList.hpp"
// Including type: Oculus.Platform.Models.Team
#include "Oculus/Platform/Models/Team.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String DisplayName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_DisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::User::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String ImageURL
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_ImageURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_ImageURL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageURL"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String InviteToken
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_InviteToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_InviteToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InviteToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String OculusID
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_OculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_OculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Presence
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_Presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Presence"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDeeplinkMessage
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDeeplinkMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDeeplinkMessage"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceDestinationApiName
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceDestinationApiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceDestinationApiName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceDestinationApiName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceLobbySessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceLobbySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceLobbySessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceLobbySessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String PresenceMatchSessionId
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_PresenceMatchSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceMatchSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceMatchSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.UserPresenceStatus PresenceStatus
[[deprecated("Use field access instead!")]] ::Oculus::Platform::UserPresenceStatus& Oculus::Platform::Models::User::dyn_PresenceStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_PresenceStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PresenceStatus"))->offset;
  return *reinterpret_cast<::Oculus::Platform::UserPresenceStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String SmallImageUrl
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::User::dyn_SmallImageUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::User::dyn_SmallImageUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SmallImageUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room RoomOptional
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_RoomOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomOptional"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.Room Room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& Oculus::Platform::Models::UserAndRoom::dyn_Room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_Room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Oculus.Platform.Models.User User
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::User*& Oculus::Platform::Models::UserAndRoom::dyn_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserAndRoom::dyn_User");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "User"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoom
#include "Oculus/Platform/Models/UserAndRoom.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean Success
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserDataStoreUpdateResponse::dyn_Success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String Value
[[deprecated("Use field access instead!")]] ::StringW& Oculus::Platform::Models::UserProof::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserProof::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean DidCancel
[[deprecated("Use field access instead!")]] bool& Oculus::Platform::Models::UserReportID::dyn_DidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_DidCancel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidCancel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 ID
[[deprecated("Use field access instead!")]] uint64_t& Oculus::Platform::Models::UserReportID::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::UserReportID::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRComposition
#include "GlobalNamespace/OVRComposition.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean cameraInTrackingSpace
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraInTrackingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraInTrackingSpace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig cameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRComposition::dyn_cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean usingLastAttachedNodePose
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_usingLastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usingLastAttachedNodePose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRPose lastAttachedNodePose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPose& GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::dyn_lastAttachedNodePose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAttachedNodePose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.Update
void GlobalNamespace::OVRComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRComposition.Cleanup
void GlobalNamespace::OVRComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RecenterPose
void GlobalNamespace::OVRComposition::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RecenterPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRComposition.RefreshCameraRig
void GlobalNamespace::OVRComposition::RefreshCameraRig(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::RefreshCameraRig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraRig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics), ::il2cpp_utils::ExtractType(mainCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics, mainCamera);
}
// Autogenerated method: OVRComposition.ComputeCameraTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose(::GlobalNamespace::OVRPlugin::CameraExtrinsics extrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRComposition::ComputeCameraTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCameraTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extrinsics)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method, extrinsics);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCompositionUtil
#include "GlobalNamespace/OVRCompositionUtil.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy(::UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: OVRCompositionUtil.SafeDestroy
void GlobalNamespace::OVRCompositionUtil::SafeDestroy_(ByRef<::UnityEngine::GameObject*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::SafeDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "SafeDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(obj));
}
// Autogenerated method: OVRCompositionUtil.ConvertCameraDevice
::GlobalNamespace::OVRPlugin::CameraDevice GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice(::GlobalNamespace::OVRManager_CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::ConvertCameraDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ConvertCameraDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::CameraDevice, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRCompositionUtil.ToBoundaryType
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRCompositionUtil::ToBoundaryType(::GlobalNamespace::OVRManager_VirtualGreenScreenType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::ToBoundaryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "ToBoundaryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: OVRCompositionUtil.GetWorldPosition
::UnityEngine::Vector3 GlobalNamespace::OVRCompositionUtil::GetWorldPosition(::UnityEngine::Camera* camera, ::UnityEngine::Vector3 trackingSpacePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(trackingSpacePosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, trackingSpacePosition);
}
// Autogenerated method: OVRCompositionUtil.GetMaximumBoundaryDistance
float GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance(::UnityEngine::Camera* camera, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::GetMaximumBoundaryDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "GetMaximumBoundaryDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, boundaryType);
}
// Autogenerated method: OVRCompositionUtil.BuildBoundaryMesh
::UnityEngine::Mesh* GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType, float topY, float bottomY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCompositionUtil::BuildBoundaryMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRCompositionUtil", "BuildBoundaryMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractType(topY), ::il2cpp_utils::ExtractType(bottomY)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, topY, bottomY);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRMixedRealityCaptureConfiguration
#include "GlobalNamespace/OVRMixedRealityCaptureConfiguration.hpp"
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject previousMainCameraObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_previousMainCameraObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousMainCameraObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject foregroundCameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera foregroundCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_foregroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foregroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject backgroundCameraGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCameraGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCameraGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera backgroundCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_backgroundCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean renderCombinedFrame
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRExternalComposition::dyn_renderCombinedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_renderCombinedFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderCombinedFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioListener audioListener
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioListener*& GlobalNamespace::OVRExternalComposition::dyn_audioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioListener"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRMRAudioFilter audioFilter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRMRAudioFilter*& GlobalNamespace::OVRExternalComposition::dyn_audioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioFilter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRMRAudioFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture[] mrcRenderTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::OVRExternalComposition::dyn_mrcRenderTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_mrcRenderTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcRenderTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_frameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_frameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastMrcEncodeFrameSyncId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_lastMrcEncodeFrameSyncId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_lastMrcEncodeFrameSyncId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastMrcEncodeFrameSyncId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture[] mrcForegroundRenderTextureArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::OVRExternalComposition::dyn_mrcForegroundRenderTextureArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_mrcForegroundRenderTextureArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mrcForegroundRenderTextureArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double[] cameraPoseTimeArray
[[deprecated("Use field access instead!")]] ::ArrayW<double>& GlobalNamespace::OVRExternalComposition::dyn_cameraPoseTimeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cameraPoseTimeArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraPoseTimeArray"))->offset;
  return *reinterpret_cast<::ArrayW<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] cachedAudioDataArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioDataArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioDataArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioDataArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object audioDataLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OVRExternalComposition::dyn_audioDataLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_audioDataLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioDataLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> cachedAudioData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedAudioData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedAudioData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cachedChannels
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRExternalComposition::dyn_cachedChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::dyn_cachedChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRExternalComposition.RefreshCameraObjects
void GlobalNamespace::OVRExternalComposition::RefreshCameraObjects(::UnityEngine::GameObject* parentObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshCameraObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCameraObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentObject, mainCamera, configuration);
}
// Autogenerated method: OVRExternalComposition.RefreshAudioFilter
void GlobalNamespace::OVRExternalComposition::RefreshAudioFilter(::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::RefreshAudioFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAudioFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCamera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainCamera);
}
// Autogenerated method: OVRExternalComposition.CastMrcFrame
int GlobalNamespace::OVRExternalComposition::CastMrcFrame(int castTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CastMrcFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CastMrcFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(castTextureIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, castTextureIndex);
}
// Autogenerated method: OVRExternalComposition.SetCameraTargetTexture
void GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture(int drawTextureIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::SetCameraTargetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCameraTargetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(drawTextureIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drawTextureIndex);
}
// Autogenerated method: OVRExternalComposition.CleanupAudioFilter
void GlobalNamespace::OVRExternalComposition::CleanupAudioFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CleanupAudioFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupAudioFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.CacheAudioData
void GlobalNamespace::OVRExternalComposition::CacheAudioData(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CacheAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRExternalComposition.GetAndResetAudioData
void GlobalNamespace::OVRExternalComposition::GetAndResetAudioData(ByRef<::ArrayW<float>> audioData, ByRef<int> audioFrames, ByRef<int> channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::GetAndResetAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAndResetAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioData), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(audioData), byref(audioFrames), byref(channels));
}
// Autogenerated method: OVRExternalComposition.CompositionMethod
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRExternalComposition::CompositionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::CompositionMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRManager_CompositionMethod, false>(this, ___internal__method);
}
// Autogenerated method: OVRExternalComposition.Update
void GlobalNamespace::OVRExternalComposition::Update(::UnityEngine::GameObject* gameObject, ::UnityEngine::Camera* mainCamera, ::GlobalNamespace::OVRMixedRealityCaptureConfiguration* configuration, ::GlobalNamespace::OVRManager_TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(mainCamera), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(trackingOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject, mainCamera, configuration, trackingOrigin);
}
// Autogenerated method: OVRExternalComposition.Cleanup
void GlobalNamespace::OVRExternalComposition::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExternalComposition::Cleanup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMRAudioFilter
#include "GlobalNamespace/OVRMRAudioFilter.hpp"
// Including type: OVRExternalComposition
#include "GlobalNamespace/OVRExternalComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean running
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRMRAudioFilter::dyn_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::dyn_running");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "running"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRExternalComposition composition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRExternalComposition*& GlobalNamespace::OVRMRAudioFilter::dyn_composition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::dyn_composition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "composition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRExternalComposition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRMRAudioFilter.Start
void GlobalNamespace::OVRMRAudioFilter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMRAudioFilter.OnAudioFilterRead
void GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRMRAudioFilter::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSandwichComposition
#include "GlobalNamespace/OVRSandwichComposition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
// Including type: OVRBoundary/BoundaryTestResult
#include "GlobalNamespace/OVRBoundary_BoundaryTestResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 cachedVector3fSize
int GlobalNamespace::OVRBoundary::_get_cachedVector3fSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedVector3fSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRBoundary", "cachedVector3fSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 cachedVector3fSize
void GlobalNamespace::OVRBoundary::_set_cachedVector3fSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedVector3fSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedVector3fSize", value));
}
// Autogenerated static field getter
// Get static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
::GlobalNamespace::OVRNativeBuffer* GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryNativeBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRNativeBuffer*>("", "OVRBoundary", "cachedGeometryNativeBuffer"));
}
// Autogenerated static field setter
// Set static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer(::GlobalNamespace::OVRNativeBuffer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryNativeBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryNativeBuffer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] cachedGeometryManagedBuffer
::ArrayW<float> GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_get_cachedGeometryManagedBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OVRBoundary", "cachedGeometryManagedBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] cachedGeometryManagedBuffer
void GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::_set_cachedGeometryManagedBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary", "cachedGeometryManagedBuffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> cachedGeometryList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::OVRBoundary::dyn_cachedGeometryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::dyn_cachedGeometryList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedGeometryList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRBoundary..cctor
void GlobalNamespace::OVRBoundary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRBoundary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRBoundary.GetConfigured
bool GlobalNamespace::OVRBoundary::GetConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.TestNode
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestNode(::GlobalNamespace::OVRBoundary::Node node, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, node, boundaryType);
}
// Autogenerated method: OVRBoundary.TestPoint
::GlobalNamespace::OVRBoundary::BoundaryTestResult GlobalNamespace::OVRBoundary::TestPoint(::UnityEngine::Vector3 point, ::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::TestPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRBoundary::BoundaryTestResult, false>(this, ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRBoundary.GetGeometry
::ArrayW<::UnityEngine::Vector3> GlobalNamespace::OVRBoundary::GetGeometry(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetDimensions
::UnityEngine::Vector3 GlobalNamespace::OVRBoundary::GetDimensions(::GlobalNamespace::OVRBoundary::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, boundaryType);
}
// Autogenerated method: OVRBoundary.GetVisible
bool GlobalNamespace::OVRBoundary::GetVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::GetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRBoundary.SetVisible
void GlobalNamespace::OVRBoundary::SetVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/Node
#include "GlobalNamespace/OVRBoundary_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandLeft
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandLeft
void GlobalNamespace::OVRBoundary::Node::_set_HandLeft(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node HandRight
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node HandRight
void GlobalNamespace::OVRBoundary::Node::_set_HandRight(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "HandRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/Node Head
::GlobalNamespace::OVRBoundary::Node GlobalNamespace::OVRBoundary::Node::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::Node>("", "OVRBoundary/Node", "Head"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/Node Head
void GlobalNamespace::OVRBoundary::Node::_set_Head(::GlobalNamespace::OVRBoundary::Node value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/Node", "Head", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRBoundary::Node::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::Node::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRBoundary/BoundaryType
#include "GlobalNamespace/OVRBoundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType OuterBoundary
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType OuterBoundary
void GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRBoundary/BoundaryType PlayArea
::GlobalNamespace::OVRBoundary::BoundaryType GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRBoundary::BoundaryType>("", "OVRBoundary/BoundaryType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRBoundary/BoundaryType PlayArea
void GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea(::GlobalNamespace::OVRBoundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRBoundary/BoundaryType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRBoundary::BoundaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackingSpace>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackingSpace$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackingSpace>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <centerEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$centerEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightEyeAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightEyeAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightHandAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightHandAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightHandAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <leftControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$leftControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <rightControllerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$rightControllerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightControllerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <trackerAnchor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_$trackerAnchor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackerAnchor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OVRCameraRig> UpdatedAnchors
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::OVRCameraRig*>*& GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_UpdatedAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdatedAnchors"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OVRCameraRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean usePerEyeCameras
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_usePerEyeCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePerEyeCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFixedUpdateForTracking
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_useFixedUpdateForTracking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedUpdateForTracking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableEyeAnchorCameras
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_disableEyeAnchorCameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableEyeAnchorCameras"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _skipUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRCameraRig::dyn__skipUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__skipUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackingSpaceName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackingSpaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingSpaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String trackerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_trackerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String centerEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_centerEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightEyeAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightEyeAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightEyeAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightHandAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightHandAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String leftControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_leftControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.String rightControllerAnchorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn_rightControllerAnchorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightControllerAnchorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _centerEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__centerEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _leftEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__leftEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera _rightEyeCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::dyn__rightEyeCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightEyeCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRCameraRig.get_leftEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_rightEyeCamera
::UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_trackingSpace
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackingSpace
void GlobalNamespace::OVRCameraRig::set_trackingSpace(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftEyeAnchor
void GlobalNamespace::OVRCameraRig::set_leftEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_centerEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_centerEyeAnchor
void GlobalNamespace::OVRCameraRig::set_centerEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightEyeAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightEyeAnchor
void GlobalNamespace::OVRCameraRig::set_rightEyeAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightHandAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightControllerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_trackerAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::get_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackerAnchor
void GlobalNamespace::OVRCameraRig::set_trackerAnchor(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::set_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackerAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.add_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::add_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::add_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.remove_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors(::System::Action_1<::GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.Awake
void GlobalNamespace::OVRCameraRig::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Start
void GlobalNamespace::OVRCameraRig::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.FixedUpdate
void GlobalNamespace::OVRCameraRig::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Update
void GlobalNamespace::OVRCameraRig::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.OnDestroy
void GlobalNamespace::OVRCameraRig::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.UpdateAnchors
void GlobalNamespace::OVRCameraRig::UpdateAnchors(bool updateEyeAnchors, bool updateHandAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::UpdateAnchors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateEyeAnchors), ::il2cpp_utils::ExtractType(updateHandAnchors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateEyeAnchors, updateHandAnchors);
}
// Autogenerated method: OVRCameraRig.OnBeforeRenderCallback
void GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRenderCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.RaiseUpdatedAnchorsEvent
void GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseUpdatedAnchorsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.EnsureGameObjectIntegrity
void GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureGameObjectIntegrity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.ConfigureAnchor
::UnityEngine::Transform* GlobalNamespace::OVRCameraRig::ConfigureAnchor(::UnityEngine::Transform* root, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ConfigureAnchor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, root, name);
}
// Autogenerated method: OVRCameraRig.ComputeTrackReferenceMatrix
::UnityEngine::Matrix4x4 GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeTrackReferenceMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRExtensions
#include "GlobalNamespace/OVRExtensions.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
// Including type: OVRPlugin/Vector4f
#include "GlobalNamespace/OVRPlugin_Vector4f.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRExtensions.ToTrackingSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToTrackingSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToTrackingSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(::GlobalNamespace::OVRPose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(::GlobalNamespace::OVRPose trackingSpacePose, ::UnityEngine::Camera* mainCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpacePose), ::il2cpp_utils::ExtractType(mainCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpacePose, mainCamera);
}
// Autogenerated method: OVRExtensions.ToHeadSpacePose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToHeadSpacePose(::UnityEngine::Transform* transform, ::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToHeadSpacePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToHeadSpacePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::UnityEngine::Transform* t, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(isLocal)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, isLocal);
}
// Autogenerated method: OVRExtensions.FromOVRPose
void GlobalNamespace::OVRExtensions::FromOVRPose(::UnityEngine::Transform* t, ::GlobalNamespace::OVRPose pose, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(isLocal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, pose, isLocal);
}
// Autogenerated method: OVRExtensions.ToOVRPose
::GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(::GlobalNamespace::OVRPlugin::Posef p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p);
}
// Autogenerated method: OVRExtensions.ToFrustum
::GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRExtensions::ToFrustum(::GlobalNamespace::OVRPlugin::Frustumf f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFrustum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFrustum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRTracker::Frustum, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: OVRExtensions.FromColorf
::UnityEngine::Color GlobalNamespace::OVRExtensions::FromColorf(::GlobalNamespace::OVRPlugin::Colorf c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.ToColorf
::GlobalNamespace::OVRPlugin::Colorf GlobalNamespace::OVRExtensions::ToColorf(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToColorf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToColorf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Colorf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.FromVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedXVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedXVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedZVector3f
::UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedZVector3f(::GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedXVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedXVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedZVector3f
::GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedZVector3f(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZVector3f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromVector4f
::UnityEngine::Vector4 GlobalNamespace::OVRExtensions::FromVector4f(::GlobalNamespace::OVRPlugin::Vector4f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromVector4f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector4f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector4f
::GlobalNamespace::OVRPlugin::Vector4f GlobalNamespace::OVRExtensions::ToVector4f(::UnityEngine::Vector4 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToVector4f");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector4f", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Vector4f, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedXQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedXQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedZQuatf
::UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedZQuatf(::GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FromFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedXQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedXQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedZQuatf
::GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedZQuatf(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ToFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZQuatf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ConvertToHMDMatrix34
::OVR::OpenVR::HmdMatrix34_t GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "ConvertToHMDMatrix34", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::HmdMatrix34_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: OVRExtensions.FindChildRecursive
::UnityEngine::Transform* GlobalNamespace::OVRExtensions::FindChildRecursive(::UnityEngine::Transform* parent, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::FindChildRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "FindChildRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, name);
}
// Autogenerated method: OVRExtensions.Equals
bool GlobalNamespace::OVRExtensions::Equals(::UnityEngine::Gradient* gradient, ::UnityEngine::Gradient* otherGradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(otherGradient)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gradient, otherGradient);
}
// Autogenerated method: OVRExtensions.CopyFrom
void GlobalNamespace::OVRExtensions::CopyFrom(::UnityEngine::Gradient* gradient, ::UnityEngine::Gradient* otherGradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRExtensions::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRExtensions", "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient), ::il2cpp_utils::ExtractType(otherGradient)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gradient, otherGradient);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Acceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Acceleration
void GlobalNamespace::NodeStatePropertyType::_set_Acceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularAcceleration
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularAcceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularAcceleration"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularAcceleration
void GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularAcceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularAcceleration", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Velocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Velocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Velocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Velocity
void GlobalNamespace::NodeStatePropertyType::_set_Velocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Velocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Velocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType AngularVelocity
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_AngularVelocity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "AngularVelocity"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType AngularVelocity
void GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_AngularVelocity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "AngularVelocity", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Position
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Position"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Position
void GlobalNamespace::NodeStatePropertyType::_set_Position(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public NodeStatePropertyType Orientation
::GlobalNamespace::NodeStatePropertyType GlobalNamespace::NodeStatePropertyType::_get_Orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_get_Orientation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NodeStatePropertyType>("", "NodeStatePropertyType", "Orientation"));
}
// Autogenerated static field setter
// Set static field: static public NodeStatePropertyType Orientation
void GlobalNamespace::NodeStatePropertyType::_set_Orientation(::GlobalNamespace::NodeStatePropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::_set_Orientation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodeStatePropertyType", "Orientation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NodeStatePropertyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodeStatePropertyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNodeStateProperties
#include "GlobalNamespace/OVRNodeStateProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NodeStatePropertyType
#include "GlobalNamespace/NodeStatePropertyType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_get_nodeStateList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>*>("", "OVRNodeStateProperties", "nodeStateList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> nodeStateList
void GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::_set_nodeStateList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRNodeStateProperties", "nodeStateList", value));
}
// Autogenerated method: OVRNodeStateProperties..cctor
void GlobalNamespace::OVRNodeStateProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.IsHmdPresent
bool GlobalNamespace::OVRNodeStateProperties::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyVector3
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetNodeStatePropertyQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ::GlobalNamespace::OVRPlugin::Node ovrpNodeType, ::GlobalNamespace::OVRPlugin::Step stepType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetNodeStatePropertyQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetNodeStatePropertyQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractType(ovrpNodeType), ::il2cpp_utils::ExtractType(stepType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, ovrpNodeType, stepType, byref(retQuat));
}
// Autogenerated method: OVRNodeStateProperties.ValidateProperty
bool GlobalNamespace::OVRNodeStateProperties::ValidateProperty(::UnityEngine::XR::XRNode nodeType, ByRef<::UnityEngine::XR::XRNodeState> requestedNodeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::ValidateProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "ValidateProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(requestedNodeState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, byref(requestedNodeState));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateVector3
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Vector3> retVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retVec));
}
// Autogenerated method: OVRNodeStateProperties.GetUnityXRNodeStateQuaternion
bool GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion(::UnityEngine::XR::XRNode nodeType, ::GlobalNamespace::NodeStatePropertyType propertyType, ByRef<::UnityEngine::Quaternion> retQuat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNodeStateProperties::GetUnityXRNodeStateQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRNodeStateProperties", "GetUnityXRNodeStateQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(propertyType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, propertyType, byref(retQuat));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRPose::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion orientation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OVRPose::dyn_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::dyn_orientation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRPose.get_identity
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPose.Inverse
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.flipZ
::GlobalNamespace::OVRPose GlobalNamespace::OVRPose::flipZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::flipZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "flipZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef_Legacy
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef_Legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef_Legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.ToPosef
::GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::ToPosef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPosef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::Posef, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.Equals
bool GlobalNamespace::OVRPose::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRPose.GetHashCode
int GlobalNamespace::OVRPose::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRPose.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::OVRPose& x, const ::GlobalNamespace::OVRPose& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: OVRPose.op_Multiply
::GlobalNamespace::OVRPose GlobalNamespace::operator*(const ::GlobalNamespace::OVRPose& lhs, const ::GlobalNamespace::OVRPose& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRPose::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRPose", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRNativeBuffer::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numBytes
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_numBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OVRNativeBuffer::dyn_m_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::dyn_m_ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRNativeBuffer.Reset
void GlobalNamespace::OVRNativeBuffer::Reset(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.GetCapacity
int GlobalNamespace::OVRNativeBuffer::GetCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.GetPointer
::System::IntPtr GlobalNamespace::OVRNativeBuffer::GetPointer(int byteOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::GetPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, byteOffset);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Dispose
void GlobalNamespace::OVRNativeBuffer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: OVRNativeBuffer.Reallocate
void GlobalNamespace::OVRNativeBuffer::Reallocate(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Reallocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reallocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numBytes);
}
// Autogenerated method: OVRNativeBuffer.Release
void GlobalNamespace::OVRNativeBuffer::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRNativeBuffer.Finalize
void GlobalNamespace::OVRNativeBuffer::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNativeBuffer::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDebugHeadController
#include "GlobalNamespace/OVRDebugHeadController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowPitchLook
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowPitchLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowPitchLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowYawLook
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowYawLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowYawLook"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertPitch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_InvertPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertPitch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_PitchDegreesPerSec
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_PitchDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_PitchDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single GamePad_YawDegreesPerSec
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_GamePad_YawDegreesPerSec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GamePad_YawDegreesPerSec"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowMovement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_AllowMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ForwardSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_ForwardSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ForwardSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StrafeSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_StrafeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrafeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::OVRDebugHeadController::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDebugHeadController.Awake
void GlobalNamespace::OVRDebugHeadController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Start
void GlobalNamespace::OVRDebugHeadController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugHeadController.Update
void GlobalNamespace::OVRDebugHeadController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDebugHeadController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRDisplay/LatencyData
#include "GlobalNamespace/OVRDisplay_LatencyData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean needsConfigureTexture
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_needsConfigureTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needsConfigureTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRDisplay/EyeRenderDesc[] eyeDescs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>& GlobalNamespace::OVRDisplay::dyn_eyeDescs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_eyeDescs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeDescs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRDisplay::EyeRenderDesc>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recenterRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRDisplay::dyn_recenterRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 recenterRequestedFrameCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_recenterRequestedFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recenterRequestedFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 localTrackingSpaceRecenterCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_localTrackingSpaceRecenterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTrackingSpaceRecenterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action RecenteredPose
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OVRDisplay::dyn_RecenteredPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::dyn_RecenteredPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecenteredPose"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRDisplay.get_acceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_acceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_acceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_velocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_angularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_latency
::GlobalNamespace::OVRDisplay::LatencyData GlobalNamespace::OVRDisplay::get_latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_latency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_latency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::LatencyData, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_appFramerate
float GlobalNamespace::OVRDisplay::get_appFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_appFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_recommendedMSAALevel
int GlobalNamespace::OVRDisplay::get_recommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_recommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recommendedMSAALevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequenciesAvailable
::ArrayW<float> GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequenciesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.get_displayFrequency
float GlobalNamespace::OVRDisplay::get_displayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::get_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.set_displayFrequency
void GlobalNamespace::OVRDisplay::set_displayFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::set_displayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.add_RecenteredPose
void GlobalNamespace::OVRDisplay::add_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::add_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.remove_RecenteredPose
void GlobalNamespace::OVRDisplay::remove_RecenteredPose(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::remove_RecenteredPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RecenteredPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRDisplay.Update
void GlobalNamespace::OVRDisplay::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.RecenterPose
void GlobalNamespace::OVRDisplay::RecenterPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::RecenterPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecenterPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.GetEyeRenderDesc
::GlobalNamespace::OVRDisplay::EyeRenderDesc GlobalNamespace::OVRDisplay::GetEyeRenderDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::GetEyeRenderDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeRenderDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRDisplay::EyeRenderDesc, false>(this, ___internal__method, eye);
}
// Autogenerated method: OVRDisplay.UpdateTextures
void GlobalNamespace::OVRDisplay::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDisplay.ConfigureEyeDesc
void GlobalNamespace::OVRDisplay::ConfigureEyeDesc(::UnityEngine::XR::XRNode eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRDisplay::ConfigureEyeDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureEyeDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eye);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics
#include "GlobalNamespace/OVRHaptics.hpp"
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> GlobalNamespace::OVRHaptics::_get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_Channels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>>("", "OVRHaptics", "Channels"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel[] Channels
void GlobalNamespace::OVRHaptics::_set_Channels(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_Channels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "Channels", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_LeftChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_LeftChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "LeftChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel LeftChannel
void GlobalNamespace::OVRHaptics::_set_LeftChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_LeftChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "LeftChannel", value));
}
// Autogenerated static field getter
// Get static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
::GlobalNamespace::OVRHaptics::OVRHapticsChannel* GlobalNamespace::OVRHaptics::_get_RightChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_RightChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHaptics::OVRHapticsChannel*>("", "OVRHaptics", "RightChannel"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHaptics/OVRHapticsChannel RightChannel
void GlobalNamespace::OVRHaptics::_set_RightChannel(::GlobalNamespace::OVRHaptics::OVRHapticsChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_RightChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "RightChannel", value));
}
// Autogenerated static field getter
// Get static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> GlobalNamespace::OVRHaptics::_get_m_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_get_m_outputs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*>>("", "OVRHaptics", "m_outputs"));
}
// Autogenerated static field setter
// Set static field: static private readonly OVRHaptics/OVRHapticsOutput[] m_outputs
void GlobalNamespace::OVRHaptics::_set_m_outputs(::ArrayW<::GlobalNamespace::OVRHaptics::OVRHapticsOutput*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::_set_m_outputs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics", "m_outputs", value));
}
// Autogenerated method: OVRHaptics..cctor
void GlobalNamespace::OVRHaptics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics.Process
void GlobalNamespace::OVRHaptics::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics", "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/Config
#include "GlobalNamespace/OVRHaptics_Config.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleRateHz>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleRateHz$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleRateHz>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleRateHz$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleRateHz>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$SampleSizeInBytes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <SampleSizeInBytes>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$SampleSizeInBytes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<SampleSizeInBytes>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumSafeSamplesQueued$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumSafeSamplesQueued>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumSafeSamplesQueued$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumSafeSamplesQueued>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MinimumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MinimumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MinimumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MinimumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$OptimalBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <OptimalBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$OptimalBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<OptimalBufferSamplesCount>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
int GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_get_$MaximumBufferSamplesCount$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <MaximumBufferSamplesCount>k__BackingField
void GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::_set_$MaximumBufferSamplesCount$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHaptics/Config", "<MaximumBufferSamplesCount>k__BackingField", value));
}
// Autogenerated method: OVRHaptics/Config.get_SampleRateHz
int GlobalNamespace::OVRHaptics::Config::get_SampleRateHz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleRateHz
void GlobalNamespace::OVRHaptics::Config::set_SampleRateHz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleRateHz");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleRateHz", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_SampleSizeInBytes
int GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_SampleSizeInBytes
void GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_SampleSizeInBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_SampleSizeInBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumSafeSamplesQueued
int GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumSafeSamplesQueued
void GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumSafeSamplesQueued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumSafeSamplesQueued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MinimumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MinimumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MinimumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MinimumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_OptimalBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_OptimalBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_OptimalBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_OptimalBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config.get_MaximumBufferSamplesCount
int GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::get_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "get_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.set_MaximumBufferSamplesCount
void GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::set_MaximumBufferSamplesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "set_MaximumBufferSamplesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRHaptics/Config..cctor
void GlobalNamespace::OVRHaptics::Config::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHaptics/Config.Load
void GlobalNamespace::OVRHaptics::Config::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::Config::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHaptics/Config", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsChannel
#include "GlobalNamespace/OVRHaptics_OVRHapticsChannel.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRHaptics/OVRHapticsOutput m_output
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHaptics::OVRHapticsOutput*& GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::dyn_m_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_output"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHaptics::OVRHapticsOutput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsChannel.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsChannel::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput.hpp"
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRNativeBuffer
#include "GlobalNamespace/OVRNativeBuffer.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_lowLatencyMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_lowLatencyMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lowLatencyMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_paddingEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_prevSamplesQueued
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueued");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueued"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_prevSamplesQueuedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_prevSamplesQueuedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevSamplesQueuedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionHits
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionHits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numPredictionMisses
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numPredictionMisses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numPredictionMisses"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_numUnderruns
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_numUnderruns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_numUnderruns"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker> m_pendingClips
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_pendingClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pendingClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_controller
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_controller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_controller"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRNativeBuffer m_nativeBuffer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRNativeBuffer*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_nativeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nativeBuffer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRNativeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip m_paddingClip
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::dyn_m_paddingClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paddingClip"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Process
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Preempt
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Preempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Queue
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Queue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Queue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Mix
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix(::GlobalNamespace::OVRHapticsClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Mix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput.Clear
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker
#include "GlobalNamespace/OVRHaptics_OVRHapticsOutput_ClipPlaybackTracker.hpp"
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ReadCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$ReadCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$ReadCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReadCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRHapticsClip <Clip>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHapticsClip*& GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$Clip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::dyn_$Clip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Clip>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHapticsClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_ReadCount
int GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_ReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_ReadCount
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_ReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.get_Clip
::GlobalNamespace::OVRHapticsClip* GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::get_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRHapticsClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVRHaptics/OVRHapticsOutput/ClipPlaybackTracker.set_Clip
void GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip(::GlobalNamespace::OVRHapticsClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHaptics::OVRHapticsOutput::ClipPlaybackTracker::set_Clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHapticsClip
#include "GlobalNamespace/OVRHapticsClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHapticsClip::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Capacity>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHapticsClip::dyn_$Capacity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Capacity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Capacity>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Samples>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::OVRHapticsClip::dyn_$Samples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::dyn_$Samples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Samples>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHapticsClip.get_Count
int GlobalNamespace::OVRHapticsClip::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Count
void GlobalNamespace::OVRHapticsClip::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Capacity
int GlobalNamespace::OVRHapticsClip::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Capacity
void GlobalNamespace::OVRHapticsClip::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Capacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.get_Samples
::ArrayW<uint8_t> GlobalNamespace::OVRHapticsClip::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::get_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.set_Samples
void GlobalNamespace::OVRHapticsClip::set_Samples(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::set_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHapticsClip.WriteSample
void GlobalNamespace::OVRHapticsClip::WriteSample(uint8_t sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::WriteSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sample);
}
// Autogenerated method: OVRHapticsClip.Reset
void GlobalNamespace::OVRHapticsClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHapticsClip.InitializeFromAudioFloatTrack
void GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack(::ArrayW<float> sourceData, double sourceFrequency, int sourceChannelCount, int sourceChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHapticsClip::InitializeFromAudioFloatTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFromAudioFloatTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceData), ::il2cpp_utils::ExtractType(sourceFrequency), ::il2cpp_utils::ExtractType(sourceChannelCount), ::il2cpp_utils::ExtractType(sourceChannel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceData, sourceFrequency, sourceChannelCount, sourceChannel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_X_PITCH
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_X_PITCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_X_PITCH
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_X_PITCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_X_PITCH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_Y
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_Y
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_Y", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUSE_SCALE_HEIGHT
float GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MOUSE_SCALE_HEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUSE_SCALE_HEIGHT
void GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MOUSE_SCALE_HEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MOUSE_SCALE_HEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MAX_ROLL
float GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_get_MAX_ROLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRHeadsetEmulator", "MAX_ROLL"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MAX_ROLL
void GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::_set_MAX_ROLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator", "MAX_ROLL", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRHeadsetEmulator/OpMode opMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRHeadsetEmulator::OpMode& GlobalNamespace::OVRHeadsetEmulator::dyn_opMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_opMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRHeadsetEmulator::OpMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetHmdPoseOnRelease
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseOnRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseOnRelease");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetHmdPoseOnRelease"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean resetHmdPoseByMiddleMouseButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseByMiddleMouseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_resetHmdPoseByMiddleMouseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetHmdPoseByMiddleMouseButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] activateKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRHeadsetEmulator::dyn_activateKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_activateKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activateKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] pitchKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRHeadsetEmulator::dyn_pitchKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_pitchKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRManager manager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRManager*& GlobalNamespace::OVRHeadsetEmulator::dyn_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean lastFrameEmulationActivated
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_lastFrameEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_lastFrameEmulationActivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFrameEmulationActivated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 recordedHeadPoseRelativeOffsetTranslation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetTranslation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordedHeadPoseRelativeOffsetTranslation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 recordedHeadPoseRelativeOffsetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_recordedHeadPoseRelativeOffsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordedHeadPoseRelativeOffsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasSentEvent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_hasSentEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_hasSentEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSentEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emulatorHasInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRHeadsetEmulator::dyn_emulatorHasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_emulatorHasInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emulatorHasInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CursorLockMode previousCursorLockMode
[[deprecated("Use field access instead!")]] ::UnityEngine::CursorLockMode& GlobalNamespace::OVRHeadsetEmulator::dyn_previousCursorLockMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::dyn_previousCursorLockMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousCursorLockMode"))->offset;
  return *reinterpret_cast<::UnityEngine::CursorLockMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRHeadsetEmulator.Start
void GlobalNamespace::OVRHeadsetEmulator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.Update
void GlobalNamespace::OVRHeadsetEmulator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsEmulationActivated
bool GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::IsEmulationActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmulationActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHeadsetEmulator.IsTweakingPitch
bool GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::IsTweakingPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTweakingPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHeadsetEmulator/OpMode
#include "GlobalNamespace/OVRHeadsetEmulator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode Off
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode Off
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode EditorOnly
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_EditorOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "EditorOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode EditorOnly
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_EditorOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "EditorOnly", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
::GlobalNamespace::OVRHeadsetEmulator::OpMode GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_get_AlwaysOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRHeadsetEmulator::OpMode>("", "OVRHeadsetEmulator/OpMode", "AlwaysOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRHeadsetEmulator/OpMode AlwaysOn
void GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn(::GlobalNamespace::OVRHeadsetEmulator::OpMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::_set_AlwaysOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHeadsetEmulator/OpMode", "AlwaysOn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRHeadsetEmulator::OpMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRHeadsetEmulator::OpMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput
#include "GlobalNamespace/OVRInput.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
// Including type: OVRInput/HapticInfo
#include "GlobalNamespace/OVRInput_HapticInfo.hpp"
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Including type: OVRInput/OVRControllerTouch
#include "GlobalNamespace/OVRInput_OVRControllerTouch.hpp"
// Including type: OVRInput/OVRControllerLTouch
#include "GlobalNamespace/OVRInput_OVRControllerLTouch.hpp"
// Including type: OVRInput/OVRControllerRTouch
#include "GlobalNamespace/OVRInput_OVRControllerRTouch.hpp"
// Including type: OVRInput/OVRControllerHands
#include "GlobalNamespace/OVRInput_OVRControllerHands.hpp"
// Including type: OVRInput/OVRControllerLHand
#include "GlobalNamespace/OVRInput_OVRControllerLHand.hpp"
// Including type: OVRInput/OVRControllerRHand
#include "GlobalNamespace/OVRInput_OVRControllerRHand.hpp"
// Including type: OVRInput/OVRControllerRemote
#include "GlobalNamespace/OVRInput_OVRControllerRemote.hpp"
// Including type: OVRInput/OVRControllerGamepadPC
#include "GlobalNamespace/OVRInput_OVRControllerGamepadPC.hpp"
// Including type: OVRInput/OVRControllerGamepadMac
#include "GlobalNamespace/OVRInput_OVRControllerGamepadMac.hpp"
// Including type: OVRInput/OVRControllerGamepadAndroid
#include "GlobalNamespace/OVRInput_OVRControllerGamepadAndroid.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: OVR.OpenVR.ETrackedDeviceProperty
#include "OVR/OpenVR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_AXIS_AS_BUTTON_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_AS_BUTTON_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_AXIS_AS_BUTTON_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_AS_BUTTON_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
float GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_AXIS_DEADZONE_THRESHOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "AXIS_DEADZONE_THRESHOLD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single AXIS_DEADZONE_THRESHOLD
void GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_AXIS_DEADZONE_THRESHOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "AXIS_DEADZONE_THRESHOLD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>* GlobalNamespace::OVRInput::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>*>("", "OVRInput", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<OVRInput/OVRControllerBase> controllers
void GlobalNamespace::OVRInput::_set_controllers(::System::Collections::Generic::List_1<::GlobalNamespace::OVRInput::OVRControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "controllers", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller activeControllerType
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_activeControllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_activeControllerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput", "activeControllerType"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller activeControllerType
void GlobalNamespace::OVRInput::_set_activeControllerType(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_activeControllerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "activeControllerType", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/Controller connectedControllerTypes
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::_get_connectedControllerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_connectedControllerTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput", "connectedControllerTypes"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/Controller connectedControllerTypes
void GlobalNamespace::OVRInput::_set_connectedControllerTypes(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_connectedControllerTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "connectedControllerTypes", value));
}
// Autogenerated static field getter
// Get static field: static private OVRPlugin/Step stepType
::GlobalNamespace::OVRPlugin::Step GlobalNamespace::OVRInput::_get_stepType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_stepType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRPlugin::Step>("", "OVRInput", "stepType"));
}
// Autogenerated static field setter
// Set static field: static private OVRPlugin/Step stepType
void GlobalNamespace::OVRInput::_set_stepType(::GlobalNamespace::OVRPlugin::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_stepType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "stepType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 fixedUpdateCount
int GlobalNamespace::OVRInput::_get_fixedUpdateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_fixedUpdateCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "fixedUpdateCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 fixedUpdateCount
void GlobalNamespace::OVRInput::_set_fixedUpdateCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_fixedUpdateCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "fixedUpdateCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveController
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveController"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveController
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveController(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveController", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _pluginSupportsActiveControllerCached
bool GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRInput", "_pluginSupportsActiveControllerCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _pluginSupportsActiveControllerCached
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version _pluginSupportsActiveControllerMinVersion
::System::Version* GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get__pluginSupportsActiveControllerMinVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "OVRInput", "_pluginSupportsActiveControllerMinVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version _pluginSupportsActiveControllerMinVersion
void GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set__pluginSupportsActiveControllerMinVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "_pluginSupportsActiveControllerMinVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NUM_HAPTIC_CHANNELS
int GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_NUM_HAPTIC_CHANNELS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRInput", "NUM_HAPTIC_CHANNELS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NUM_HAPTIC_CHANNELS
void GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_NUM_HAPTIC_CHANNELS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "NUM_HAPTIC_CHANNELS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRInput/HapticInfo[] hapticInfos
::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*> GlobalNamespace::OVRInput::_get_hapticInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_hapticInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*>>("", "OVRInput", "hapticInfos"));
}
// Autogenerated static field setter
// Set static field: static private OVRInput/HapticInfo[] hapticInfos
void GlobalNamespace::OVRInput::_set_hapticInfos(::ArrayW<::GlobalNamespace::OVRInput::HapticInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_hapticInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "hapticInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
float GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_MAX_HAPTIC_AMPLITUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single OPENVR_MAX_HAPTIC_AMPLITUDE
void GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_MAX_HAPTIC_AMPLITUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_MAX_HAPTIC_AMPLITUDE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
float GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_HAPTIC_VIBRATION_DURATION_SECONDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS"));
}
// Autogenerated static field setter
// Set static field: static private System.Single HAPTIC_VIBRATION_DURATION_SECONDS
void GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_HAPTIC_VIBRATION_DURATION_SECONDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "HAPTIC_VIBRATION_DURATION_SECONDS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_TOUCH_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_TOUCH_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_TOUCH_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_TOUCH_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_TOUCH_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_TOUCH_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_VIVE_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_VIVE_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_VIVE_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_VIVE_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
::StringW GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String OPENVR_WINDOWSMR_CONTROLLER_NAME
void GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_OPENVR_WINDOWSMR_CONTROLLER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "OPENVR_WINDOWSMR_CONTROLLER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails> GlobalNamespace::OVRInput::_get_openVRControllerDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_get_openVRControllerDetails");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails>>("", "OVRInput", "openVRControllerDetails"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRControllerDetails[] openVRControllerDetails
void GlobalNamespace::OVRInput::_set_openVRControllerDetails(::ArrayW<::GlobalNamespace::OVRInput::OpenVRControllerDetails> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::_set_openVRControllerDetails");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput", "openVRControllerDetails", value));
}
// Autogenerated method: OVRInput.get_pluginSupportsActiveController
bool GlobalNamespace::OVRInput::get_pluginSupportsActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::get_pluginSupportsActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "get_pluginSupportsActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput..cctor
void GlobalNamespace::OVRInput::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Update
void GlobalNamespace::OVRInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.FixedUpdate
void GlobalNamespace::OVRInput::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.GetControllerOrientationTracked
bool GlobalNamespace::OVRInput::GetControllerOrientationTracked(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerOrientationValid
bool GlobalNamespace::OVRInput::GetControllerOrientationValid(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerOrientationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerOrientationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionTracked
bool GlobalNamespace::OVRInput::GetControllerPositionTracked(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerPositionTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetControllerPositionValid
bool GlobalNamespace::OVRInput::GetControllerPositionValid(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerPositionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerPositionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerPosition
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerPosition(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerVelocity(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAcceleration(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerRotation
::UnityEngine::Quaternion GlobalNamespace::OVRInput::GetLocalControllerRotation(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularVelocity
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetLocalControllerAngularAcceleration
::UnityEngine::Vector3 GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetLocalControllerAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetLocalControllerAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType);
}
// Autogenerated method: OVRInput.GetDominantHand
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::GetDominantHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDominantHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Handedness, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButton
bool GlobalNamespace::OVRInput::GetResolvedButton(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonDown
bool GlobalNamespace::OVRInput::GetResolvedButtonDown(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedButtonUp
bool GlobalNamespace::OVRInput::GetResolvedButtonUp(::GlobalNamespace::OVRInput::Button virtualMask, ::GlobalNamespace::OVRInput::RawButton rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedButtonUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedButtonUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouch
bool GlobalNamespace::OVRInput::GetResolvedTouch(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchDown
bool GlobalNamespace::OVRInput::GetResolvedTouchDown(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouchDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedTouchUp
bool GlobalNamespace::OVRInput::GetResolvedTouchUp(::GlobalNamespace::OVRInput::Touch virtualMask, ::GlobalNamespace::OVRInput::RawTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedTouchUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedTouchUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
bool GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouch
bool GlobalNamespace::OVRInput::GetResolvedNearTouch(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetDown
bool GlobalNamespace::OVRInput::GetDown(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchDown
bool GlobalNamespace::OVRInput::GetResolvedNearTouchDown(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouchDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.GetUp
bool GlobalNamespace::OVRInput::GetUp(::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedNearTouchUp
bool GlobalNamespace::OVRInput::GetResolvedNearTouchUp(::GlobalNamespace::OVRInput::NearTouch virtualMask, ::GlobalNamespace::OVRInput::RawNearTouch rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedNearTouchUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedNearTouchUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Axis1D virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
float GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawAxis1D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis1D
float GlobalNamespace::OVRInput::GetResolvedAxis1D(::GlobalNamespace::OVRInput::Axis1D virtualMask, ::GlobalNamespace::OVRInput::RawAxis1D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedAxis1D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis1D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
::UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::Axis2D virtualMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, controllerMask);
}
// Autogenerated method: OVRInput.Get
::UnityEngine::Vector2 GlobalNamespace::OVRInput::Get(::GlobalNamespace::OVRInput::RawAxis2D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetResolvedAxis2D
::UnityEngine::Vector2 GlobalNamespace::OVRInput::GetResolvedAxis2D(::GlobalNamespace::OVRInput::Axis2D virtualMask, ::GlobalNamespace::OVRInput::RawAxis2D rawMask, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetResolvedAxis2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetResolvedAxis2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask), ::il2cpp_utils::ExtractType(rawMask), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, virtualMask, rawMask, controllerMask);
}
// Autogenerated method: OVRInput.GetConnectedControllers
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetConnectedControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.IsControllerConnected
bool GlobalNamespace::OVRInput::IsControllerConnected(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::IsControllerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "IsControllerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller);
}
// Autogenerated method: OVRInput.GetActiveController
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.StartVibration
void GlobalNamespace::OVRInput::StartVibration(float amplitude, float duration, ::UnityEngine::XR::XRNode controllerNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::StartVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "StartVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(controllerNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, amplitude, duration, controllerNode);
}
// Autogenerated method: OVRInput.SetOpenVRLocalPose
void GlobalNamespace::OVRInput::SetOpenVRLocalPose(::UnityEngine::Vector3 leftPos, ::UnityEngine::Vector3 rightPos, ::UnityEngine::Quaternion leftRot, ::UnityEngine::Quaternion rightRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetOpenVRLocalPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetOpenVRLocalPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftPos), ::il2cpp_utils::ExtractType(rightPos), ::il2cpp_utils::ExtractType(leftRot), ::il2cpp_utils::ExtractType(rightRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftPos, rightPos, leftRot, rightRot);
}
// Autogenerated method: OVRInput.GetOpenVRStringProperty
::StringW GlobalNamespace::OVRInput::GetOpenVRStringProperty(::OVR::OpenVR::ETrackedDeviceProperty prop, uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetOpenVRStringProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetOpenVRStringProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prop, deviceId);
}
// Autogenerated method: OVRInput.UpdateXRControllerNodeIds
void GlobalNamespace::OVRInput::UpdateXRControllerNodeIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::UpdateXRControllerNodeIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerNodeIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.UpdateXRControllerHaptics
void GlobalNamespace::OVRInput::UpdateXRControllerHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::UpdateXRControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "UpdateXRControllerHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.InitHapticInfo
void GlobalNamespace::OVRInput::InitHapticInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::InitHapticInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "InitHapticInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRInput.PlayHapticImpulse
void GlobalNamespace::OVRInput::PlayHapticImpulse(float amplitude, ::UnityEngine::XR::XRNode deviceNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::PlayHapticImpulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "PlayHapticImpulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(deviceNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, amplitude, deviceNode);
}
// Autogenerated method: OVRInput.IsValidOpenVRDevice
bool GlobalNamespace::OVRInput::IsValidOpenVRDevice(uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::IsValidOpenVRDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "IsValidOpenVRDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId);
}
// Autogenerated method: OVRInput.SetControllerVibration
void GlobalNamespace::OVRInput::SetControllerVibration(float frequency, float amplitude, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude), ::il2cpp_utils::ExtractType(controllerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frequency, amplitude, controllerMask);
}
// Autogenerated method: OVRInput.GetControllerBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining(::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::GetControllerBatteryPercentRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "GetControllerBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRInput.CalculateAbsMax
::UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateAbsMax(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateAbsMax
float GlobalNamespace::OVRInput::CalculateAbsMax(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateAbsMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateAbsMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: OVRInput.CalculateDeadzone
::UnityEngine::Vector2 GlobalNamespace::OVRInput::CalculateDeadzone(::UnityEngine::Vector2 a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(deadzone)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.CalculateDeadzone
float GlobalNamespace::OVRInput::CalculateDeadzone(float a, float deadzone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::CalculateDeadzone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "CalculateDeadzone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(deadzone)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, deadzone);
}
// Autogenerated method: OVRInput.ShouldResolveController
bool GlobalNamespace::OVRInput::ShouldResolveController(::GlobalNamespace::OVRInput::Controller controllerType, ::GlobalNamespace::OVRInput::Controller controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::ShouldResolveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRInput", "ShouldResolveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType), ::il2cpp_utils::ExtractType(controllerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controllerType, controllerMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Button None
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button None
void GlobalNamespace::OVRInput::Button::_set_None(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button One
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button One
void GlobalNamespace::OVRInput::Button::_set_One(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Two
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Two
void GlobalNamespace::OVRInput::Button::_set_Two(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Three
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Three
void GlobalNamespace::OVRInput::Button::_set_Three(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Four
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Four
void GlobalNamespace::OVRInput::Button::_set_Four(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Start
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Start
void GlobalNamespace::OVRInput::Button::_set_Start(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Back
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Back
void GlobalNamespace::OVRInput::Button::_set_Back(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryShoulder
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryShoulder
void GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryHandTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstick
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryThumbstickRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button PrimaryTouchpad
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button PrimaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryShoulder
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryShoulder
void GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryHandTrigger
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryHandTrigger
void GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstick
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstick
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickUp
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickDown
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickLeft
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryThumbstickRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryThumbstickRight
void GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button SecondaryTouchpad
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button SecondaryTouchpad
void GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadUp
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadUp
void GlobalNamespace::OVRInput::Button::_set_DpadUp(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadDown
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadDown
void GlobalNamespace::OVRInput::Button::_set_DpadDown(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadLeft
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadLeft
void GlobalNamespace::OVRInput::Button::_set_DpadLeft(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button DpadRight
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button DpadRight
void GlobalNamespace::OVRInput::Button::_set_DpadRight(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Up
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Up
void GlobalNamespace::OVRInput::Button::_set_Up(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Down
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Down
void GlobalNamespace::OVRInput::Button::_set_Down(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Left
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Left
void GlobalNamespace::OVRInput::Button::_set_Left(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Right
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Right
void GlobalNamespace::OVRInput::Button::_set_Right(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Button Any
::GlobalNamespace::OVRInput::Button GlobalNamespace::OVRInput::Button::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Button>("", "OVRInput/Button", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Button Any
void GlobalNamespace::OVRInput::Button::_set_Any(::GlobalNamespace::OVRInput::Button value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Button", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Button::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Button::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton None
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton None
void GlobalNamespace::OVRInput::RawButton::_set_None(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton A
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton A
void GlobalNamespace::OVRInput::RawButton::_set_A(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton B
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton B
void GlobalNamespace::OVRInput::RawButton::_set_B(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton X
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton X
void GlobalNamespace::OVRInput::RawButton::_set_X(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Y
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Y
void GlobalNamespace::OVRInput::RawButton::_set_Y(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Start
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Start
void GlobalNamespace::OVRInput::RawButton::_set_Start(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Back
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Back"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Back
void GlobalNamespace::OVRInput::RawButton::_set_Back(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LShoulder
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LShoulder
void GlobalNamespace::OVRInput::RawButton::_set_LShoulder(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LIndexTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LHandTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstick
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstick(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LThumbstickRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton LTouchpad
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton LTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_LTouchpad(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RShoulder
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RShoulder"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RShoulder
void GlobalNamespace::OVRInput::RawButton::_set_RShoulder(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RIndexTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RIndexTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RHandTrigger
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RHandTrigger
void GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstick
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstick
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstick(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickUp
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickDown
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickLeft
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RThumbstickRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RThumbstickRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RThumbstickRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RThumbstickRight
void GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RThumbstickRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RThumbstickRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton RTouchpad
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton RTouchpad
void GlobalNamespace::OVRInput::RawButton::_set_RTouchpad(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadUp
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadUp"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadUp
void GlobalNamespace::OVRInput::RawButton::_set_DpadUp(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadDown
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadDown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadDown
void GlobalNamespace::OVRInput::RawButton::_set_DpadDown(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadLeft
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadLeft
void GlobalNamespace::OVRInput::RawButton::_set_DpadLeft(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton DpadRight
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_DpadRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "DpadRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton DpadRight
void GlobalNamespace::OVRInput::RawButton::_set_DpadRight(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_DpadRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "DpadRight", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawButton Any
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::RawButton::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawButton>("", "OVRInput/RawButton", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawButton Any
void GlobalNamespace::OVRInput::RawButton::_set_Any(::GlobalNamespace::OVRInput::RawButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawButton", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch None
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch None
void GlobalNamespace::OVRInput::Touch::_set_None(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch One
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "One"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch One
void GlobalNamespace::OVRInput::Touch::_set_One(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "One", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Two
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Two
void GlobalNamespace::OVRInput::Touch::_set_Two(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Three
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Three"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Three
void GlobalNamespace::OVRInput::Touch::_set_Three(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Four
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Four"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Four
void GlobalNamespace::OVRInput::Touch::_set_Four(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbstick
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryThumbRest
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch PrimaryTouchpad
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch PrimaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbstick
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbstick
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryThumbRest
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryThumbRest
void GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch SecondaryTouchpad
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch SecondaryTouchpad
void GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Touch Any
::GlobalNamespace::OVRInput::Touch GlobalNamespace::OVRInput::Touch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Touch>("", "OVRInput/Touch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Touch Any
void GlobalNamespace::OVRInput::Touch::_set_Any(::GlobalNamespace::OVRInput::Touch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Touch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Touch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Touch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch None
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch None
void GlobalNamespace::OVRInput::RawTouch::_set_None(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch A
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "A"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch A
void GlobalNamespace::OVRInput::RawTouch::_set_A(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "A", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch B
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "B"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch B
void GlobalNamespace::OVRInput::RawTouch::_set_B(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "B", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch X
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "X"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch X
void GlobalNamespace::OVRInput::RawTouch::_set_X(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "X", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Y
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Y"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Y
void GlobalNamespace::OVRInput::RawTouch::_set_Y(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LIndexTrigger
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbstick
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LThumbRest
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch LTouchpad
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch LTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RIndexTrigger
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbstick
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbstick
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RThumbRest
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RThumbRest
void GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch RTouchpad
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch RTouchpad
void GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawTouch Any
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::RawTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawTouch>("", "OVRInput/RawTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawTouch Any
void GlobalNamespace::OVRInput::RawTouch::_set_Any(::GlobalNamespace::OVRInput::RawTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch None
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch None
void GlobalNamespace::OVRInput::NearTouch::_set_None(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryIndexTrigger
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch PrimaryThumbButtons
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_PrimaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "PrimaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch PrimaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_PrimaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "PrimaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryIndexTrigger
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryIndexTrigger
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch SecondaryThumbButtons
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_SecondaryThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "SecondaryThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch SecondaryThumbButtons
void GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_SecondaryThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "SecondaryThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/NearTouch Any
::GlobalNamespace::OVRInput::NearTouch GlobalNamespace::OVRInput::NearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::NearTouch>("", "OVRInput/NearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/NearTouch Any
void GlobalNamespace::OVRInput::NearTouch::_set_Any(::GlobalNamespace::OVRInput::NearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/NearTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::NearTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::NearTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch None
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch None
void GlobalNamespace::OVRInput::RawNearTouch::_set_None(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LIndexTrigger
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch LThumbButtons
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_LThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "LThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch LThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_LThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "LThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RIndexTrigger
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RIndexTrigger
void GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch RThumbButtons
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_RThumbButtons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "RThumbButtons"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch RThumbButtons
void GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_RThumbButtons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "RThumbButtons", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawNearTouch Any
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::RawNearTouch::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawNearTouch>("", "OVRInput/RawNearTouch", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawNearTouch Any
void GlobalNamespace::OVRInput::RawNearTouch::_set_Any(::GlobalNamespace::OVRInput::RawNearTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawNearTouch", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawNearTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawNearTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D None
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D None
void GlobalNamespace::OVRInput::Axis1D::_set_None(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryIndexTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D PrimaryHandTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_PrimaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "PrimaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D PrimaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_PrimaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "PrimaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryIndexTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryIndexTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D SecondaryHandTrigger
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_SecondaryHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "SecondaryHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D SecondaryHandTrigger
void GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_SecondaryHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "SecondaryHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis1D Any
::GlobalNamespace::OVRInput::Axis1D GlobalNamespace::OVRInput::Axis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis1D>("", "OVRInput/Axis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis1D Any
void GlobalNamespace::OVRInput::Axis1D::_set_Any(::GlobalNamespace::OVRInput::Axis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis1D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Axis1D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis1D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D None
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D None
void GlobalNamespace::OVRInput::RawAxis1D::_set_None(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LIndexTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LIndexTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D LHandTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_LHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_LHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "LHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D LHandTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_LHandTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_LHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "LHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RIndexTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RIndexTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RIndexTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RIndexTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RIndexTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RIndexTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D RHandTrigger
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_RHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_RHandTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "RHandTrigger"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D RHandTrigger
void GlobalNamespace::OVRInput::RawAxis1D::_set_RHandTrigger(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_RHandTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "RHandTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis1D Any
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::RawAxis1D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis1D>("", "OVRInput/RawAxis1D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis1D Any
void GlobalNamespace::OVRInput::RawAxis1D::_set_Any(::GlobalNamespace::OVRInput::RawAxis1D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis1D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawAxis1D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis1D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D None
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D None
void GlobalNamespace::OVRInput::Axis2D::_set_None(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D PrimaryThumbstick
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_PrimaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "PrimaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D PrimaryThumbstick
void GlobalNamespace::OVRInput::Axis2D::_set_PrimaryThumbstick(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_PrimaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "PrimaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D PrimaryTouchpad
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_PrimaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "PrimaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D PrimaryTouchpad
void GlobalNamespace::OVRInput::Axis2D::_set_PrimaryTouchpad(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_PrimaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "PrimaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D SecondaryThumbstick
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_SecondaryThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "SecondaryThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D SecondaryThumbstick
void GlobalNamespace::OVRInput::Axis2D::_set_SecondaryThumbstick(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_SecondaryThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "SecondaryThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D SecondaryTouchpad
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_SecondaryTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "SecondaryTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D SecondaryTouchpad
void GlobalNamespace::OVRInput::Axis2D::_set_SecondaryTouchpad(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_SecondaryTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "SecondaryTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Axis2D Any
::GlobalNamespace::OVRInput::Axis2D GlobalNamespace::OVRInput::Axis2D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Axis2D>("", "OVRInput/Axis2D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Axis2D Any
void GlobalNamespace::OVRInput::Axis2D::_set_Any(::GlobalNamespace::OVRInput::Axis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Axis2D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Axis2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Axis2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D None
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D None
void GlobalNamespace::OVRInput::RawAxis2D::_set_None(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D LThumbstick
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_LThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_LThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "LThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D LThumbstick
void GlobalNamespace::OVRInput::RawAxis2D::_set_LThumbstick(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_LThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "LThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D LTouchpad
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_LTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_LTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "LTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D LTouchpad
void GlobalNamespace::OVRInput::RawAxis2D::_set_LTouchpad(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_LTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "LTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D RThumbstick
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_RThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_RThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "RThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D RThumbstick
void GlobalNamespace::OVRInput::RawAxis2D::_set_RThumbstick(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_RThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "RThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D RTouchpad
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_RTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_RTouchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "RTouchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D RTouchpad
void GlobalNamespace::OVRInput::RawAxis2D::_set_RTouchpad(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_RTouchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "RTouchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/RawAxis2D Any
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::RawAxis2D::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::RawAxis2D>("", "OVRInput/RawAxis2D", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/RawAxis2D Any
void GlobalNamespace::OVRInput::RawAxis2D::_set_Any(::GlobalNamespace::OVRInput::RawAxis2D value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/RawAxis2D", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::RawAxis2D::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::RawAxis2D::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OpenVRButton
#include "GlobalNamespace/OVRInput_OpenVRButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton None
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton None
void GlobalNamespace::OVRInput::OpenVRButton::_set_None(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Two
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Two"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Two
void GlobalNamespace::OVRInput::OpenVRButton::_set_Two(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Thumbstick
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Thumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Thumbstick"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Thumbstick
void GlobalNamespace::OVRInput::OpenVRButton::_set_Thumbstick(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Thumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Thumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRButton Grip
::GlobalNamespace::OVRInput::OpenVRButton GlobalNamespace::OVRInput::OpenVRButton::_get_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_get_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRButton>("", "OVRInput/OpenVRButton", "Grip"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRButton Grip
void GlobalNamespace::OVRInput::OpenVRButton::_set_Grip(::GlobalNamespace::OVRInput::OpenVRButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::_set_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRButton", "Grip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRInput::OpenVRButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Controller
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller None
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller None
void GlobalNamespace::OVRInput::Controller::_set_None(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller LTouch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_LTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_LTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "LTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller LTouch
void GlobalNamespace::OVRInput::Controller::_set_LTouch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_LTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "LTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller RTouch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_RTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_RTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "RTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller RTouch
void GlobalNamespace::OVRInput::Controller::_set_RTouch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_RTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "RTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Touch
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Touch
void GlobalNamespace::OVRInput::Controller::_set_Touch(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Remote
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Remote
void GlobalNamespace::OVRInput::Controller::_set_Remote(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Remote", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Gamepad
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Gamepad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Gamepad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Gamepad"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Gamepad
void GlobalNamespace::OVRInput::Controller::_set_Gamepad(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Gamepad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Gamepad", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Hands
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Hands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Hands"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Hands
void GlobalNamespace::OVRInput::Controller::_set_Hands(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Hands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Hands", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller LHand
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_LHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_LHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "LHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller LHand
void GlobalNamespace::OVRInput::Controller::_set_LHand(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_LHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "LHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller RHand
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_RHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_RHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "RHand"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller RHand
void GlobalNamespace::OVRInput::Controller::_set_RHand(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_RHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "RHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller Active
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "Active"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller Active
void GlobalNamespace::OVRInput::Controller::_set_Active(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Controller All
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::Controller::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Controller>("", "OVRInput/Controller", "All"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Controller All
void GlobalNamespace::OVRInput::Controller::_set_All(::GlobalNamespace::OVRInput::Controller value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Controller", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Controller::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Controller::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/Handedness
#include "GlobalNamespace/OVRInput_Handedness.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness Unsupported
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness Unsupported
void GlobalNamespace::OVRInput::Handedness::_set_Unsupported(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness LeftHanded
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_LeftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_LeftHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "LeftHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness LeftHanded
void GlobalNamespace::OVRInput::Handedness::_set_LeftHanded(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_LeftHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "LeftHanded", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/Handedness RightHanded
::GlobalNamespace::OVRInput::Handedness GlobalNamespace::OVRInput::Handedness::_get_RightHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_get_RightHanded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::Handedness>("", "OVRInput/Handedness", "RightHanded"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/Handedness RightHanded
void GlobalNamespace::OVRInput::Handedness::_set_RightHanded(::GlobalNamespace::OVRInput::Handedness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::_set_RightHanded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/Handedness", "RightHanded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRInput::Handedness::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::Handedness::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OpenVRController
#include "GlobalNamespace/OVRInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController Unknown
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController Unknown
void GlobalNamespace::OVRInput::OpenVRController::_set_Unknown(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController OculusTouch
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_OculusTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_OculusTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "OculusTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController OculusTouch
void GlobalNamespace::OVRInput::OpenVRController::_set_OculusTouch(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_OculusTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "OculusTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController ViveController
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_ViveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_ViveController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "ViveController"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController ViveController
void GlobalNamespace::OVRInput::OpenVRController::_set_ViveController(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_ViveController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "ViveController", value));
}
// Autogenerated static field getter
// Get static field: static public OVRInput/OpenVRController WindowsMRController
::GlobalNamespace::OVRInput::OpenVRController GlobalNamespace::OVRInput::OpenVRController::_get_WindowsMRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_get_WindowsMRController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRInput::OpenVRController>("", "OVRInput/OpenVRController", "WindowsMRController"));
}
// Autogenerated static field setter
// Set static field: static public OVRInput/OpenVRController WindowsMRController
void GlobalNamespace::OVRInput::OpenVRController::_set_WindowsMRController(::GlobalNamespace::OVRInput::OpenVRController value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::_set_WindowsMRController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRInput/OpenVRController", "WindowsMRController", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OVRInput::OpenVRController::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OpenVRController::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/HapticInfo
#include "GlobalNamespace/OVRInput_HapticInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean playingHaptics
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRInput::HapticInfo::dyn_playingHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_playingHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingHaptics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticsDurationPlayed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRInput::HapticInfo::dyn_hapticsDurationPlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_hapticsDurationPlayed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticsDurationPlayed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticsDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRInput::HapticInfo::dyn_hapticsDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_hapticsDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticsDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticAmplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRInput::HapticInfo::dyn_hapticAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_hapticAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.XRNode node
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GlobalNamespace::OVRInput::HapticInfo::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::HapticInfo::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase
#include "GlobalNamespace/OVRInput_OVRControllerBase.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualButtonMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualButtonMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualTouchMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualNearTouchMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualNearTouchMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualAxis1DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis1DMap.hpp"
// Including type: OVRInput/OVRControllerBase/VirtualAxis2DMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualAxis2DMap.hpp"
// Including type: OVRInput/RawButton
#include "GlobalNamespace/OVRInput_RawButton.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
// Including type: OVRInput/RawTouch
#include "GlobalNamespace/OVRInput_RawTouch.hpp"
// Including type: OVRInput/Touch
#include "GlobalNamespace/OVRInput_Touch.hpp"
// Including type: OVRInput/RawNearTouch
#include "GlobalNamespace/OVRInput_RawNearTouch.hpp"
// Including type: OVRInput/NearTouch
#include "GlobalNamespace/OVRInput_NearTouch.hpp"
// Including type: OVRInput/RawAxis1D
#include "GlobalNamespace/OVRInput_RawAxis1D.hpp"
// Including type: OVRInput/Axis1D
#include "GlobalNamespace/OVRInput_Axis1D.hpp"
// Including type: OVRInput/RawAxis2D
#include "GlobalNamespace/OVRInput_RawAxis2D.hpp"
// Including type: OVRInput/Axis2D
#include "GlobalNamespace/OVRInput_Axis2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller controllerType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::OVRInput::OVRControllerBase::dyn_controllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_controllerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualButtonMap buttonMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_buttonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_buttonMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualTouchMap touchMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_touchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_touchMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualTouchMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualNearTouchMap nearTouchMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_nearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_nearTouchMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearTouchMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualNearTouchMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualAxis1DMap axis1DMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_axis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_axis1DMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis1DMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis1DMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/OVRControllerBase/VirtualAxis2DMap axis2DMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap*& GlobalNamespace::OVRInput::OVRControllerBase::dyn_axis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_axis2DMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis2DMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::OVRControllerBase::VirtualAxis2DMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/ControllerState4 previousState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::ControllerState4& GlobalNamespace::OVRInput::OVRControllerBase::dyn_previousState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_previousState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::ControllerState4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRPlugin/ControllerState4 currentState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRPlugin::ControllerState4& GlobalNamespace::OVRInput::OVRControllerBase::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRPlugin::ControllerState4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shouldApplyDeadzone
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRInput::OVRControllerBase::dyn_shouldApplyDeadzone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::dyn_shouldApplyDeadzone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldApplyDeadzone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRInput/OVRControllerBase.Update
::GlobalNamespace::OVRInput::Controller GlobalNamespace::OVRInput::OVRControllerBase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::Controller, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.GetOpenVRControllerState
::GlobalNamespace::OVRPlugin::ControllerState4 GlobalNamespace::OVRInput::OVRControllerBase::GetOpenVRControllerState(::GlobalNamespace::OVRInput::Controller controllerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::GetOpenVRControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOpenVRControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRPlugin::ControllerState4, false>(this, ___internal__method, controllerType);
}
// Autogenerated method: OVRInput/OVRControllerBase.SetControllerVibration
void GlobalNamespace::OVRInput::OVRControllerBase::SetControllerVibration(float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::SetControllerVibration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetControllerVibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(amplitude)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency, amplitude);
}
// Autogenerated method: OVRInput/OVRControllerBase.GetBatteryPercentRemaining
uint8_t GlobalNamespace::OVRInput::OVRControllerBase::GetBatteryPercentRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::GetBatteryPercentRemaining");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBatteryPercentRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureButtonMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureButtonMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureButtonMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureButtonMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureTouchMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureTouchMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureTouchMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureNearTouchMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureNearTouchMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureNearTouchMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureNearTouchMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureAxis1DMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis1DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis1DMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureAxis1DMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ConfigureAxis2DMap
void GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis2DMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ConfigureAxis2DMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureAxis2DMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::Button virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawButton, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawTouch GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::Touch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawNearTouch GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::NearTouch virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawNearTouch, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawAxis1D GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::Axis1D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawAxis1D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated method: OVRInput/OVRControllerBase.ResolveToRawMask
::GlobalNamespace::OVRInput::RawAxis2D GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask(::GlobalNamespace::OVRInput::Axis2D virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::ResolveToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawAxis2D, false>(this, ___internal__method, virtualMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRInput/OVRControllerBase/VirtualButtonMap
#include "GlobalNamespace/OVRInput_OVRControllerBase_VirtualButtonMap.hpp"
// Including type: OVRInput/Button
#include "GlobalNamespace/OVRInput_Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton None
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_None");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "None"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton One
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_One");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "One"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Two
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Two");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Two"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Three
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Three");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Three"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Four
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Four");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Four"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Start
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Start"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Back
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Back");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Back"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryShoulder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryShoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryShoulder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryHandTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryHandTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryHandTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstickUp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstickUp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstickDown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstickDown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstickLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstickLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryThumbstickRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryThumbstickRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryThumbstickRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton PrimaryTouchpad
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_PrimaryTouchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrimaryTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryShoulder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryShoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryShoulder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryIndexTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryIndexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryIndexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryIndexTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryHandTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryHandTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryHandTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryHandTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstick
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstick"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstickUp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstickUp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstickDown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstickDown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstickLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstickLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryThumbstickRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryThumbstickRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryThumbstickRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton SecondaryTouchpad
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryTouchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_SecondaryTouchpad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondaryTouchpad"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton DpadUp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DpadUp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton DpadDown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DpadDown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton DpadLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DpadLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton DpadRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_DpadRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DpadRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Up
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Up");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Up"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Down
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Down");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Down"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Left
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Left"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton Right
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::dyn_Right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Right"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRInput/OVRControllerBase/VirtualButtonMap.ToRawMask
::GlobalNamespace::OVRInput::RawButton GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::ToRawMask(::GlobalNamespace::OVRInput::Button virtualMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRInput::OVRControllerBase::VirtualButtonMap::ToRawMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToRawMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(virtualMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRInput::RawButton, false>(this, ___internal__method, virtualMask);
}
