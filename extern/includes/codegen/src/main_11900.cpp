// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.TouchInputModule
#include "UnityEngine/EventSystems/TouchInputModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_LastMousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::TouchInputModule::dyn_m_LastMousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::dyn_m_LastMousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastMousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_MousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::TouchInputModule::dyn_m_MousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::dyn_m_MousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.PointerEventData m_InputPointerEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData*& UnityEngine::EventSystems::TouchInputModule::dyn_m_InputPointerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::dyn_m_InputPointerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputPointerEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ForceModuleActive
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::TouchInputModule::dyn_m_ForceModuleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::dyn_m_ForceModuleActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ForceModuleActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.get_allowActivationOnStandalone
bool UnityEngine::EventSystems::TouchInputModule::get_allowActivationOnStandalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::get_allowActivationOnStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivationOnStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.set_allowActivationOnStandalone
void UnityEngine::EventSystems::TouchInputModule::set_allowActivationOnStandalone(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::set_allowActivationOnStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivationOnStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.get_forceModuleActive
bool UnityEngine::EventSystems::TouchInputModule::get_forceModuleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::get_forceModuleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceModuleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.set_forceModuleActive
void UnityEngine::EventSystems::TouchInputModule::set_forceModuleActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::set_forceModuleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forceModuleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.UseFakeInput
bool UnityEngine::EventSystems::TouchInputModule::UseFakeInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::UseFakeInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseFakeInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.FakeTouches
void UnityEngine::EventSystems::TouchInputModule::FakeTouches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::FakeTouches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FakeTouches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ProcessTouchEvents
void UnityEngine::EventSystems::TouchInputModule::ProcessTouchEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::ProcessTouchEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTouchEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ProcessTouchPress
void UnityEngine::EventSystems::TouchInputModule::ProcessTouchPress(::UnityEngine::EventSystems::PointerEventData* pointerEvent, bool pressed, bool released) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::ProcessTouchPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTouchPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent), ::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent, pressed, released);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.UpdateModule
void UnityEngine::EventSystems::TouchInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.IsModuleSupported
bool UnityEngine::EventSystems::TouchInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModuleSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::TouchInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.Process
void UnityEngine::EventSystems::TouchInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::Process");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.DeactivateModule
void UnityEngine::EventSystems::TouchInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ToString
::StringW UnityEngine::EventSystems::TouchInputModule::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::TouchInputModule::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.MoveDirection
#include "UnityEngine/EventSystems/MoveDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection Left
::UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection Left
void UnityEngine::EventSystems::MoveDirection::_set_Left(::UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection Up
::UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection Up
void UnityEngine::EventSystems::MoveDirection::_set_Up(::UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection Right
::UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection Right
void UnityEngine::EventSystems::MoveDirection::_set_Right(::UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection Down
::UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection Down
void UnityEngine::EventSystems::MoveDirection::_set_Down(::UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection None
::UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection None
void UnityEngine::EventSystems::MoveDirection::_set_None(::UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::MoveDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::MoveDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.RaycastResult
#include "UnityEngine/EventSystems/RaycastResult.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.EventSystems.BaseRaycaster
#include "UnityEngine/EventSystems/BaseRaycaster.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_GameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::EventSystems::RaycastResult::dyn_m_GameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_m_GameObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.BaseRaycaster module
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::BaseRaycaster*& UnityEngine::EventSystems::RaycastResult::dyn_module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_module");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "module"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::BaseRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distance
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::RaycastResult::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single index
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::RaycastResult::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 depth
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::RaycastResult::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_depth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortingLayer
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::RaycastResult::dyn_sortingLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_sortingLayer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortingLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortingOrder
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::RaycastResult::dyn_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_sortingOrder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortingOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 worldPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::EventSystems::RaycastResult::dyn_worldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_worldPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 worldNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::EventSystems::RaycastResult::dyn_worldNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_worldNormal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 screenPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::RaycastResult::dyn_screenPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_screenPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 displayIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::RaycastResult::dyn_displayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::dyn_displayIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.get_gameObject
::UnityEngine::GameObject* UnityEngine::EventSystems::RaycastResult::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.set_gameObject
void UnityEngine::EventSystems::RaycastResult::set_gameObject(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::set_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.get_isValid
bool UnityEngine::EventSystems::RaycastResult::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.Clear
void UnityEngine::EventSystems::RaycastResult::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.ToString
::StringW UnityEngine::EventSystems::RaycastResult::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycastResult::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.RaycasterManager
#include "UnityEngine/EventSystems/RaycasterManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.BaseRaycaster
#include "UnityEngine/EventSystems/BaseRaycaster.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseRaycaster> s_Raycasters
::System::Collections::Generic::List_1<::UnityEngine::EventSystems::BaseRaycaster*>* UnityEngine::EventSystems::RaycasterManager::_get_s_Raycasters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycasterManager::_get_s_Raycasters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::EventSystems::BaseRaycaster*>*>("UnityEngine.EventSystems", "RaycasterManager", "s_Raycasters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseRaycaster> s_Raycasters
void UnityEngine::EventSystems::RaycasterManager::_set_s_Raycasters(::System::Collections::Generic::List_1<::UnityEngine::EventSystems::BaseRaycaster*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycasterManager::_set_s_Raycasters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "RaycasterManager", "s_Raycasters", value));
}
// Autogenerated method: UnityEngine.EventSystems.RaycasterManager..cctor
void UnityEngine::EventSystems::RaycasterManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycasterManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "RaycasterManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycasterManager.AddRaycaster
void UnityEngine::EventSystems::RaycasterManager::AddRaycaster(::UnityEngine::EventSystems::BaseRaycaster* baseRaycaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycasterManager::AddRaycaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "RaycasterManager", "AddRaycaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseRaycaster)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseRaycaster);
}
// Autogenerated method: UnityEngine.EventSystems.RaycasterManager.GetRaycasters
::System::Collections::Generic::List_1<::UnityEngine::EventSystems::BaseRaycaster*>* UnityEngine::EventSystems::RaycasterManager::GetRaycasters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycasterManager::GetRaycasters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "RaycasterManager", "GetRaycasters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::EventSystems::BaseRaycaster*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycasterManager.RemoveRaycasters
void UnityEngine::EventSystems::RaycasterManager::RemoveRaycasters(::UnityEngine::EventSystems::BaseRaycaster* baseRaycaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::RaycasterManager::RemoveRaycasters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "RaycasterManager", "RemoveRaycasters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseRaycaster)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseRaycaster);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.BaseRaycaster
#include "UnityEngine/EventSystems/BaseRaycaster.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.BaseRaycaster m_RootRaycaster
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::BaseRaycaster*& UnityEngine::EventSystems::BaseRaycaster::dyn_m_RootRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::dyn_m_RootRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RootRaycaster"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::BaseRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_eventCamera
::UnityEngine::Camera* UnityEngine::EventSystems::BaseRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_priority
int UnityEngine::EventSystems::BaseRaycaster::get_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::get_priority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_priority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_sortOrderPriority
int UnityEngine::EventSystems::BaseRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_renderOrderPriority
int UnityEngine::EventSystems::BaseRaycaster::get_renderOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::get_renderOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_rootRaycaster
::UnityEngine::EventSystems::BaseRaycaster* UnityEngine::EventSystems::BaseRaycaster::get_rootRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::get_rootRaycaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootRaycaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::BaseRaycaster*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.Raycast
void UnityEngine::EventSystems::BaseRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.ToString
::StringW UnityEngine::EventSystems::BaseRaycaster::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.OnEnable
void UnityEngine::EventSystems::BaseRaycaster::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.OnDisable
void UnityEngine::EventSystems::BaseRaycaster::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.OnCanvasHierarchyChanged
void UnityEngine::EventSystems::BaseRaycaster::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.OnTransformParentChanged
void UnityEngine::EventSystems::BaseRaycaster::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::BaseRaycaster::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.Physics2DRaycaster
#include "UnityEngine/EventSystems/Physics2DRaycaster.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit2D[] m_Hits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit2D>& UnityEngine::EventSystems::Physics2DRaycaster::dyn_m_Hits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::Physics2DRaycaster::dyn_m_Hits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Hits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit2D>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.Physics2DRaycaster.Raycast
void UnityEngine::EventSystems::Physics2DRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::Physics2DRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PhysicsRaycaster
#include "UnityEngine/EventSystems/PhysicsRaycaster.hpp"
// Including type: UnityEngine.EventSystems.PhysicsRaycaster/UnityEngine.EventSystems.RaycastHitComparer
#include "UnityEngine/EventSystems/PhysicsRaycaster_RaycastHitComparer.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 kNoEventMaskSet
int UnityEngine::EventSystems::PhysicsRaycaster::_get_kNoEventMaskSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::_get_kNoEventMaskSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "PhysicsRaycaster", "kNoEventMaskSet"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 kNoEventMaskSet
void UnityEngine::EventSystems::PhysicsRaycaster::_set_kNoEventMaskSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::_set_kNoEventMaskSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PhysicsRaycaster", "kNoEventMaskSet", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Camera m_EventCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_EventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_EventCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EventCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.LayerMask m_EventMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_EventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_EventMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EventMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_MaxRayIntersections
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_MaxRayIntersections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_MaxRayIntersections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxRayIntersections"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_LastMaxRayIntersections
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_LastMaxRayIntersections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_LastMaxRayIntersections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastMaxRayIntersections"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] m_Hits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_Hits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::dyn_m_Hits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Hits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_depth
int UnityEngine::EventSystems::PhysicsRaycaster::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::get_depth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_finalEventMask
int UnityEngine::EventSystems::PhysicsRaycaster::get_finalEventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::get_finalEventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalEventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_eventMask
::UnityEngine::LayerMask UnityEngine::EventSystems::PhysicsRaycaster::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.set_eventMask
void UnityEngine::EventSystems::PhysicsRaycaster::set_eventMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::set_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_maxRayIntersections
int UnityEngine::EventSystems::PhysicsRaycaster::get_maxRayIntersections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::get_maxRayIntersections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRayIntersections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.set_maxRayIntersections
void UnityEngine::EventSystems::PhysicsRaycaster::set_maxRayIntersections(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::set_maxRayIntersections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRayIntersections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.ComputeRayAndDistance
bool UnityEngine::EventSystems::PhysicsRaycaster::ComputeRayAndDistance(::UnityEngine::EventSystems::PointerEventData* eventData, ByRef<::UnityEngine::Ray> ray, ByRef<int> eventDisplayIndex, ByRef<float> distanceToClipPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::ComputeRayAndDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeRayAndDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(eventDisplayIndex), ::il2cpp_utils::ExtractType(distanceToClipPlane)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventData, byref(ray), byref(eventDisplayIndex), byref(distanceToClipPlane));
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_eventCamera
::UnityEngine::Camera* UnityEngine::EventSystems::PhysicsRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.Raycast
void UnityEngine::EventSystems::PhysicsRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PhysicsRaycaster/UnityEngine.EventSystems.RaycastHitComparer
#include "UnityEngine/EventSystems/PhysicsRaycaster_RaycastHitComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PhysicsRaycaster/UnityEngine.EventSystems.RaycastHitComparer instance
::UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer* UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer*>("UnityEngine.EventSystems", "PhysicsRaycaster/RaycastHitComparer", "instance"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PhysicsRaycaster/UnityEngine.EventSystems.RaycastHitComparer instance
void UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_set_instance(::UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PhysicsRaycaster/RaycastHitComparer", "instance", value));
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster/UnityEngine.EventSystems.RaycastHitComparer..cctor
void UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PhysicsRaycaster/RaycastHitComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster/UnityEngine.EventSystems.RaycastHitComparer.Compare
int UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::Compare(::UnityEngine::RaycastHit x, ::UnityEngine::RaycastHit y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.Awake
void UnityEngine::EventSystems::UIBehaviour::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnEnable
void UnityEngine::EventSystems::UIBehaviour::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.Start
void UnityEngine::EventSystems::UIBehaviour::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnDisable
void UnityEngine::EventSystems::UIBehaviour::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnDestroy
void UnityEngine::EventSystems::UIBehaviour::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.IsActive
bool UnityEngine::EventSystems::UIBehaviour::IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::IsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnRectTransformDimensionsChange
void UnityEngine::EventSystems::UIBehaviour::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnBeforeTransformParentChanged
void UnityEngine::EventSystems::UIBehaviour::OnBeforeTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnBeforeTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnTransformParentChanged
void UnityEngine::EventSystems::UIBehaviour::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnDidApplyAnimationProperties
void UnityEngine::EventSystems::UIBehaviour::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnCanvasGroupChanged
void UnityEngine::EventSystems::UIBehaviour::OnCanvasGroupChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnCanvasGroupChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasGroupChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnCanvasHierarchyChanged
void UnityEngine::EventSystems::UIBehaviour::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.IsDestroyed
bool UnityEngine::EventSystems::UIBehaviour::IsDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::UIBehaviour::IsDestroyed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ICanvasRaycastFilter
#include "UnityEngine/ICanvasRaycastFilter.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ICanvasRaycastFilter.IsRaycastLocationValid
bool UnityEngine::ICanvasRaycastFilter::IsRaycastLocationValid(::UnityEngine::Vector2 sp, ::UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ICanvasRaycastFilter::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRaycastLocationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sp), ::il2cpp_utils::ExtractType(eventCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CanvasGroup.get_alpha
float UnityEngine::CanvasGroup::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::get_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_alpha
void UnityEngine::CanvasGroup::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_interactable
bool UnityEngine::CanvasGroup::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_interactable
void UnityEngine::CanvasGroup::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_blocksRaycasts
bool UnityEngine::CanvasGroup::get_blocksRaycasts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::get_blocksRaycasts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blocksRaycasts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_blocksRaycasts
void UnityEngine::CanvasGroup::set_blocksRaycasts(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::set_blocksRaycasts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blocksRaycasts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_ignoreParentGroups
bool UnityEngine::CanvasGroup::get_ignoreParentGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::get_ignoreParentGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreParentGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_ignoreParentGroups
void UnityEngine::CanvasGroup::set_ignoreParentGroups(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::set_ignoreParentGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreParentGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.IsRaycastLocationValid
bool UnityEngine::CanvasGroup::IsRaycastLocationValid(::UnityEngine::Vector2 sp, ::UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRaycastLocationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sp), ::il2cpp_utils::ExtractType(eventCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isMask>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::CanvasRenderer::dyn_$isMask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::dyn_$isMask$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isMask>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_hasPopInstruction
void UnityEngine::CanvasRenderer::set_hasPopInstruction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_hasPopInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasPopInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_materialCount
int UnityEngine::CanvasRenderer::get_materialCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::get_materialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_materialCount
void UnityEngine::CanvasRenderer::set_materialCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_materialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_materialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_popMaterialCount
void UnityEngine::CanvasRenderer::set_popMaterialCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_popMaterialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_popMaterialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_absoluteDepth
int UnityEngine::CanvasRenderer::get_absoluteDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::get_absoluteDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_absoluteDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_hasMoved
bool UnityEngine::CanvasRenderer::get_hasMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::get_hasMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_cull
bool UnityEngine::CanvasRenderer::get_cull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::get_cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_cull
void UnityEngine::CanvasRenderer::set_cull(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_clippingSoftness
void UnityEngine::CanvasRenderer::set_clippingSoftness(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_clippingSoftness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clippingSoftness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetColor
void UnityEngine::CanvasRenderer::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetColor
::UnityEngine::Color UnityEngine::CanvasRenderer::GetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.EnableRectClipping
void UnityEngine::CanvasRenderer::EnableRectClipping(::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::EnableRectClipping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRectClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rect);
}
// Autogenerated method: UnityEngine.CanvasRenderer.DisableRectClipping
void UnityEngine::CanvasRenderer::DisableRectClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::DisableRectClipping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableRectClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMaterial
void UnityEngine::CanvasRenderer::SetMaterial(::UnityEngine::Material* material, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetMaterial
::UnityEngine::Material* UnityEngine::CanvasRenderer::GetMaterial(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetPopMaterial
void UnityEngine::CanvasRenderer::SetPopMaterial(::UnityEngine::Material* material, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetPopMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPopMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetTexture
void UnityEngine::CanvasRenderer::SetTexture(::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetAlphaTexture
void UnityEngine::CanvasRenderer::SetAlphaTexture(::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetAlphaTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlphaTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMesh
void UnityEngine::CanvasRenderer::SetMesh(::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.CanvasRenderer.Clear
void UnityEngine::CanvasRenderer::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMaterial
void UnityEngine::CanvasRenderer::SetMaterial(::UnityEngine::Material* material, ::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetMaterial
::UnityEngine::Material* UnityEngine::CanvasRenderer::GetMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitUIVertexStreams
void UnityEngine::CanvasRenderer::SplitUIVertexStreams(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* positions, ::System::Collections::Generic::List_1<::UnityEngine::Color32>* colors, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv0S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv1S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv2S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv3S, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* normals, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* tangents, ::System::Collections::Generic::List_1<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SplitUIVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitUIVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.CreateUIVertexStream
void UnityEngine::CanvasRenderer::CreateUIVertexStream(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* positions, ::System::Collections::Generic::List_1<::UnityEngine::Color32>* colors, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv0S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv1S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv2S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv3S, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* normals, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* tangents, ::System::Collections::Generic::List_1<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::CreateUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "CreateUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.AddUIVertexStream
void UnityEngine::CanvasRenderer::AddUIVertexStream(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* positions, ::System::Collections::Generic::List_1<::UnityEngine::Color32>* colors, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv0S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv1S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv2S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv3S, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* normals, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* tangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::AddUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "AddUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitIndicesStreamsInternal
void UnityEngine::CanvasRenderer::SplitIndicesStreamsInternal(::Il2CppObject* verts, ::Il2CppObject* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SplitIndicesStreamsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitIndicesStreamsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitUIVertexStreamsInternal
void UnityEngine::CanvasRenderer::SplitUIVertexStreamsInternal(::Il2CppObject* verts, ::Il2CppObject* positions, ::Il2CppObject* colors, ::Il2CppObject* uv0S, ::Il2CppObject* uv1S, ::Il2CppObject* uv2S, ::Il2CppObject* uv3S, ::Il2CppObject* normals, ::Il2CppObject* tangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SplitUIVertexStreamsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitUIVertexStreamsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents);
}
// Autogenerated method: UnityEngine.CanvasRenderer.CreateUIVertexStreamInternal
void UnityEngine::CanvasRenderer::CreateUIVertexStreamInternal(::Il2CppObject* verts, ::Il2CppObject* positions, ::Il2CppObject* colors, ::Il2CppObject* uv0S, ::Il2CppObject* uv1S, ::Il2CppObject* uv2S, ::Il2CppObject* uv3S, ::Il2CppObject* normals, ::Il2CppObject* tangents, ::Il2CppObject* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::CreateUIVertexStreamInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "CreateUIVertexStreamInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetColor_Injected
void UnityEngine::CanvasRenderer::SetColor_Injected(ByRef<::UnityEngine::Color> color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(color));
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetColor_Injected
void UnityEngine::CanvasRenderer::GetColor_Injected(ByRef<::UnityEngine::Color> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::GetColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CanvasRenderer.EnableRectClipping_Injected
void UnityEngine::CanvasRenderer::EnableRectClipping_Injected(ByRef<::UnityEngine::Rect> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::EnableRectClipping_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRectClipping_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(rect));
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_clippingSoftness_Injected
void UnityEngine::CanvasRenderer::set_clippingSoftness_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_clippingSoftness_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clippingSoftness_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RectTransformUtility
#include "UnityEngine/RectTransformUtility.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Corners
::ArrayW<::UnityEngine::Vector3> UnityEngine::RectTransformUtility::_get_s_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::_get_s_Corners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("UnityEngine", "RectTransformUtility", "s_Corners"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Corners
void UnityEngine::RectTransformUtility::_set_s_Corners(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::_set_s_Corners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransformUtility", "s_Corners", value));
}
// Autogenerated method: UnityEngine.RectTransformUtility..cctor
void UnityEngine::RectTransformUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustPoint
::UnityEngine::Vector2 UnityEngine::RectTransformUtility::PixelAdjustPoint(::UnityEngine::Vector2 point, ::UnityEngine::Transform* elementTransform, ::UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PixelAdjustPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(elementTransform), ::il2cpp_utils::ExtractType(canvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, elementTransform, canvas);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustRect
::UnityEngine::Rect UnityEngine::RectTransformUtility::PixelAdjustRect(::UnityEngine::RectTransform* rectTransform, ::UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PixelAdjustRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(canvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform, canvas);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PointInRectangle
bool UnityEngine::RectTransformUtility::PointInRectangle(::UnityEngine::Vector2 screenPoint, ::UnityEngine::RectTransform* rect, ::UnityEngine::Camera* cam, ::UnityEngine::Vector4 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, screenPoint, rect, cam, offset);
}
// Autogenerated method: UnityEngine.RectTransformUtility.RectangleContainsScreenPoint
bool UnityEngine::RectTransformUtility::RectangleContainsScreenPoint(::UnityEngine::RectTransform* rect, ::UnityEngine::Vector2 screenPoint, ::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::RectangleContainsScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "RectangleContainsScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, screenPoint, cam);
}
// Autogenerated method: UnityEngine.RectTransformUtility.RectangleContainsScreenPoint
bool UnityEngine::RectTransformUtility::RectangleContainsScreenPoint(::UnityEngine::RectTransform* rect, ::UnityEngine::Vector2 screenPoint, ::UnityEngine::Camera* cam, ::UnityEngine::Vector4 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::RectangleContainsScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "RectangleContainsScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, screenPoint, cam, offset);
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToWorldPointInRectangle
bool UnityEngine::RectTransformUtility::ScreenPointToWorldPointInRectangle(::UnityEngine::RectTransform* rect, ::UnityEngine::Vector2 screenPoint, ::UnityEngine::Camera* cam, ByRef<::UnityEngine::Vector3> worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::ScreenPointToWorldPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, screenPoint, cam, byref(worldPoint));
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToLocalPointInRectangle
bool UnityEngine::RectTransformUtility::ScreenPointToLocalPointInRectangle(::UnityEngine::RectTransform* rect, ::UnityEngine::Vector2 screenPoint, ::UnityEngine::Camera* cam, ByRef<::UnityEngine::Vector2> localPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::ScreenPointToLocalPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToLocalPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, screenPoint, cam, byref(localPoint));
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToRay
::UnityEngine::Ray UnityEngine::RectTransformUtility::ScreenPointToRay(::UnityEngine::Camera* cam, ::UnityEngine::Vector2 screenPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(screenPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cam, screenPos);
}
// Autogenerated method: UnityEngine.RectTransformUtility.WorldToScreenPoint
::UnityEngine::Vector2 UnityEngine::RectTransformUtility::WorldToScreenPoint(::UnityEngine::Camera* cam, ::UnityEngine::Vector3 worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::WorldToScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "WorldToScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(worldPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cam, worldPoint);
}
// Autogenerated method: UnityEngine.RectTransformUtility.FlipLayoutOnAxis
void UnityEngine::RectTransformUtility::FlipLayoutOnAxis(::UnityEngine::RectTransform* rect, int axis, bool keepPositioning, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::FlipLayoutOnAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "FlipLayoutOnAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(keepPositioning), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, axis, keepPositioning, recursive);
}
// Autogenerated method: UnityEngine.RectTransformUtility.FlipLayoutAxes
void UnityEngine::RectTransformUtility::FlipLayoutAxes(::UnityEngine::RectTransform* rect, bool keepPositioning, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::FlipLayoutAxes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "FlipLayoutAxes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(keepPositioning), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, keepPositioning, recursive);
}
// Autogenerated method: UnityEngine.RectTransformUtility.GetTransposed
::UnityEngine::Vector2 UnityEngine::RectTransformUtility::GetTransposed(::UnityEngine::Vector2 input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::GetTransposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "GetTransposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustPoint_Injected
void UnityEngine::RectTransformUtility::PixelAdjustPoint_Injected(ByRef<::UnityEngine::Vector2> point, ::UnityEngine::Transform* elementTransform, ::UnityEngine::Canvas* canvas, ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PixelAdjustPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(elementTransform), ::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(point), elementTransform, canvas, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustRect_Injected
void UnityEngine::RectTransformUtility::PixelAdjustRect_Injected(::UnityEngine::RectTransform* rectTransform, ::UnityEngine::Canvas* canvas, ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PixelAdjustRect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustRect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform, canvas, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PointInRectangle_Injected
bool UnityEngine::RectTransformUtility::PointInRectangle_Injected(ByRef<::UnityEngine::Vector2> screenPoint, ::UnityEngine::RectTransform* rect, ::UnityEngine::Camera* cam, ByRef<::UnityEngine::Vector4> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PointInRectangle_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PointInRectangle_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(screenPoint), rect, cam, byref(offset));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderMode
#include "UnityEngine/RenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode ScreenSpaceOverlay
::UnityEngine::RenderMode UnityEngine::RenderMode::_get_ScreenSpaceOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_get_ScreenSpaceOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RenderMode>("UnityEngine", "RenderMode", "ScreenSpaceOverlay"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode ScreenSpaceOverlay
void UnityEngine::RenderMode::_set_ScreenSpaceOverlay(::UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_set_ScreenSpaceOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "ScreenSpaceOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode ScreenSpaceCamera
::UnityEngine::RenderMode UnityEngine::RenderMode::_get_ScreenSpaceCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_get_ScreenSpaceCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RenderMode>("UnityEngine", "RenderMode", "ScreenSpaceCamera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode ScreenSpaceCamera
void UnityEngine::RenderMode::_set_ScreenSpaceCamera(::UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_set_ScreenSpaceCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "ScreenSpaceCamera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode WorldSpace
::UnityEngine::RenderMode UnityEngine::RenderMode::_get_WorldSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_get_WorldSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RenderMode>("UnityEngine", "RenderMode", "WorldSpace"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode WorldSpace
void UnityEngine::RenderMode::_set_WorldSpace(::UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_set_WorldSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "WorldSpace", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AdditionalCanvasShaderChannels
#include "UnityEngine/AdditionalCanvasShaderChannels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels None
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels None
void UnityEngine::AdditionalCanvasShaderChannels::_set_None(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord1
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord1
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord1(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord2
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord2
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord2(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord3
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord3
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord3(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels Normal
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels Normal
void UnityEngine::AdditionalCanvasShaderChannels::_set_Normal(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels Tangent
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_Tangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_Tangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "Tangent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels Tangent
void UnityEngine::AdditionalCanvasShaderChannels::_set_Tangent(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_Tangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "Tangent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AdditionalCanvasShaderChannels::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Canvas/UnityEngine.WillRenderCanvases
#include "UnityEngine/Canvas_WillRenderCanvases.hpp"
// Including type: UnityEngine.RenderMode
#include "UnityEngine/RenderMode.hpp"
// Including type: UnityEngine.AdditionalCanvasShaderChannels
#include "UnityEngine/AdditionalCanvasShaderChannels.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x106C28C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Canvas/UnityEngine.WillRenderCanvases preWillRenderCanvases
::UnityEngine::Canvas::WillRenderCanvases* UnityEngine::Canvas::_get_preWillRenderCanvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::_get_preWillRenderCanvases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Canvas::WillRenderCanvases*>("UnityEngine", "Canvas", "preWillRenderCanvases"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Canvas/UnityEngine.WillRenderCanvases preWillRenderCanvases
void UnityEngine::Canvas::_set_preWillRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::_set_preWillRenderCanvases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Canvas", "preWillRenderCanvases", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x106C2C8
// Autogenerated static field getter
// Get static field: static private UnityEngine.Canvas/UnityEngine.WillRenderCanvases willRenderCanvases
::UnityEngine::Canvas::WillRenderCanvases* UnityEngine::Canvas::_get_willRenderCanvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::_get_willRenderCanvases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Canvas::WillRenderCanvases*>("UnityEngine", "Canvas", "willRenderCanvases"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Canvas/UnityEngine.WillRenderCanvases willRenderCanvases
void UnityEngine::Canvas::_set_willRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::_set_willRenderCanvases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Canvas", "willRenderCanvases", value));
}
// Autogenerated method: UnityEngine.Canvas.get_renderMode
::UnityEngine::RenderMode UnityEngine::Canvas::get_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_renderMode
void UnityEngine::Canvas::set_renderMode(::UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_isRootCanvas
bool UnityEngine::Canvas::get_isRootCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_isRootCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_scaleFactor
float UnityEngine::Canvas::get_scaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_scaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_scaleFactor
void UnityEngine::Canvas::set_scaleFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_scaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_referencePixelsPerUnit
float UnityEngine::Canvas::get_referencePixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_referencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_referencePixelsPerUnit
void UnityEngine::Canvas::set_referencePixelsPerUnit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_referencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_pixelPerfect
bool UnityEngine::Canvas::get_pixelPerfect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_pixelPerfect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelPerfect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_pixelPerfect
void UnityEngine::Canvas::set_pixelPerfect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_pixelPerfect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pixelPerfect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_renderOrder
int UnityEngine::Canvas::get_renderOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_renderOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_overrideSorting
bool UnityEngine::Canvas::get_overrideSorting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_overrideSorting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideSorting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_overrideSorting
void UnityEngine::Canvas::set_overrideSorting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_overrideSorting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideSorting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_sortingOrder
int UnityEngine::Canvas::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_sortingOrder
void UnityEngine::Canvas::set_sortingOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_targetDisplay
int UnityEngine::Canvas::get_targetDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_targetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_sortingLayerID
int UnityEngine::Canvas::get_sortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_sortingLayerID
void UnityEngine::Canvas::set_sortingLayerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_additionalShaderChannels
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::Canvas::get_additionalShaderChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_additionalShaderChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_additionalShaderChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AdditionalCanvasShaderChannels, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_additionalShaderChannels
void UnityEngine::Canvas::set_additionalShaderChannels(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_additionalShaderChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_additionalShaderChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_rootCanvas
::UnityEngine::Canvas* UnityEngine::Canvas::get_rootCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_rootCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_renderingDisplaySize
::UnityEngine::Vector2 UnityEngine::Canvas::get_renderingDisplaySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_renderingDisplaySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderingDisplaySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_worldCamera
::UnityEngine::Camera* UnityEngine::Canvas::get_worldCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_worldCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_worldCamera
void UnityEngine::Canvas::set_worldCamera(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_worldCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_worldCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.add_preWillRenderCanvases
void UnityEngine::Canvas::add_preWillRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::add_preWillRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "add_preWillRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.remove_preWillRenderCanvases
void UnityEngine::Canvas::remove_preWillRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::remove_preWillRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "remove_preWillRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.add_willRenderCanvases
void UnityEngine::Canvas::add_willRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::add_willRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "add_willRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.remove_willRenderCanvases
void UnityEngine::Canvas::remove_willRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::remove_willRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "remove_willRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.GetDefaultCanvasMaterial
::UnityEngine::Material* UnityEngine::Canvas::GetDefaultCanvasMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::GetDefaultCanvasMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "GetDefaultCanvasMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.GetETC1SupportedCanvasMaterial
::UnityEngine::Material* UnityEngine::Canvas::GetETC1SupportedCanvasMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::GetETC1SupportedCanvasMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "GetETC1SupportedCanvasMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.ForceUpdateCanvases
void UnityEngine::Canvas::ForceUpdateCanvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::ForceUpdateCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "ForceUpdateCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.SendPreWillRenderCanvases
void UnityEngine::Canvas::SendPreWillRenderCanvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::SendPreWillRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "SendPreWillRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.SendWillRenderCanvases
void UnityEngine::Canvas::SendWillRenderCanvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::SendWillRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "SendWillRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_renderingDisplaySize_Injected
void UnityEngine::Canvas::get_renderingDisplaySize_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_renderingDisplaySize_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderingDisplaySize_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Canvas/UnityEngine.WillRenderCanvases
#include "UnityEngine/Canvas_WillRenderCanvases.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Canvas/UnityEngine.WillRenderCanvases.Invoke
void UnityEngine::Canvas::WillRenderCanvases::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::WillRenderCanvases::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas/UnityEngine.WillRenderCanvases.BeginInvoke
::System::IAsyncResult* UnityEngine::Canvas::WillRenderCanvases::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::WillRenderCanvases::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.Canvas/UnityEngine.WillRenderCanvases.EndInvoke
void UnityEngine::Canvas::WillRenderCanvases::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::WillRenderCanvases::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UISystemProfilerApi
#include "UnityEngine/UISystemProfilerApi.hpp"
// Including type: UnityEngine.UISystemProfilerApi/UnityEngine.SampleType
#include "UnityEngine/UISystemProfilerApi_SampleType.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UISystemProfilerApi.BeginSample
void UnityEngine::UISystemProfilerApi::BeginSample(::UnityEngine::UISystemProfilerApi::SampleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::BeginSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UISystemProfilerApi", "BeginSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.UISystemProfilerApi.EndSample
void UnityEngine::UISystemProfilerApi::EndSample(::UnityEngine::UISystemProfilerApi::SampleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::EndSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UISystemProfilerApi", "EndSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.UISystemProfilerApi.AddMarker
void UnityEngine::UISystemProfilerApi::AddMarker(::StringW name, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::AddMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UISystemProfilerApi", "AddMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UISystemProfilerApi/UnityEngine.SampleType
#include "UnityEngine/UISystemProfilerApi_SampleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UISystemProfilerApi/UnityEngine.SampleType Layout
::UnityEngine::UISystemProfilerApi::SampleType UnityEngine::UISystemProfilerApi::SampleType::_get_Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::_get_Layout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UISystemProfilerApi::SampleType>("UnityEngine", "UISystemProfilerApi/SampleType", "Layout"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UISystemProfilerApi/UnityEngine.SampleType Layout
void UnityEngine::UISystemProfilerApi::SampleType::_set_Layout(::UnityEngine::UISystemProfilerApi::SampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::_set_Layout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UISystemProfilerApi/SampleType", "Layout", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UISystemProfilerApi/UnityEngine.SampleType Render
::UnityEngine::UISystemProfilerApi::SampleType UnityEngine::UISystemProfilerApi::SampleType::_get_Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::_get_Render");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UISystemProfilerApi::SampleType>("UnityEngine", "UISystemProfilerApi/SampleType", "Render"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UISystemProfilerApi/UnityEngine.SampleType Render
void UnityEngine::UISystemProfilerApi::SampleType::_set_Render(::UnityEngine::UISystemProfilerApi::SampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::_set_Render");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UISystemProfilerApi/SampleType", "Render", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UISystemProfilerApi::SampleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RemoteSettings
#include "UnityEngine/RemoteSettings.hpp"
// Including type: UnityEngine.RemoteSettings/UnityEngine.UpdatedEventHandler
#include "UnityEngine/RemoteSettings_UpdatedEventHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x109CE10
// Autogenerated static field getter
// Get static field: static private UnityEngine.RemoteSettings/UnityEngine.UpdatedEventHandler Updated
::UnityEngine::RemoteSettings::UpdatedEventHandler* UnityEngine::RemoteSettings::_get_Updated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_get_Updated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteSettings::UpdatedEventHandler*>("UnityEngine", "RemoteSettings", "Updated"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.RemoteSettings/UnityEngine.UpdatedEventHandler Updated
void UnityEngine::RemoteSettings::_set_Updated(::UnityEngine::RemoteSettings::UpdatedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_set_Updated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteSettings", "Updated", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x109CE4C
// Autogenerated static field getter
// Get static field: static private System.Action BeforeFetchFromServer
::System::Action* UnityEngine::RemoteSettings::_get_BeforeFetchFromServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_get_BeforeFetchFromServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "RemoteSettings", "BeforeFetchFromServer"));
}
// Autogenerated static field setter
// Set static field: static private System.Action BeforeFetchFromServer
void UnityEngine::RemoteSettings::_set_BeforeFetchFromServer(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_set_BeforeFetchFromServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteSettings", "BeforeFetchFromServer", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x109CE88
// Autogenerated static field getter
// Get static field: static private System.Action`3<System.Boolean,System.Boolean,System.Int32> Completed
::System::Action_3<bool, bool, int>* UnityEngine::RemoteSettings::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_get_Completed");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_3<bool, bool, int>*>("UnityEngine", "RemoteSettings", "Completed")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<System.Boolean,System.Boolean,System.Int32> Completed
void UnityEngine::RemoteSettings::_set_Completed(::System::Action_3<bool, bool, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteSettings", "Completed", value));
}
// Autogenerated method: UnityEngine.RemoteSettings.RemoteSettingsUpdated
void UnityEngine::RemoteSettings::RemoteSettingsUpdated(bool wasLastUpdatedFromServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::RemoteSettingsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteSettings", "RemoteSettingsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wasLastUpdatedFromServer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wasLastUpdatedFromServer);
}
// Autogenerated method: UnityEngine.RemoteSettings.RemoteSettingsBeforeFetchFromServer
void UnityEngine::RemoteSettings::RemoteSettingsBeforeFetchFromServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::RemoteSettingsBeforeFetchFromServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteSettings", "RemoteSettingsBeforeFetchFromServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.RemoteSettings.RemoteSettingsUpdateCompleted
void UnityEngine::RemoteSettings::RemoteSettingsUpdateCompleted(bool wasLastUpdatedFromServer, bool settingsChanged, int response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::RemoteSettingsUpdateCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteSettings", "RemoteSettingsUpdateCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wasLastUpdatedFromServer), ::il2cpp_utils::ExtractType(settingsChanged), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wasLastUpdatedFromServer, settingsChanged, response);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RemoteSettings/UnityEngine.UpdatedEventHandler
#include "UnityEngine/RemoteSettings_UpdatedEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RemoteSettings/UnityEngine.UpdatedEventHandler.Invoke
void UnityEngine::RemoteSettings::UpdatedEventHandler::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::UpdatedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RemoteSettings/UnityEngine.UpdatedEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::RemoteSettings::UpdatedEventHandler::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::UpdatedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.RemoteSettings/UnityEngine.UpdatedEventHandler.EndInvoke
void UnityEngine::RemoteSettings::UpdatedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteSettings::UpdatedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RemoteConfigSettings
#include "UnityEngine/RemoteConfigSettings.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::RemoteConfigSettings::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> Updated
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& UnityEngine::RemoteConfigSettings::dyn_Updated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::dyn_Updated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Updated"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RemoteConfigSettings.RemoteConfigSettingsUpdated
void UnityEngine::RemoteConfigSettings::RemoteConfigSettingsUpdated(::UnityEngine::RemoteConfigSettings* rcs, bool wasLastUpdatedFromServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettings::RemoteConfigSettingsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RemoteConfigSettings", "RemoteConfigSettingsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rcs), ::il2cpp_utils::ExtractType(wasLastUpdatedFromServer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rcs, wasLastUpdatedFromServer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag
#include "UnityEngine/RemoteConfigSettingsHelper_Tag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kUnknown
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kUnknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kUnknown
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kUnknown(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kIntVal
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kIntVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kIntVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kIntVal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kIntVal
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kIntVal(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kIntVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kIntVal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kInt64Val
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kInt64Val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kInt64Val");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kInt64Val"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kInt64Val
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kInt64Val(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kInt64Val");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kInt64Val", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kUInt64Val
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kUInt64Val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kUInt64Val");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kUInt64Val"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kUInt64Val
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kUInt64Val(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kUInt64Val");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kUInt64Val", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kDoubleVal
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kDoubleVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kDoubleVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kDoubleVal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kDoubleVal
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kDoubleVal(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kDoubleVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kDoubleVal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kBoolVal
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kBoolVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kBoolVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kBoolVal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kBoolVal
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kBoolVal(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kBoolVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kBoolVal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kStringVal
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kStringVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kStringVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kStringVal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kStringVal
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kStringVal(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kStringVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kStringVal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kArrayVal
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kArrayVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kArrayVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kArrayVal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kArrayVal
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kArrayVal(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kArrayVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kArrayVal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kMixedArrayVal
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kMixedArrayVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kMixedArrayVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kMixedArrayVal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kMixedArrayVal
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kMixedArrayVal(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kMixedArrayVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kMixedArrayVal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kMapVal
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kMapVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kMapVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kMapVal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kMapVal
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kMapVal(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kMapVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kMapVal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kMaxTags
::UnityEngine::RemoteConfigSettingsHelper::Tag UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kMaxTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_get_kMaxTags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RemoteConfigSettingsHelper::Tag>("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kMaxTags"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RemoteConfigSettingsHelper/UnityEngine.Tag kMaxTags
void UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kMaxTags(::UnityEngine::RemoteConfigSettingsHelper::Tag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::_set_kMaxTags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RemoteConfigSettingsHelper/Tag", "kMaxTags", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RemoteConfigSettingsHelper::Tag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RemoteConfigSettingsHelper::Tag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Analytics.AnalyticsSessionState
#include "UnityEngine/Analytics/AnalyticsSessionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionStopped
::UnityEngine::Analytics::AnalyticsSessionState UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionStopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionState>("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionStopped"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionStopped
void UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionStopped(::UnityEngine::Analytics::AnalyticsSessionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionStopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionStopped", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionStarted
::UnityEngine::Analytics::AnalyticsSessionState UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionState>("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionStarted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionStarted
void UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionStarted(::UnityEngine::Analytics::AnalyticsSessionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionPaused
::UnityEngine::Analytics::AnalyticsSessionState UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionPaused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionState>("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionPaused"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionPaused
void UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionPaused(::UnityEngine::Analytics::AnalyticsSessionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionPaused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionPaused", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionResumed
::UnityEngine::Analytics::AnalyticsSessionState UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionResumed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_get_kSessionResumed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionState>("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionResumed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Analytics.AnalyticsSessionState kSessionResumed
void UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionResumed(::UnityEngine::Analytics::AnalyticsSessionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::_set_kSessionResumed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionState", "kSessionResumed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Analytics::AnalyticsSessionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Analytics.AnalyticsSessionInfo
#include "UnityEngine/Analytics/AnalyticsSessionInfo.hpp"
// Including type: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.SessionStateChanged
#include "UnityEngine/Analytics/AnalyticsSessionInfo_SessionStateChanged.hpp"
// Including type: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.IdentityTokenChanged
#include "UnityEngine/Analytics/AnalyticsSessionInfo_IdentityTokenChanged.hpp"
// Including type: UnityEngine.Analytics.AnalyticsSessionState
#include "UnityEngine/Analytics/AnalyticsSessionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x109CF00
// Autogenerated static field getter
// Get static field: static private UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.SessionStateChanged sessionStateChanged
::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged* UnityEngine::Analytics::AnalyticsSessionInfo::_get_sessionStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::_get_sessionStateChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged*>("UnityEngine.Analytics", "AnalyticsSessionInfo", "sessionStateChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.SessionStateChanged sessionStateChanged
void UnityEngine::Analytics::AnalyticsSessionInfo::_set_sessionStateChanged(::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::_set_sessionStateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionInfo", "sessionStateChanged", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x109CF3C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.IdentityTokenChanged identityTokenChanged
::UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged* UnityEngine::Analytics::AnalyticsSessionInfo::_get_identityTokenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::_get_identityTokenChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged*>("UnityEngine.Analytics", "AnalyticsSessionInfo", "identityTokenChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.IdentityTokenChanged identityTokenChanged
void UnityEngine::Analytics::AnalyticsSessionInfo::_set_identityTokenChanged(::UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::_set_identityTokenChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsSessionInfo", "identityTokenChanged", value));
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo.CallSessionStateChanged
void UnityEngine::Analytics::AnalyticsSessionInfo::CallSessionStateChanged(::UnityEngine::Analytics::AnalyticsSessionState sessionState, int64_t sessionId, int64_t sessionElapsedTime, bool sessionChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::CallSessionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsSessionInfo", "CallSessionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionState), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(sessionElapsedTime), ::il2cpp_utils::ExtractType(sessionChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionState, sessionId, sessionElapsedTime, sessionChanged);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo.CallIdentityTokenChanged
void UnityEngine::Analytics::AnalyticsSessionInfo::CallIdentityTokenChanged(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::CallIdentityTokenChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsSessionInfo", "CallIdentityTokenChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.SessionStateChanged
#include "UnityEngine/Analytics/AnalyticsSessionInfo_SessionStateChanged.hpp"
// Including type: UnityEngine.Analytics.AnalyticsSessionState
#include "UnityEngine/Analytics/AnalyticsSessionState.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.SessionStateChanged.Invoke
void UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::Invoke(::UnityEngine::Analytics::AnalyticsSessionState sessionState, int64_t sessionId, int64_t sessionElapsedTime, bool sessionChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionState), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(sessionElapsedTime), ::il2cpp_utils::ExtractType(sessionChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionState, sessionId, sessionElapsedTime, sessionChanged);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.SessionStateChanged.BeginInvoke
::System::IAsyncResult* UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::BeginInvoke(::UnityEngine::Analytics::AnalyticsSessionState sessionState, int64_t sessionId, int64_t sessionElapsedTime, bool sessionChanged, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionState), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(sessionElapsedTime), ::il2cpp_utils::ExtractType(sessionChanged), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sessionState, sessionId, sessionElapsedTime, sessionChanged, callback, object);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.SessionStateChanged.EndInvoke
void UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::SessionStateChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.IdentityTokenChanged
#include "UnityEngine/Analytics/AnalyticsSessionInfo_IdentityTokenChanged.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.IdentityTokenChanged.Invoke
void UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged::Invoke(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.IdentityTokenChanged.BeginInvoke
::System::IAsyncResult* UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged::BeginInvoke(::StringW token, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, token, callback, object);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsSessionInfo/UnityEngine.Analytics.IdentityTokenChanged.EndInvoke
void UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsSessionInfo::IdentityTokenChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequestAssetBundle
#include "UnityEngine/Networking/UnityWebRequestAssetBundle.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.CachedAssetBundle
#include "UnityEngine/CachedAssetBundle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestAssetBundle::GetAssetBundle(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestAssetBundle::GetAssetBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequestAssetBundle", "GetAssetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestAssetBundle::GetAssetBundle(::StringW uri, uint crc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestAssetBundle::GetAssetBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequestAssetBundle", "GetAssetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(crc)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, crc);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequestAssetBundle.GetAssetBundle
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestAssetBundle::GetAssetBundle(::StringW uri, ::UnityEngine::CachedAssetBundle cachedAssetBundle, uint crc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestAssetBundle::GetAssetBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequestAssetBundle", "GetAssetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(cachedAssetBundle), ::il2cpp_utils::ExtractType(crc)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, cachedAssetBundle, crc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.DownloadHandlerAssetBundle
#include "UnityEngine/Networking/DownloadHandlerAssetBundle.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAssetBundle.get_assetBundle
::UnityEngine::AssetBundle* UnityEngine::Networking::DownloadHandlerAssetBundle::get_assetBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAssetBundle::get_assetBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_assetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundle*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAssetBundle.Create
::System::IntPtr UnityEngine::Networking::DownloadHandlerAssetBundle::Create(::UnityEngine::Networking::DownloadHandlerAssetBundle* obj, ::StringW url, uint crc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAssetBundle::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerAssetBundle", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(crc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, url, crc);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAssetBundle.CreateCached
::System::IntPtr UnityEngine::Networking::DownloadHandlerAssetBundle::CreateCached(::UnityEngine::Networking::DownloadHandlerAssetBundle* obj, ::StringW url, ::StringW name, ::UnityEngine::Hash128 hash, uint crc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAssetBundle::CreateCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerAssetBundle", "CreateCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(crc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, url, name, hash, crc);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAssetBundle.InternalCreateAssetBundle
void UnityEngine::Networking::DownloadHandlerAssetBundle::InternalCreateAssetBundle(::StringW url, uint crc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAssetBundle::InternalCreateAssetBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCreateAssetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(crc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url, crc);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAssetBundle.InternalCreateAssetBundleCached
void UnityEngine::Networking::DownloadHandlerAssetBundle::InternalCreateAssetBundleCached(::StringW url, ::StringW name, ::UnityEngine::Hash128 hash, uint crc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAssetBundle::InternalCreateAssetBundleCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCreateAssetBundleCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(crc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url, name, hash, crc);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAssetBundle.CreateCached_Injected
::System::IntPtr UnityEngine::Networking::DownloadHandlerAssetBundle::CreateCached_Injected(::UnityEngine::Networking::DownloadHandlerAssetBundle* obj, ::StringW url, ::StringW name, ByRef<::UnityEngine::Hash128> hash, uint crc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAssetBundle::CreateCached_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerAssetBundle", "CreateCached_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(crc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, url, name, byref(hash), crc);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAssetBundle.GetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandlerAssetBundle::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAssetBundle::GetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAssetBundle.GetText
::StringW UnityEngine::Networking::DownloadHandlerAssetBundle::GetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAssetBundle::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequestMultimedia
#include "UnityEngine/Networking/UnityWebRequestMultimedia.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AudioType
#include "UnityEngine/AudioType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UnityWebRequestMultimedia.GetAudioClip
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestMultimedia::GetAudioClip(::StringW uri, ::UnityEngine::AudioType audioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestMultimedia::GetAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequestMultimedia", "GetAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(audioType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, audioType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.DownloadHandlerAudioClip
#include "UnityEngine/Networking/DownloadHandlerAudioClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.get_audioClip
::UnityEngine::AudioClip* UnityEngine::Networking::DownloadHandlerAudioClip::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAudioClip::get_audioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.set_streamAudio
void UnityEngine::Networking::DownloadHandlerAudioClip::set_streamAudio(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAudioClip::set_streamAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_streamAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.Create
::System::IntPtr UnityEngine::Networking::DownloadHandlerAudioClip::Create(::UnityEngine::Networking::DownloadHandlerAudioClip* obj, ::StringW url, ::UnityEngine::AudioType audioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerAudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(audioType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, url, audioType);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.InternalCreateAudioClip
void UnityEngine::Networking::DownloadHandlerAudioClip::InternalCreateAudioClip(::StringW url, ::UnityEngine::AudioType audioType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAudioClip::InternalCreateAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCreateAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(audioType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url, audioType);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.GetContent
::UnityEngine::AudioClip* UnityEngine::Networking::DownloadHandlerAudioClip::GetContent(::UnityEngine::Networking::UnityWebRequest* www) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAudioClip::GetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerAudioClip", "GetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(www)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, www);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.GetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandlerAudioClip::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAudioClip::GetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerAudioClip.GetText
::StringW UnityEngine::Networking::DownloadHandlerAudioClip::GetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerAudioClip::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.WebRequestUtils
#include "UnityEngineInternal/WebRequestUtils.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex domainRegex
::System::Text::RegularExpressions::Regex* UnityEngineInternal::WebRequestUtils::_get_domainRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::_get_domainRegex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("UnityEngineInternal", "WebRequestUtils", "domainRegex"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex domainRegex
void UnityEngineInternal::WebRequestUtils::_set_domainRegex(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::_set_domainRegex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "WebRequestUtils", "domainRegex", value));
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils..cctor
void UnityEngineInternal::WebRequestUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.RedirectTo
::StringW UnityEngineInternal::WebRequestUtils::RedirectTo(::StringW baseUri, ::StringW redirectUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::RedirectTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "RedirectTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(redirectUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, redirectUri);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.MakeInitialUrl
::StringW UnityEngineInternal::WebRequestUtils::MakeInitialUrl(::StringW targetUrl, ::StringW localUrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::MakeInitialUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "MakeInitialUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetUrl), ::il2cpp_utils::ExtractType(localUrl)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetUrl, localUrl);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.MakeUriString
::StringW UnityEngineInternal::WebRequestUtils::MakeUriString(::System::Uri* targetUri, ::StringW targetUrl, bool prependProtocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::MakeUriString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "MakeUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractType(targetUrl), ::il2cpp_utils::ExtractType(prependProtocol)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetUri, targetUrl, prependProtocol);
}
// Autogenerated method: UnityEngineInternal.WebRequestUtils.URLDecode
::StringW UnityEngineInternal::WebRequestUtils::URLDecode(::StringW encoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::WebRequestUtils::URLDecode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "WebRequestUtils", "URLDecode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoded)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, encoded);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WWWForm
#include "UnityEngine/WWWForm.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.WWWForm.get_DefaultEncoding
::System::Text::Encoding* UnityEngine::WWWForm::get_DefaultEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWForm::get_DefaultEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWForm", "get_DefaultEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WWWTranscoder
#include "UnityEngine/WWWTranscoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] ucHexChars
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_ucHexChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_ucHexChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "ucHexChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] ucHexChars
void UnityEngine::WWWTranscoder::_set_ucHexChars(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_ucHexChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "ucHexChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] lcHexChars
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_lcHexChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_lcHexChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "lcHexChars"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] lcHexChars
void UnityEngine::WWWTranscoder::_set_lcHexChars(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_lcHexChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "lcHexChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte urlEscapeChar
uint8_t UnityEngine::WWWTranscoder::_get_urlEscapeChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_urlEscapeChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine", "WWWTranscoder", "urlEscapeChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte urlEscapeChar
void UnityEngine::WWWTranscoder::_set_urlEscapeChar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_urlEscapeChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlEscapeChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] urlSpace
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_urlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_urlSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "urlSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] urlSpace
void UnityEngine::WWWTranscoder::_set_urlSpace(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_urlSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] dataSpace
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_dataSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_dataSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "dataSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] dataSpace
void UnityEngine::WWWTranscoder::_set_dataSpace(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_dataSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "dataSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] urlForbidden
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_urlForbidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_urlForbidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "urlForbidden"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] urlForbidden
void UnityEngine::WWWTranscoder::_set_urlForbidden(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_urlForbidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "urlForbidden", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte qpEscapeChar
uint8_t UnityEngine::WWWTranscoder::_get_qpEscapeChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_qpEscapeChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine", "WWWTranscoder", "qpEscapeChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte qpEscapeChar
void UnityEngine::WWWTranscoder::_set_qpEscapeChar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_qpEscapeChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpEscapeChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] qpSpace
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_qpSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_qpSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "qpSpace"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] qpSpace
void UnityEngine::WWWTranscoder::_set_qpSpace(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_qpSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpSpace", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] qpForbidden
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::_get_qpForbidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_get_qpForbidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("UnityEngine", "WWWTranscoder", "qpForbidden"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] qpForbidden
void UnityEngine::WWWTranscoder::_set_qpForbidden(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::_set_qpForbidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WWWTranscoder", "qpForbidden", value));
}
// Autogenerated method: UnityEngine.WWWTranscoder..cctor
void UnityEngine::WWWTranscoder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Hex2Byte
uint8_t UnityEngine::WWWTranscoder::Hex2Byte(::ArrayW<uint8_t> b, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::Hex2Byte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Hex2Byte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, offset);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Byte2Hex
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::Byte2Hex(uint8_t b, ::ArrayW<uint8_t> hexChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::Byte2Hex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Byte2Hex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(hexChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, hexChars);
}
// Autogenerated method: UnityEngine.WWWTranscoder.URLEncode
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::URLEncode(::ArrayW<uint8_t> toEncode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::URLEncode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "URLEncode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toEncode)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toEncode);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Encode
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::Encode(::ArrayW<uint8_t> input, uint8_t escapeChar, ::ArrayW<uint8_t> space, ::ArrayW<uint8_t> forbidden, bool uppercase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(escapeChar), ::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(forbidden), ::il2cpp_utils::ExtractType(uppercase)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, escapeChar, space, forbidden, uppercase);
}
// Autogenerated method: UnityEngine.WWWTranscoder.ByteArrayContains
bool UnityEngine::WWWTranscoder::ByteArrayContains(::ArrayW<uint8_t> array, uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::ByteArrayContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "ByteArrayContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, b);
}
// Autogenerated method: UnityEngine.WWWTranscoder.URLDecode
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::URLDecode(::ArrayW<uint8_t> toEncode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::URLDecode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "URLDecode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toEncode)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toEncode);
}
// Autogenerated method: UnityEngine.WWWTranscoder.ByteSubArrayEquals
bool UnityEngine::WWWTranscoder::ByteSubArrayEquals(::ArrayW<uint8_t> array, int index, ::ArrayW<uint8_t> comperand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::ByteSubArrayEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "ByteSubArrayEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(comperand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, comperand);
}
// Autogenerated method: UnityEngine.WWWTranscoder.Decode
::ArrayW<uint8_t> UnityEngine::WWWTranscoder::Decode(::ArrayW<uint8_t> input, uint8_t escapeChar, ::ArrayW<uint8_t> space) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WWWTranscoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "WWWTranscoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(escapeChar), ::il2cpp_utils::ExtractType(space)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, escapeChar, space);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequestAsyncOperation
#include "UnityEngine/Networking/UnityWebRequestAsyncOperation.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <webRequest>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& UnityEngine::Networking::UnityWebRequestAsyncOperation::dyn_$webRequest$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestAsyncOperation::dyn_$webRequest$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<webRequest>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequestAsyncOperation.get_webRequest
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestAsyncOperation::get_webRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestAsyncOperation::get_webRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_webRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequestAsyncOperation.set_webRequest
void UnityEngine::Networking::UnityWebRequestAsyncOperation::set_webRequest(::UnityEngine::Networking::UnityWebRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestAsyncOperation::set_webRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_webRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestMethod.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestError.hpp"
// Including type: UnityEngine.Networking.DownloadHandler
#include "UnityEngine/Networking/DownloadHandler.hpp"
// Including type: UnityEngine.Networking.UploadHandler
#include "UnityEngine/Networking/UploadHandler.hpp"
// Including type: UnityEngine.Networking.CertificateHandler
#include "UnityEngine/Networking/CertificateHandler.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: UnityEngine.Networking.UnityWebRequestAsyncOperation
#include "UnityEngine/Networking/UnityWebRequestAsyncOperation.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::UnityWebRequest::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Networking.DownloadHandler m_DownloadHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::DownloadHandler*& UnityEngine::Networking::UnityWebRequest::dyn_m_DownloadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_DownloadHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DownloadHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::DownloadHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Networking.UploadHandler m_UploadHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UploadHandler*& UnityEngine::Networking::UnityWebRequest::dyn_m_UploadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_UploadHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UploadHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UploadHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Networking.CertificateHandler m_CertificateHandler
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::CertificateHandler*& UnityEngine::Networking::UnityWebRequest::dyn_m_CertificateHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_CertificateHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CertificateHandler"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::CertificateHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Uri m_Uri
[[deprecated("Use field access instead!")]] ::System::Uri*& UnityEngine::Networking::UnityWebRequest::dyn_m_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_m_Uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <disposeCertificateHandlerOnDispose>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::UnityWebRequest::dyn_$disposeCertificateHandlerOnDispose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_$disposeCertificateHandlerOnDispose$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disposeCertificateHandlerOnDispose>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <disposeDownloadHandlerOnDispose>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::UnityWebRequest::dyn_$disposeDownloadHandlerOnDispose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_$disposeDownloadHandlerOnDispose$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disposeDownloadHandlerOnDispose>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <disposeUploadHandlerOnDispose>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::UnityWebRequest::dyn_$disposeUploadHandlerOnDispose$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::dyn_$disposeUploadHandlerOnDispose$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disposeUploadHandlerOnDispose>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeCertificateHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeCertificateHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_disposeCertificateHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeCertificateHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeCertificateHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_disposeCertificateHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeDownloadHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeDownloadHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_disposeDownloadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeDownloadHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeDownloadHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_disposeDownloadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_disposeUploadHandlerOnDispose
bool UnityEngine::Networking::UnityWebRequest::get_disposeUploadHandlerOnDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_disposeUploadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_disposeUploadHandlerOnDispose
void UnityEngine::Networking::UnityWebRequest::set_disposeUploadHandlerOnDispose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_disposeUploadHandlerOnDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_method
void UnityEngine::Networking::UnityWebRequest::set_method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_error
::StringW UnityEngine::Networking::UnityWebRequest::get_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_url
::StringW UnityEngine::Networking::UnityWebRequest::get_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_url
void UnityEngine::Networking::UnityWebRequest::set_url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_responseCode
int64_t UnityEngine::Networking::UnityWebRequest::get_responseCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_responseCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isModifiable
bool UnityEngine::Networking::UnityWebRequest::get_isModifiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_isModifiable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isModifiable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isDone
bool UnityEngine::Networking::UnityWebRequest::get_isDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_isDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isNetworkError
bool UnityEngine::Networking::UnityWebRequest::get_isNetworkError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_isNetworkError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_isHttpError
bool UnityEngine::Networking::UnityWebRequest::get_isHttpError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_isHttpError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHttpError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_downloadProgress
float UnityEngine::Networking::UnityWebRequest::get_downloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_downloadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downloadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_downloadedBytes
uint64_t UnityEngine::Networking::UnityWebRequest::get_downloadedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_downloadedBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downloadedBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_redirectLimit
void UnityEngine::Networking::UnityWebRequest::set_redirectLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_redirectLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_redirectLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_uploadHandler
::UnityEngine::Networking::UploadHandler* UnityEngine::Networking::UnityWebRequest::get_uploadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_uploadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uploadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UploadHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_uploadHandler
void UnityEngine::Networking::UnityWebRequest::set_uploadHandler(::UnityEngine::Networking::UploadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_uploadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uploadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_downloadHandler
::UnityEngine::Networking::DownloadHandler* UnityEngine::Networking::UnityWebRequest::get_downloadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_downloadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downloadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::DownloadHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_downloadHandler
void UnityEngine::Networking::UnityWebRequest::set_downloadHandler(::UnityEngine::Networking::DownloadHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_downloadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_downloadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.get_certificateHandler
::UnityEngine::Networking::CertificateHandler* UnityEngine::Networking::UnityWebRequest::get_certificateHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::get_certificateHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_certificateHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::CertificateHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_certificateHandler
void UnityEngine::Networking::UnityWebRequest::set_certificateHandler(::UnityEngine::Networking::CertificateHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_certificateHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_certificateHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.set_timeout
void UnityEngine::Networking::UnityWebRequest::set_timeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::set_timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetWebErrorString
::StringW UnityEngine::Networking::UnityWebRequest::GetWebErrorString(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetWebErrorString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "GetWebErrorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(err)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, err);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetHTTPStatusString
::StringW UnityEngine::Networking::UnityWebRequest::GetHTTPStatusString(int64_t responseCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetHTTPStatusString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "GetHTTPStatusString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, responseCode);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Create
::System::IntPtr UnityEngine::Networking::UnityWebRequest::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Release
void UnityEngine::Networking::UnityWebRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalDestroy
void UnityEngine::Networking::UnityWebRequest::InternalDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetDefaults
void UnityEngine::Networking::UnityWebRequest::InternalSetDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Dispose
void UnityEngine::Networking::UnityWebRequest::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.DisposeHandlers
void UnityEngine::Networking::UnityWebRequest::DisposeHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::DisposeHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.BeginWebRequest
::UnityEngine::Networking::UnityWebRequestAsyncOperation* UnityEngine::Networking::UnityWebRequest::BeginWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::BeginWebRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequestAsyncOperation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SendWebRequest
::UnityEngine::Networking::UnityWebRequestAsyncOperation* UnityEngine::Networking::UnityWebRequest::SendWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SendWebRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequestAsyncOperation*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Abort
void UnityEngine::Networking::UnityWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Abort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetMethod
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetMethod(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, methodType);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetMethod
void UnityEngine::Networking::UnityWebRequest::InternalSetMethod(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodType);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetCustomMethod
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetCustomMethod(::StringW customMethodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetCustomMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCustomMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customMethodName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, customMethodName);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetCustomMethod
void UnityEngine::Networking::UnityWebRequest::InternalSetCustomMethod(::StringW customMethodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetCustomMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetCustomMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customMethodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, customMethodName);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetUrl
::StringW UnityEngine::Networking::UnityWebRequest::GetUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetUrl
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetUrl(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, url);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetUrl
void UnityEngine::Networking::UnityWebRequest::InternalSetUrl(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.IsExecuting
bool UnityEngine::Networking::UnityWebRequest::IsExecuting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::IsExecuting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExecuting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.GetDownloadProgress
float UnityEngine::Networking::UnityWebRequest::GetDownloadProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::GetDownloadProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetRedirectLimitFromScripting
void UnityEngine::Networking::UnityWebRequest::SetRedirectLimitFromScripting(int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetRedirectLimitFromScripting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRedirectLimitFromScripting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, limit);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.InternalSetRequestHeader
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::InternalSetRequestHeader(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::InternalSetRequestHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetRequestHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetRequestHeader
void UnityEngine::Networking::UnityWebRequest::SetRequestHeader(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetRequestHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRequestHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetUploadHandler
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetUploadHandler(::UnityEngine::Networking::UploadHandler* uh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetUploadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUploadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uh)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, uh);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetDownloadHandler
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetDownloadHandler(::UnityEngine::Networking::DownloadHandler* dh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetDownloadHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDownloadHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dh)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, dh);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetCertificateHandler
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetCertificateHandler(::UnityEngine::Networking::CertificateHandler* ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetCertificateHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCertificateHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, ch);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.SetTimeoutMsec
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::SetTimeoutMsec(int timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::SetTimeoutMsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTimeoutMsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError, false>(this, ___internal__method, timeout);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Get
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequest::Get(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.EscapeURL
::StringW UnityEngine::Networking::UnityWebRequest::EscapeURL(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::EscapeURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "EscapeURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.EscapeURL
::StringW UnityEngine::Networking::UnityWebRequest::EscapeURL(::StringW s, ::System::Text::Encoding* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::EscapeURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequest", "EscapeURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, e);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequest.Finalize
void UnityEngine::Networking::UnityWebRequest::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Get
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Get"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Get
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Get(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Get", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Post
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Post");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Post"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Post
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Post(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Post");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Post", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Put
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Put() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Put");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Put"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Put
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Put(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Put");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Put", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Head
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Head
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Head(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Custom
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod Custom
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Custom(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError
#include "UnityEngine/Networking/UnityWebRequest_UnityWebRequestError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError OK
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError OK
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OK(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError Unknown
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError Unknown
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Unknown(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SDKError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SDKError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SDKError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SDKError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SDKError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SDKError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SDKError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SDKError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError UnsupportedProtocol
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnsupportedProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnsupportedProtocol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnsupportedProtocol"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError UnsupportedProtocol
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnsupportedProtocol(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnsupportedProtocol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnsupportedProtocol", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError MalformattedUrl
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_MalformattedUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_MalformattedUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "MalformattedUrl"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError MalformattedUrl
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_MalformattedUrl(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_MalformattedUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "MalformattedUrl", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError CannotResolveProxy
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveProxy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError CannotResolveProxy
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveProxy(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveProxy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError CannotResolveHost
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotResolveHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveHost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError CannotResolveHost
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveHost(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotResolveHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotResolveHost", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError CannotConnectToHost
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotConnectToHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_CannotConnectToHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotConnectToHost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError CannotConnectToHost
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotConnectToHost(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_CannotConnectToHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "CannotConnectToHost", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError AccessDenied
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError AccessDenied
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_AccessDenied(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError GenericHttpError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_GenericHttpError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_GenericHttpError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "GenericHttpError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError GenericHttpError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_GenericHttpError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_GenericHttpError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "GenericHttpError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError WriteError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_WriteError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_WriteError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "WriteError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError WriteError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_WriteError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_WriteError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "WriteError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError ReadError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReadError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReadError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReadError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError ReadError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReadError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReadError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReadError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError OutOfMemory
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OutOfMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_OutOfMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OutOfMemory"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError OutOfMemory
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OutOfMemory(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_OutOfMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "OutOfMemory", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError Timeout
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError Timeout
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Timeout(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError HTTPPostError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_HTTPPostError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_HTTPPostError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "HTTPPostError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError HTTPPostError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_HTTPPostError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_HTTPPostError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "HTTPPostError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLCannotConnect
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCannotConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCannotConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCannotConnect"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLCannotConnect
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCannotConnect(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCannotConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCannotConnect", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError Aborted
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError Aborted
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Aborted(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "Aborted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError TooManyRedirects
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_TooManyRedirects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_TooManyRedirects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "TooManyRedirects"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError TooManyRedirects
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_TooManyRedirects(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_TooManyRedirects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "TooManyRedirects", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError ReceivedNoData
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReceivedNoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_ReceivedNoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReceivedNoData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError ReceivedNoData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReceivedNoData(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_ReceivedNoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "ReceivedNoData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLNotSupported
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLNotSupported
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLNotSupported(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError FailedToSendData
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToSendData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToSendData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToSendData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError FailedToSendData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToSendData(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToSendData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToSendData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError FailedToReceiveData
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToReceiveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_FailedToReceiveData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToReceiveData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError FailedToReceiveData
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToReceiveData(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_FailedToReceiveData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "FailedToReceiveData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLCertificateError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCertificateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCertificateError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCertificateError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLCertificateError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCertificateError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCertificateError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCertificateError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLCipherNotAvailable
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCipherNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCipherNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCipherNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLCipherNotAvailable
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCipherNotAvailable(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCipherNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCipherNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLCACertError
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCACertError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLCACertError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCACertError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLCACertError
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCACertError(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLCACertError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLCACertError", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError UnrecognizedContentEncoding
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnrecognizedContentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_UnrecognizedContentEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnrecognizedContentEncoding"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError UnrecognizedContentEncoding
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnrecognizedContentEncoding(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_UnrecognizedContentEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "UnrecognizedContentEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError LoginFailed
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_LoginFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_LoginFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "LoginFailed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError LoginFailed
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_LoginFailed(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_LoginFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "LoginFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLShutdownFailed
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLShutdownFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_SSLShutdownFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLShutdownFailed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SSLShutdownFailed
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLShutdownFailed(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_SSLShutdownFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "SSLShutdownFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError NoInternetConnection
::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_NoInternetConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_get_NoInternetConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError>("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "NoInternetConnection"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError NoInternetConnection
void UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_NoInternetConnection(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::_set_NoInternetConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError", "NoInternetConnection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.CertificateHandler
#include "UnityEngine/Networking/CertificateHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::CertificateHandler::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.Release
void UnityEngine::Networking::CertificateHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.ValidateCertificate
bool UnityEngine::Networking::CertificateHandler::ValidateCertificate(::ArrayW<uint8_t> certificateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificateData);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.ValidateCertificateNative
bool UnityEngine::Networking::CertificateHandler::ValidateCertificateNative(::ArrayW<uint8_t> certificateData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::ValidateCertificateNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificateData);
}
// Autogenerated method: UnityEngine.Networking.CertificateHandler.Dispose
void UnityEngine::Networking::CertificateHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::CertificateHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.DownloadHandler
#include "UnityEngine/Networking/DownloadHandler.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::DownloadHandler::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.get_text
::StringW UnityEngine::Networking::DownloadHandler::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Release
void UnityEngine::Networking::DownloadHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Dispose
void UnityEngine::Networking::DownloadHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandler::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::GetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetText
::StringW UnityEngine::Networking::DownloadHandler::GetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetTextEncoder
::System::Text::Encoding* UnityEngine::Networking::DownloadHandler::GetTextEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::GetTextEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.GetContentType
::StringW UnityEngine::Networking::DownloadHandler::GetContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::GetContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.InternalGetByteArray
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandler::InternalGetByteArray(::UnityEngine::Networking::DownloadHandler* dh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::InternalGetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandler", "InternalGetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dh)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dh);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandler.Finalize
void UnityEngine::Networking::DownloadHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.DownloadHandlerBuffer
#include "UnityEngine/Networking/DownloadHandlerBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.Create
::System::IntPtr UnityEngine::Networking::DownloadHandlerBuffer::Create(::UnityEngine::Networking::DownloadHandlerBuffer* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerBuffer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerBuffer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.InternalCreateBuffer
void UnityEngine::Networking::DownloadHandlerBuffer::InternalCreateBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerBuffer::InternalCreateBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCreateBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.InternalGetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandlerBuffer::InternalGetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerBuffer::InternalGetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerBuffer.GetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandlerBuffer::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerBuffer::GetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UploadHandler
#include "UnityEngine/Networking/UploadHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Networking::UploadHandler::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.Release
void UnityEngine::Networking::UploadHandler::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.Dispose
void UnityEngine::Networking::UploadHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.UploadHandler.Finalize
void UnityEngine::Networking::UploadHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UploadHandlerRaw
#include "UnityEngine/Networking/UploadHandlerRaw.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UploadHandlerRaw.Create
::System::IntPtr UnityEngine::Networking::UploadHandlerRaw::Create(::UnityEngine::Networking::UploadHandlerRaw* self, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UploadHandlerRaw::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UploadHandlerRaw", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.UnityWebRequestTexture
#include "UnityEngine/Networking/UnityWebRequestTexture.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.UnityWebRequestTexture.GetTexture
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestTexture::GetTexture(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestTexture::GetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequestTexture", "GetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: UnityEngine.Networking.UnityWebRequestTexture.GetTexture
::UnityEngine::Networking::UnityWebRequest* UnityEngine::Networking::UnityWebRequestTexture::GetTexture(::StringW uri, bool nonReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequestTexture::GetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "UnityWebRequestTexture", "GetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(nonReadable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::UnityWebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, nonReadable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.DownloadHandlerTexture
#include "UnityEngine/Networking/DownloadHandlerTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D mTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& UnityEngine::Networking::DownloadHandlerTexture::dyn_mTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::dyn_mTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mHasTexture
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::DownloadHandlerTexture::dyn_mHasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::dyn_mHasTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mHasTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mNonReadable
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::DownloadHandlerTexture::dyn_mNonReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::dyn_mNonReadable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mNonReadable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.get_texture
::UnityEngine::Texture2D* UnityEngine::Networking::DownloadHandlerTexture::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.Create
::System::IntPtr UnityEngine::Networking::DownloadHandlerTexture::Create(::UnityEngine::Networking::DownloadHandlerTexture* obj, bool readable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerTexture", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(readable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, readable);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.InternalCreateTexture
void UnityEngine::Networking::DownloadHandlerTexture::InternalCreateTexture(bool readable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::InternalCreateTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCreateTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readable);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.InternalGetTexture
::UnityEngine::Texture2D* UnityEngine::Networking::DownloadHandlerTexture::InternalGetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::InternalGetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.InternalGetTextureNative
::UnityEngine::Texture2D* UnityEngine::Networking::DownloadHandlerTexture::InternalGetTextureNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::InternalGetTextureNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetTextureNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.GetContent
::UnityEngine::Texture2D* UnityEngine::Networking::DownloadHandlerTexture::GetContent(::UnityEngine::Networking::UnityWebRequest* www) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::GetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "DownloadHandlerTexture", "GetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(www)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, www);
}
// Autogenerated method: UnityEngine.Networking.DownloadHandlerTexture.GetData
::ArrayW<uint8_t> UnityEngine::Networking::DownloadHandlerTexture::GetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::DownloadHandlerTexture::GetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Video.VideoClipPlayable
#include "UnityEngine/Experimental/Video/VideoClipPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Experimental::Video::VideoClipPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Video::VideoClipPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.Video.VideoClipPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Experimental::Video::VideoClipPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Video::VideoClipPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.Video.VideoClipPlayable.Equals
bool UnityEngine::Experimental::Video::VideoClipPlayable::Equals(::UnityEngine::Experimental::Video::VideoClipPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Video::VideoClipPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoClip
#include "UnityEngine/Video/VideoClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoClip.get_originalPath
::StringW UnityEngine::Video::VideoClip::get_originalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_originalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_originalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_frameCount
uint64_t UnityEngine::Video::VideoClip::get_frameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_frameCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_frameRate
double UnityEngine::Video::VideoClip::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_frameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_length
double UnityEngine::Video::VideoClip::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_width
uint UnityEngine::Video::VideoClip::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_height
uint UnityEngine::Video::VideoClip::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_pixelAspectRatioNumerator
uint UnityEngine::Video::VideoClip::get_pixelAspectRatioNumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_pixelAspectRatioNumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelAspectRatioNumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_pixelAspectRatioDenominator
uint UnityEngine::Video::VideoClip::get_pixelAspectRatioDenominator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_pixelAspectRatioDenominator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelAspectRatioDenominator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_sRGB
bool UnityEngine::Video::VideoClip::get_sRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_sRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.get_audioTrackCount
uint16_t UnityEngine::Video::VideoClip::get_audioTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::get_audioTrackCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoClip.GetAudioChannelCount
uint16_t UnityEngine::Video::VideoClip::GetAudioChannelCount(uint16_t audioTrackIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::GetAudioChannelCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioChannelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioTrackIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, audioTrackIdx);
}
// Autogenerated method: UnityEngine.Video.VideoClip.GetAudioSampleRate
uint UnityEngine::Video::VideoClip::GetAudioSampleRate(uint16_t audioTrackIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::GetAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioTrackIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, audioTrackIdx);
}
// Autogenerated method: UnityEngine.Video.VideoClip.GetAudioLanguage
::StringW UnityEngine::Video::VideoClip::GetAudioLanguage(uint16_t audioTrackIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoClip::GetAudioLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAudioLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioTrackIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, audioTrackIdx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoRenderMode
#include "UnityEngine/Video/VideoRenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode CameraFarPlane
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_CameraFarPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_CameraFarPlane");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "CameraFarPlane"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode CameraFarPlane
void UnityEngine::Video::VideoRenderMode::_set_CameraFarPlane(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_CameraFarPlane");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "CameraFarPlane", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode CameraNearPlane
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_CameraNearPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_CameraNearPlane");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "CameraNearPlane"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode CameraNearPlane
void UnityEngine::Video::VideoRenderMode::_set_CameraNearPlane(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_CameraNearPlane");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "CameraNearPlane", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode RenderTexture
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_RenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_RenderTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "RenderTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode RenderTexture
void UnityEngine::Video::VideoRenderMode::_set_RenderTexture(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_RenderTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "RenderTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode MaterialOverride
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_MaterialOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_MaterialOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "MaterialOverride"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode MaterialOverride
void UnityEngine::Video::VideoRenderMode::_set_MaterialOverride(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_MaterialOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "MaterialOverride", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoRenderMode APIOnly
::UnityEngine::Video::VideoRenderMode UnityEngine::Video::VideoRenderMode::_get_APIOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_get_APIOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoRenderMode>("UnityEngine.Video", "VideoRenderMode", "APIOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoRenderMode APIOnly
void UnityEngine::Video::VideoRenderMode::_set_APIOnly(::UnityEngine::Video::VideoRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::_set_APIOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoRenderMode", "APIOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoRenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoRenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.Video3DLayout
#include "UnityEngine/Video/Video3DLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout No3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_No3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_No3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "No3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout No3D
void UnityEngine::Video::Video3DLayout::_set_No3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_No3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "No3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout SideBySide3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_SideBySide3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_SideBySide3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "SideBySide3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout SideBySide3D
void UnityEngine::Video::Video3DLayout::_set_SideBySide3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_SideBySide3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "SideBySide3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.Video3DLayout OverUnder3D
::UnityEngine::Video::Video3DLayout UnityEngine::Video::Video3DLayout::_get_OverUnder3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_get_OverUnder3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::Video3DLayout>("UnityEngine.Video", "Video3DLayout", "OverUnder3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.Video3DLayout OverUnder3D
void UnityEngine::Video::Video3DLayout::_set_OverUnder3D(::UnityEngine::Video::Video3DLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::_set_OverUnder3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "Video3DLayout", "OverUnder3D", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::Video3DLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::Video3DLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoAspectRatio
#include "UnityEngine/Video/VideoAspectRatio.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio NoScaling
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_NoScaling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_NoScaling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "NoScaling"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio NoScaling
void UnityEngine::Video::VideoAspectRatio::_set_NoScaling(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_NoScaling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "NoScaling", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitVertically
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitVertically() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitVertically");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitVertically"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitVertically
void UnityEngine::Video::VideoAspectRatio::_set_FitVertically(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitVertically");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitVertically", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitHorizontally
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitHorizontally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitHorizontally");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitHorizontally"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitHorizontally
void UnityEngine::Video::VideoAspectRatio::_set_FitHorizontally(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitHorizontally");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitHorizontally", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitInside
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitInside");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitInside"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitInside
void UnityEngine::Video::VideoAspectRatio::_set_FitInside(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitInside");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitInside", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio FitOutside
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_FitOutside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_FitOutside");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "FitOutside"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio FitOutside
void UnityEngine::Video::VideoAspectRatio::_set_FitOutside(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_FitOutside");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "FitOutside", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAspectRatio Stretch
::UnityEngine::Video::VideoAspectRatio UnityEngine::Video::VideoAspectRatio::_get_Stretch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_get_Stretch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAspectRatio>("UnityEngine.Video", "VideoAspectRatio", "Stretch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAspectRatio Stretch
void UnityEngine::Video::VideoAspectRatio::_set_Stretch(::UnityEngine::Video::VideoAspectRatio value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::_set_Stretch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAspectRatio", "Stretch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoAspectRatio::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAspectRatio::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoTimeSource
#include "UnityEngine/Video/VideoTimeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeSource AudioDSPTimeSource
::UnityEngine::Video::VideoTimeSource UnityEngine::Video::VideoTimeSource::_get_AudioDSPTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_get_AudioDSPTimeSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeSource>("UnityEngine.Video", "VideoTimeSource", "AudioDSPTimeSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeSource AudioDSPTimeSource
void UnityEngine::Video::VideoTimeSource::_set_AudioDSPTimeSource(::UnityEngine::Video::VideoTimeSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_set_AudioDSPTimeSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeSource", "AudioDSPTimeSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeSource GameTimeSource
::UnityEngine::Video::VideoTimeSource UnityEngine::Video::VideoTimeSource::_get_GameTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_get_GameTimeSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeSource>("UnityEngine.Video", "VideoTimeSource", "GameTimeSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeSource GameTimeSource
void UnityEngine::Video::VideoTimeSource::_set_GameTimeSource(::UnityEngine::Video::VideoTimeSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::_set_GameTimeSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeSource", "GameTimeSource", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoTimeSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoTimeReference
#include "UnityEngine/Video/VideoTimeReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference Freerun
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_Freerun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_Freerun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "Freerun"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference Freerun
void UnityEngine::Video::VideoTimeReference::_set_Freerun(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_Freerun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "Freerun", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference InternalTime
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_InternalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_InternalTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "InternalTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference InternalTime
void UnityEngine::Video::VideoTimeReference::_set_InternalTime(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_InternalTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "InternalTime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoTimeReference ExternalTime
::UnityEngine::Video::VideoTimeReference UnityEngine::Video::VideoTimeReference::_get_ExternalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_get_ExternalTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoTimeReference>("UnityEngine.Video", "VideoTimeReference", "ExternalTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoTimeReference ExternalTime
void UnityEngine::Video::VideoTimeReference::_set_ExternalTime(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::_set_ExternalTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoTimeReference", "ExternalTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoTimeReference::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoTimeReference::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoSource
#include "UnityEngine/Video/VideoSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoSource VideoClip
::UnityEngine::Video::VideoSource UnityEngine::Video::VideoSource::_get_VideoClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_get_VideoClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoSource>("UnityEngine.Video", "VideoSource", "VideoClip"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoSource VideoClip
void UnityEngine::Video::VideoSource::_set_VideoClip(::UnityEngine::Video::VideoSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_set_VideoClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoSource", "VideoClip", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoSource Url
::UnityEngine::Video::VideoSource UnityEngine::Video::VideoSource::_get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_get_Url");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoSource>("UnityEngine.Video", "VideoSource", "Url"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoSource Url
void UnityEngine::Video::VideoSource::_set_Url(::UnityEngine::Video::VideoSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::_set_Url");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoSource", "Url", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoAudioOutputMode
#include "UnityEngine/Video/VideoAudioOutputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode None
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode None
void UnityEngine::Video::VideoAudioOutputMode::_set_None(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode AudioSource
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_AudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_AudioSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "AudioSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode AudioSource
void UnityEngine::Video::VideoAudioOutputMode::_set_AudioSource(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_AudioSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "AudioSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode Direct
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode Direct
void UnityEngine::Video::VideoAudioOutputMode::_set_Direct(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "Direct", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Video.VideoAudioOutputMode APIOnly
::UnityEngine::Video::VideoAudioOutputMode UnityEngine::Video::VideoAudioOutputMode::_get_APIOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_get_APIOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Video::VideoAudioOutputMode>("UnityEngine.Video", "VideoAudioOutputMode", "APIOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Video.VideoAudioOutputMode APIOnly
void UnityEngine::Video::VideoAudioOutputMode::_set_APIOnly(::UnityEngine::Video::VideoAudioOutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::_set_APIOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Video", "VideoAudioOutputMode", "APIOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Video::VideoAudioOutputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoAudioOutputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler
#include "UnityEngine/Video/VideoPlayer_EventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler
#include "UnityEngine/Video/VideoPlayer_ErrorEventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler
#include "UnityEngine/Video/VideoPlayer_FrameReadyEventHandler.hpp"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler
#include "UnityEngine/Video/VideoPlayer_TimeEventHandler.hpp"
// Including type: UnityEngine.Video.VideoClip
#include "UnityEngine/Video/VideoClip.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Video.VideoTimeReference
#include "UnityEngine/Video/VideoTimeReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler prepareCompleted
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_prepareCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_prepareCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prepareCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler loopPointReached
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_loopPointReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_loopPointReached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopPointReached"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler started
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler frameDropped
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_frameDropped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_frameDropped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDropped"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler errorReceived
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::ErrorEventHandler*& UnityEngine::Video::VideoPlayer::dyn_errorReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_errorReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorReceived"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::ErrorEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler seekCompleted
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::EventHandler*& UnityEngine::Video::VideoPlayer::dyn_seekCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_seekCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seekCompleted"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler clockResyncOccurred
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::TimeEventHandler*& UnityEngine::Video::VideoPlayer::dyn_clockResyncOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_clockResyncOccurred");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clockResyncOccurred"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::TimeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler frameReady
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler*& UnityEngine::Video::VideoPlayer::dyn_frameReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::dyn_frameReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameReady"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_clip
::UnityEngine::Video::VideoClip* UnityEngine::Video::VideoPlayer::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Video::VideoClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_clip
void UnityEngine::Video::VideoPlayer::set_clip(::UnityEngine::Video::VideoClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_texture
::UnityEngine::Texture* UnityEngine::Video::VideoPlayer::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_isPlaying
bool UnityEngine::Video::VideoPlayer::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_frame
void UnityEngine::Video::VideoPlayer::set_frame(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_playbackSpeed
void UnityEngine::Video::VideoPlayer::set_playbackSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_playbackSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playbackSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.set_timeReference
void UnityEngine::Video::VideoPlayer::set_timeReference(::UnityEngine::Video::VideoTimeReference value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::set_timeReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_frameCount
uint64_t UnityEngine::Video::VideoPlayer::get_frameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_frameCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.get_frameRate
float UnityEngine::Video::VideoPlayer::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::get_frameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Play
void UnityEngine::Video::VideoPlayer::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.Stop
void UnityEngine::Video::VideoPlayer::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokePrepareCompletedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokePrepareCompletedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokePrepareCompletedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeFrameReadyCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeFrameReadyCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeFrameReadyCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(frameIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, frameIdx);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeLoopPointReachedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeLoopPointReachedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeLoopPointReachedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeStartedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeStartedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeStartedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeFrameDroppedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeFrameDroppedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeFrameDroppedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeErrorReceivedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal(::UnityEngine::Video::VideoPlayer* source, ::StringW errorStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeErrorReceivedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeErrorReceivedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(errorStr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, errorStr);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeSeekCompletedCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeSeekCompletedCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeSeekCompletedCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer.InvokeClockResyncOccurredCallback_Internal
void UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal(::UnityEngine::Video::VideoPlayer* source, double seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::InvokeClockResyncOccurredCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Video", "VideoPlayer", "InvokeClockResyncOccurredCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, seconds);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler
#include "UnityEngine/Video/VideoPlayer_EventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler.Invoke
void UnityEngine::Video::VideoPlayer::EventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::EventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.EventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::EventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::EventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler
#include "UnityEngine/Video/VideoPlayer_ErrorEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::ErrorEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, message);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::ErrorEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, message, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.ErrorEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::ErrorEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::ErrorEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler
#include "UnityEngine/Video/VideoPlayer_FrameReadyEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(frameIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, frameIdx);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, frameIdx, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.FrameReadyEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler
#include "UnityEngine/Video/VideoPlayer_TimeEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler.Invoke
void UnityEngine::Video::VideoPlayer::TimeEventHandler::Invoke(::UnityEngine::Video::VideoPlayer* source, double seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, seconds);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Video::VideoPlayer::TimeEventHandler::BeginInvoke(::UnityEngine::Video::VideoPlayer* source, double seconds, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, source, seconds, callback, object);
}
// Autogenerated method: UnityEngine.Video.VideoPlayer/UnityEngine.Video.TimeEventHandler.EndInvoke
void UnityEngine::Video::VideoPlayer::TimeEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Video::VideoPlayer::TimeEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.Boundary
#include "UnityEngine/Experimental/XR/Boundary.hpp"
// Including type: UnityEngine.Experimental.XR.Boundary/UnityEngine.Experimental.XR.Type
#include "UnityEngine/Experimental/XR/Boundary_Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.get_visible
bool UnityEngine::Experimental::XR::Boundary::get_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::get_visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "get_visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.set_visible
void UnityEngine::Experimental::XR::Boundary::set_visible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::set_visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "set_visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.get_configured
bool UnityEngine::Experimental::XR::Boundary::get_configured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::get_configured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "get_configured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetDimensions
bool UnityEngine::Experimental::XR::Boundary::TryGetDimensions(ByRef<::UnityEngine::Vector3> dimensionsOut, ::UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::TryGetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(dimensionsOut), boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetDimensionsInternal
bool UnityEngine::Experimental::XR::Boundary::TryGetDimensionsInternal(ByRef<::UnityEngine::Vector3> dimensionsOut, ::UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::TryGetDimensionsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetDimensionsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(dimensionsOut), boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetGeometry
bool UnityEngine::Experimental::XR::Boundary::TryGetGeometry(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* geometry, ::UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::TryGetGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, boundaryType);
}
// Autogenerated method: UnityEngine.Experimental.XR.Boundary.TryGetGeometryScriptingInternal
bool UnityEngine::Experimental::XR::Boundary::TryGetGeometryScriptingInternal(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* geometry, ::UnityEngine::Experimental::XR::Boundary::Type boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::TryGetGeometryScriptingInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.XR", "Boundary", "TryGetGeometryScriptingInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(geometry), ::il2cpp_utils::ExtractType(boundaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, geometry, boundaryType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.XR.Boundary/UnityEngine.Experimental.XR.Type
#include "UnityEngine/Experimental/XR/Boundary_Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.Boundary/UnityEngine.Experimental.XR.Type PlayArea
::UnityEngine::Experimental::XR::Boundary::Type UnityEngine::Experimental::XR::Boundary::Type::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::Boundary::Type>("UnityEngine.Experimental.XR", "Boundary/Type", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.Boundary/UnityEngine.Experimental.XR.Type PlayArea
void UnityEngine::Experimental::XR::Boundary::Type::_set_PlayArea(::UnityEngine::Experimental::XR::Boundary::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "Boundary/Type", "PlayArea", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.XR.Boundary/UnityEngine.Experimental.XR.Type TrackedArea
::UnityEngine::Experimental::XR::Boundary::Type UnityEngine::Experimental::XR::Boundary::Type::_get_TrackedArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::_get_TrackedArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::XR::Boundary::Type>("UnityEngine.Experimental.XR", "Boundary/Type", "TrackedArea"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.XR.Boundary/UnityEngine.Experimental.XR.Type TrackedArea
void UnityEngine::Experimental::XR::Boundary::Type::_set_TrackedArea(::UnityEngine::Experimental::XR::Boundary::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::_set_TrackedArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.XR", "Boundary/Type", "TrackedArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Experimental::XR::Boundary::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::Boundary::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRSettings
#include "UnityEngine/XR/XRSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRSettings.get_enabled
bool UnityEngine::XR::XRSettings::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_showDeviceView
bool UnityEngine::XR::XRSettings::get_showDeviceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_showDeviceView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_showDeviceView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_showDeviceView
void UnityEngine::XR::XRSettings::set_showDeviceView(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_showDeviceView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_showDeviceView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureResolutionScale
float UnityEngine::XR::XRSettings::get_eyeTextureResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_eyeTextureResolutionScale
void UnityEngine::XR::XRSettings::set_eyeTextureResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_eyeTextureResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_eyeTextureResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureWidth
int UnityEngine::XR::XRSettings::get_eyeTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_eyeTextureHeight
int UnityEngine::XR::XRSettings::get_eyeTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_eyeTextureHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_eyeTextureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScale
float UnityEngine::XR::XRSettings::get_renderViewportScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_renderViewportScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_renderViewportScale
void UnityEngine::XR::XRSettings::set_renderViewportScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_renderViewportScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_renderViewportScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_renderViewportScaleInternal
float UnityEngine::XR::XRSettings::get_renderViewportScaleInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_renderViewportScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_renderViewportScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRSettings.set_renderViewportScaleInternal
void UnityEngine::XR::XRSettings::set_renderViewportScaleInternal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::set_renderViewportScaleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "set_renderViewportScaleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRSettings.get_loadedDeviceName
::StringW UnityEngine::XR::XRSettings::get_loadedDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRSettings::get_loadedDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRSettings", "get_loadedDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.TrackingSpaceType
#include "UnityEngine/XR/TrackingSpaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingSpaceType Stationary
::UnityEngine::XR::TrackingSpaceType UnityEngine::XR::TrackingSpaceType::_get_Stationary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingSpaceType::_get_Stationary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::TrackingSpaceType>("UnityEngine.XR", "TrackingSpaceType", "Stationary"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingSpaceType Stationary
void UnityEngine::XR::TrackingSpaceType::_set_Stationary(::UnityEngine::XR::TrackingSpaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingSpaceType::_set_Stationary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingSpaceType", "Stationary", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.TrackingSpaceType RoomScale
::UnityEngine::XR::TrackingSpaceType UnityEngine::XR::TrackingSpaceType::_get_RoomScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingSpaceType::_get_RoomScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::TrackingSpaceType>("UnityEngine.XR", "TrackingSpaceType", "RoomScale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.TrackingSpaceType RoomScale
void UnityEngine::XR::TrackingSpaceType::_set_RoomScale(::UnityEngine::XR::TrackingSpaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingSpaceType::_set_RoomScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "TrackingSpaceType", "RoomScale", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::TrackingSpaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::TrackingSpaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDevice
#include "UnityEngine/XR/XRDevice.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.XR.TrackingSpaceType
#include "UnityEngine/XR/TrackingSpaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x1085180
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> deviceLoaded
::System::Action_1<::StringW>* UnityEngine::XR::XRDevice::_get_deviceLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::_get_deviceLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("UnityEngine.XR", "XRDevice", "deviceLoaded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> deviceLoaded
void UnityEngine::XR::XRDevice::_set_deviceLoaded(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::_set_deviceLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDevice", "deviceLoaded", value));
}
// Autogenerated method: UnityEngine.XR.XRDevice.get_isPresent
bool UnityEngine::XR::XRDevice::get_isPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::get_isPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "get_isPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.get_model
::StringW UnityEngine::XR::XRDevice::get_model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::get_model");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "get_model", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice..cctor
void UnityEngine::XR::XRDevice::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.GetNativePtr
::System::IntPtr UnityEngine::XR::XRDevice::GetNativePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::GetNativePtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "GetNativePtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRDevice.SetTrackingSpaceType
bool UnityEngine::XR::XRDevice::SetTrackingSpaceType(::UnityEngine::XR::TrackingSpaceType trackingSpaceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::SetTrackingSpaceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "SetTrackingSpaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingSpaceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingSpaceType);
}
// Autogenerated method: UnityEngine.XR.XRDevice.InvokeDeviceLoaded
void UnityEngine::XR::XRDevice::InvokeDeviceLoaded(::StringW loadedDeviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDevice::InvokeDeviceLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDevice", "InvokeDeviceLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedDeviceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loadedDeviceName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.WSA.WorldAnchor
#include "UnityEngine/XR/WSA/WorldAnchor.hpp"
// Including type: UnityEngine.XR.WSA.WorldAnchor/UnityEngine.XR.WSA.OnTrackingChangedDelegate
#include "UnityEngine/XR/WSA/WorldAnchor_OnTrackingChangedDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.WSA.WorldAnchor/UnityEngine.XR.WSA.OnTrackingChangedDelegate OnTrackingChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate*& UnityEngine::XR::WSA::WorldAnchor::dyn_OnTrackingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::dyn_OnTrackingChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTrackingChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor.Internal_TriggerEventOnTrackingLost
void UnityEngine::XR::WSA::WorldAnchor::Internal_TriggerEventOnTrackingLost(::UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::Internal_TriggerEventOnTrackingLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.WSA", "WorldAnchor", "Internal_TriggerEventOnTrackingLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldAnchor), ::il2cpp_utils::ExtractType(located)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, worldAnchor, located);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.WSA.WorldAnchor/UnityEngine.XR.WSA.OnTrackingChangedDelegate
#include "UnityEngine/XR/WSA/WorldAnchor_OnTrackingChangedDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/UnityEngine.XR.WSA.OnTrackingChangedDelegate.Invoke
void UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::Invoke(::UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldAnchor), ::il2cpp_utils::ExtractType(located)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldAnchor, located);
}
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/UnityEngine.XR.WSA.OnTrackingChangedDelegate.BeginInvoke
::System::IAsyncResult* UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::BeginInvoke(::UnityEngine::XR::WSA::WorldAnchor* worldAnchor, bool located, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldAnchor), ::il2cpp_utils::ExtractType(located), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, worldAnchor, located, callback, object);
}
// Autogenerated method: UnityEngine.XR.WSA.WorldAnchor/UnityEngine.XR.WSA.OnTrackingChangedDelegate.EndInvoke
void UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WSA::WorldAnchor::OnTrackingChangedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking
#include "UnityEngine/XR/InputTracking.hpp"
// Including type: UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x106E254
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_trackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingAcquired
void UnityEngine::XR::InputTracking::_set_trackingAcquired(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_trackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingAcquired", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x106E290
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_trackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_trackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "trackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> trackingLost
void UnityEngine::XR::InputTracking::_set_trackingLost(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_trackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "trackingLost", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x106E2CC
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_nodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeAdded"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeAdded
void UnityEngine::XR::InputTracking::_set_nodeAdded(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_nodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeAdded", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x106E308
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
::System::Action_1<::UnityEngine::XR::XRNodeState>* UnityEngine::XR::InputTracking::_get_nodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_get_nodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::XRNodeState>*>("UnityEngine.XR", "InputTracking", "nodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.XRNodeState> nodeRemoved
void UnityEngine::XR::InputTracking::_set_nodeRemoved(::System::Action_1<::UnityEngine::XR::XRNodeState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::_set_nodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking", "nodeRemoved", value));
}
// Autogenerated method: UnityEngine.XR.InputTracking..cctor
void UnityEngine::XR::InputTracking::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputTracking.InvokeTrackingEvent
void UnityEngine::XR::InputTracking::InvokeTrackingEvent(::UnityEngine::XR::InputTracking::TrackingStateEventType eventType, ::UnityEngine::XR::XRNode nodeType, int64_t uniqueID, bool tracked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::InvokeTrackingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "InvokeTrackingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(uniqueID), ::il2cpp_utils::ExtractType(tracked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventType, nodeType, uniqueID, tracked);
}
// Autogenerated method: UnityEngine.XR.InputTracking.Recenter
void UnityEngine::XR::InputTracking::Recenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::Recenter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "Recenter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates
void UnityEngine::XR::InputTracking::GetNodeStates(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetNodeStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated method: UnityEngine.XR.InputTracking.GetNodeStates_Internal
void UnityEngine::XR::InputTracking::GetNodeStates_Internal(::System::Collections::Generic::List_1<::UnityEngine::XR::XRNodeState>* nodeStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::GetNodeStates_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputTracking", "GetNodeStates_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeStates);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType
#include "UnityEngine/XR/InputTracking_TrackingStateEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType NodeAdded
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType NodeAdded
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeAdded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType NodeRemoved
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_NodeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType NodeRemoved
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_NodeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "NodeRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType TrackingAcquired
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType TrackingAcquired
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingAcquired", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType TrackingLost
::UnityEngine::XR::InputTracking::TrackingStateEventType UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_get_TrackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputTracking::TrackingStateEventType>("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputTracking/UnityEngine.XR.TrackingStateEventType TrackingLost
void UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost(::UnityEngine::XR::InputTracking::TrackingStateEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::_set_TrackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputTracking/TrackingStateEventType", "TrackingLost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::InputTracking::TrackingStateEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputTracking::TrackingStateEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftEye
void UnityEngine::XR::XRNode::_set_LeftEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightEye
void UnityEngine::XR::XRNode::_set_RightEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode CenterEye
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_CenterEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_CenterEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "CenterEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode CenterEye
void UnityEngine::XR::XRNode::_set_CenterEye(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_CenterEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "CenterEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode Head
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode Head
void UnityEngine::XR::XRNode::_set_Head(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode LeftHand
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode LeftHand
void UnityEngine::XR::XRNode::_set_LeftHand(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode RightHand
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode RightHand
void UnityEngine::XR::XRNode::_set_RightHand(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode GameController
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_GameController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_GameController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "GameController"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode GameController
void UnityEngine::XR::XRNode::_set_GameController(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_GameController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "GameController", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode TrackingReference
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode TrackingReference
void UnityEngine::XR::XRNode::_set_TrackingReference(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.XRNode HardwareTracker
::UnityEngine::XR::XRNode UnityEngine::XR::XRNode::_get_HardwareTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_get_HardwareTracker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::XRNode>("UnityEngine.XR", "XRNode", "HardwareTracker"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.XRNode HardwareTracker
void UnityEngine::XR::XRNode::_set_HardwareTracker(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::_set_HardwareTracker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRNode", "HardwareTracker", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRNode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.AvailableTrackingData
#include "UnityEngine/XR/AvailableTrackingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData None
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData None
void UnityEngine::XR::AvailableTrackingData::_set_None(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_PositionAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData PositionAvailable
void UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_PositionAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "PositionAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_RotationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData RotationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_RotationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "RotationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_VelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData VelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_VelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "VelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AngularVelocityAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularVelocityAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AngularVelocityAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularVelocityAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AccelerationAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
::UnityEngine::XR::AvailableTrackingData UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_get_AngularAccelerationAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::AvailableTrackingData>("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.AvailableTrackingData AngularAccelerationAvailable
void UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable(::UnityEngine::XR::AvailableTrackingData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::_set_AngularAccelerationAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "AvailableTrackingData", "AngularAccelerationAvailable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::AvailableTrackingData::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::AvailableTrackingData::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNodeState
#include "UnityEngine/XR/XRNodeState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode m_Type
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& UnityEngine::XR::XRNodeState::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.AvailableTrackingData m_AvailableFields
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::AvailableTrackingData& UnityEngine::XR::XRNodeState::dyn_m_AvailableFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AvailableFields");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AvailableFields"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::AvailableTrackingData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::XR::XRNodeState::dyn_m_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AngularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Acceleration
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Acceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Acceleration"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularAcceleration
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::XR::XRNodeState::dyn_m_AngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_AngularAcceleration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularAcceleration"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Tracked
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::XRNodeState::dyn_m_Tracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_Tracked");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_UniqueID
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::XRNodeState::dyn_m_UniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::dyn_m_UniqueID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UniqueID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_uniqueID
void UnityEngine::XR::XRNodeState::set_uniqueID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_uniqueID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.get_nodeType
::UnityEngine::XR::XRNode UnityEngine::XR::XRNodeState::get_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::get_nodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_nodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_nodeType
void UnityEngine::XR::XRNodeState::set_nodeType(::UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_nodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_nodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_tracked
void UnityEngine::XR::XRNodeState::set_tracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::set_tracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetPosition
bool UnityEngine::XR::XRNodeState::TryGetPosition(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetRotation
bool UnityEngine::XR::XRNodeState::TryGetRotation(ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rotation));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetVelocity
bool UnityEngine::XR::XRNodeState::TryGetVelocity(ByRef<::UnityEngine::Vector3> velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(velocity));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularVelocity
bool UnityEngine::XR::XRNodeState::TryGetAngularVelocity(ByRef<::UnityEngine::Vector3> angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(angularVelocity));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAcceleration(ByRef<::UnityEngine::Vector3> acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(acceleration));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAngularAcceleration(ByRef<::UnityEngine::Vector3> angularAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGetAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(angularAcceleration));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(::UnityEngine::Vector3 inValue, ::UnityEngine::XR::AvailableTrackingData availabilityFlag, ByRef<::UnityEngine::Vector3> outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inValue), ::il2cpp_utils::ExtractType(availabilityFlag), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inValue, availabilityFlag, byref(outValue));
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(::UnityEngine::Quaternion inValue, ::UnityEngine::XR::AvailableTrackingData availabilityFlag, ByRef<::UnityEngine::Quaternion> outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRNodeState::TryGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inValue), ::il2cpp_utils::ExtractType(availabilityFlag), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inValue, availabilityFlag, byref(outValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputFeatureType
#include "UnityEngine/XR/InputFeatureType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Custom
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Custom
void UnityEngine::XR::InputFeatureType::_set_Custom(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Binary
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Binary
void UnityEngine::XR::InputFeatureType::_set_Binary(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType DiscreteStates
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_DiscreteStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_DiscreteStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "DiscreteStates"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType DiscreteStates
void UnityEngine::XR::InputFeatureType::_set_DiscreteStates(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_DiscreteStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "DiscreteStates", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis1D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis1D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis1D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis1D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis1D
void UnityEngine::XR::InputFeatureType::_set_Axis1D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis1D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis1D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis2D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis2D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis2D
void UnityEngine::XR::InputFeatureType::_set_Axis2D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis2D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Axis3D
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Axis3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Axis3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Axis3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Axis3D
void UnityEngine::XR::InputFeatureType::_set_Axis3D(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Axis3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Axis3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Rotation
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Rotation
void UnityEngine::XR::InputFeatureType::_set_Rotation(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Hand
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Hand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Hand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Hand
void UnityEngine::XR::InputFeatureType::_set_Hand(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Hand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Hand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Bone
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Bone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Bone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Bone"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Bone
void UnityEngine::XR::InputFeatureType::_set_Bone(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Bone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Bone", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType Eyes
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_Eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_Eyes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "Eyes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType Eyes
void UnityEngine::XR::InputFeatureType::_set_Eyes(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_Eyes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "Eyes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.InputFeatureType kUnityXRInputFeatureTypeInvalid
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureType::_get_kUnityXRInputFeatureTypeInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_get_kUnityXRInputFeatureTypeInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::InputFeatureType>("UnityEngine.XR", "InputFeatureType", "kUnityXRInputFeatureTypeInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.InputFeatureType kUnityXRInputFeatureTypeInvalid
void UnityEngine::XR::InputFeatureType::_set_kUnityXRInputFeatureTypeInvalid(::UnityEngine::XR::InputFeatureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::_set_kUnityXRInputFeatureTypeInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputFeatureType", "kUnityXRInputFeatureTypeInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::InputFeatureType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.ConnectionChangeType
#include "UnityEngine/XR/ConnectionChangeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType Connected
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType Connected
void UnityEngine::XR::ConnectionChangeType::_set_Connected(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType Disconnected
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType Disconnected
void UnityEngine::XR::ConnectionChangeType::_set_Disconnected(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.ConnectionChangeType ConfigChange
::UnityEngine::XR::ConnectionChangeType UnityEngine::XR::ConnectionChangeType::_get_ConfigChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_get_ConfigChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::ConnectionChangeType>("UnityEngine.XR", "ConnectionChangeType", "ConfigChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.ConnectionChangeType ConfigChange
void UnityEngine::XR::ConnectionChangeType::_set_ConfigChange(::UnityEngine::XR::ConnectionChangeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::_set_ConfigChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "ConnectionChangeType", "ConfigChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::ConnectionChangeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::ConnectionChangeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.InputFeatureUsage
#include "UnityEngine/XR/InputFeatureUsage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String m_Name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::XR::InputFeatureUsage::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::dyn_m_Name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.XR.InputFeatureType m_InternalType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputFeatureType& UnityEngine::XR::InputFeatureUsage::dyn_m_InternalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::dyn_m_InternalType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputFeatureType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.get_name
::StringW UnityEngine::XR::InputFeatureUsage::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.get_internalType
::UnityEngine::XR::InputFeatureType UnityEngine::XR::InputFeatureUsage::get_internalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::get_internalType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_internalType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::InputFeatureType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.Equals
bool UnityEngine::XR::InputFeatureUsage::Equals(::UnityEngine::XR::InputFeatureUsage other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.Equals
bool UnityEngine::XR::InputFeatureUsage::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.InputFeatureUsage.GetHashCode
int UnityEngine::XR::InputFeatureUsage::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputFeatureUsage::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.InputDevice
#include "UnityEngine/XR/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::InputDevice::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Initialized
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::InputDevice::dyn_m_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::dyn_m_Initialized");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.InputDevice.get_deviceId
uint64_t UnityEngine::XR::InputDevice::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.InputDevice..ctor
UnityEngine::XR::InputDevice::InputDevice(uint64_t deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deviceId);
}
// Autogenerated method: UnityEngine.XR.InputDevice.Equals
bool UnityEngine::XR::InputDevice::Equals(::UnityEngine::XR::InputDevice other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.InputDevice.Equals
bool UnityEngine::XR::InputDevice::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.InputDevice.GetHashCode
int UnityEngine::XR::InputDevice::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevice::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Hand
#include "UnityEngine/XR/Hand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::Hand::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::Hand::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Hand.get_deviceId
uint64_t UnityEngine::XR::Hand::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Hand.get_featureIndex
uint UnityEngine::XR::Hand::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Hand.Equals
bool UnityEngine::XR::Hand::Equals(::UnityEngine::XR::Hand other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Hand.Equals
bool UnityEngine::XR::Hand::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Hand.GetHashCode
int UnityEngine::XR::Hand::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Hand::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Eyes
#include "UnityEngine/XR/Eyes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::Eyes::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::Eyes::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Eyes.get_deviceId
uint64_t UnityEngine::XR::Eyes::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Eyes.get_featureIndex
uint UnityEngine::XR::Eyes::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Eyes.Equals
bool UnityEngine::XR::Eyes::Equals(::UnityEngine::XR::Eyes other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Eyes.Equals
bool UnityEngine::XR::Eyes::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Eyes.GetHashCode
int UnityEngine::XR::Eyes::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Eyes::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Bone
#include "UnityEngine/XR/Bone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_DeviceId
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::Bone::dyn_m_DeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::dyn_m_DeviceId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeviceId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FeatureIndex
[[deprecated("Use field access instead!")]] uint& UnityEngine::XR::Bone::dyn_m_FeatureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::dyn_m_FeatureIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Bone.get_deviceId
uint64_t UnityEngine::XR::Bone::get_deviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::get_deviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Bone.get_featureIndex
uint UnityEngine::XR::Bone::get_featureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::get_featureIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_featureIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Bone.Equals
bool UnityEngine::XR::Bone::Equals(::UnityEngine::XR::Bone other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.Bone.Equals
bool UnityEngine::XR::Bone::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.Bone.GetHashCode
int UnityEngine::XR::Bone::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Bone::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.InputDevices
#include "UnityEngine/XR/InputDevices.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.XR.ConnectionChangeType
#include "UnityEngine/XR/ConnectionChangeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x106E37C
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConnected
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConnected
void UnityEngine::XR::InputDevices::_set_deviceConnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceConnected", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x106E3B8
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceDisconnected
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceDisconnected"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceDisconnected
void UnityEngine::XR::InputDevices::_set_deviceDisconnected(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceDisconnected", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x106E3F4
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConfigChanged
::System::Action_1<::UnityEngine::XR::InputDevice>* UnityEngine::XR::InputDevices::_get_deviceConfigChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_get_deviceConfigChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::XR::InputDevice>*>("UnityEngine.XR", "InputDevices", "deviceConfigChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.XR.InputDevice> deviceConfigChanged
void UnityEngine::XR::InputDevices::_set_deviceConfigChanged(::System::Action_1<::UnityEngine::XR::InputDevice>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::_set_deviceConfigChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "InputDevices", "deviceConfigChanged", value));
}
// Autogenerated method: UnityEngine.XR.InputDevices.InvokeConnectionEvent
void UnityEngine::XR::InputDevices::InvokeConnectionEvent(uint64_t deviceId, ::UnityEngine::XR::ConnectionChangeType change) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::InputDevices::InvokeConnectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "InputDevices", "InvokeConnectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(change)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, change);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/UnityEngine.XR.XRRenderPass
#include "UnityEngine/XR/XRDisplaySubsystem_XRRenderPass.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem/UnityEngine.XR.XRMirrorViewBlitDesc
#include "UnityEngine/XR/XRDisplaySubsystem_XRMirrorViewBlitDesc.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x106E430
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Boolean> displayFocusChanged
::System::Action_1<bool>* UnityEngine::XR::XRDisplaySubsystem::_get_displayFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::_get_displayFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("UnityEngine.XR", "XRDisplaySubsystem", "displayFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Boolean> displayFocusChanged
void UnityEngine::XR::XRDisplaySubsystem::_set_displayFocusChanged(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::_set_displayFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "XRDisplaySubsystem", "displayFocusChanged", value));
}
// Autogenerated method: UnityEngine.XR.XRDisplaySubsystem.InvokeDisplayFocusChanged
void UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRDisplaySubsystem::InvokeDisplayFocusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRDisplaySubsystem", "InvokeDisplayFocusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, focus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.XRInputSubsystem> trackingOriginUpdated
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>*& UnityEngine::XR::XRInputSubsystem::dyn_trackingOriginUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::dyn_trackingOriginUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingOriginUpdated"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.XR.XRInputSubsystem> boundaryChanged
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>*& UnityEngine::XR::XRInputSubsystem::dyn_boundaryChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::dyn_boundaryChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boundaryChanged"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::XR::XRInputSubsystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.InvokeTrackingOriginUpdatedEvent
void UnityEngine::XR::XRInputSubsystem::InvokeTrackingOriginUpdatedEvent(::System::IntPtr internalPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::InvokeTrackingOriginUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRInputSubsystem", "InvokeTrackingOriginUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalPtr);
}
// Autogenerated method: UnityEngine.XR.XRInputSubsystem.InvokeBoundaryChangedEvent
void UnityEngine::XR::XRInputSubsystem::InvokeBoundaryChangedEvent(::System::IntPtr internalPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRInputSubsystem::InvokeBoundaryChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "XRInputSubsystem", "InvokeBoundaryChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalPtr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.MeshId
#include "UnityEngine/XR/MeshId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.XR.MeshId s_InvalidId
::UnityEngine::XR::MeshId UnityEngine::XR::MeshId::_get_s_InvalidId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::_get_s_InvalidId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshId>("UnityEngine.XR", "MeshId", "s_InvalidId"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.XR.MeshId s_InvalidId
void UnityEngine::XR::MeshId::_set_s_InvalidId(::UnityEngine::XR::MeshId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::_set_s_InvalidId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshId", "s_InvalidId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_SubId1
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::MeshId::dyn_m_SubId1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::dyn_m_SubId1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubId1"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_SubId2
[[deprecated("Use field access instead!")]] uint64_t& UnityEngine::XR::MeshId::dyn_m_SubId2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::dyn_m_SubId2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubId2"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.MeshId..cctor
void UnityEngine::XR::MeshId::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "MeshId", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.Equals
bool UnityEngine::XR::MeshId::Equals(::UnityEngine::XR::MeshId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.MeshId.ToString
::StringW UnityEngine::XR::MeshId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.GetHashCode
int UnityEngine::XR::MeshId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshId.Equals
bool UnityEngine::XR::MeshId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.MeshGenerationStatus
#include "UnityEngine/XR/MeshGenerationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus Success
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus Success
void UnityEngine::XR::MeshGenerationStatus::_set_Success(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus InvalidMeshId
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_InvalidMeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_InvalidMeshId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "InvalidMeshId"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus InvalidMeshId
void UnityEngine::XR::MeshGenerationStatus::_set_InvalidMeshId(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_InvalidMeshId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "InvalidMeshId", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus GenerationAlreadyInProgress
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_GenerationAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus GenerationAlreadyInProgress
void UnityEngine::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_GenerationAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "GenerationAlreadyInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus Canceled
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus Canceled
void UnityEngine::XR::MeshGenerationStatus::_set_Canceled(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshGenerationStatus UnknownError
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationStatus::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshGenerationStatus>("UnityEngine.XR", "MeshGenerationStatus", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshGenerationStatus UnknownError
void UnityEngine::XR::MeshGenerationStatus::_set_UnknownError(::UnityEngine::XR::MeshGenerationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshGenerationStatus", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::MeshGenerationStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.HashCodeHelper
#include "UnityEngine/XR/HashCodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.HashCodeHelper.Combine
int UnityEngine::XR::HashCodeHelper::Combine(int hash1, int hash2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::HashCodeHelper::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR", "HashCodeHelper", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash1), ::il2cpp_utils::ExtractType(hash2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash1, hash2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.MeshGenerationResult
#include "UnityEngine/XR/MeshGenerationResult.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshId <MeshId>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::MeshId& UnityEngine::XR::MeshGenerationResult::dyn_$MeshId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$MeshId$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshId>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Mesh <Mesh>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& UnityEngine::XR::MeshGenerationResult::dyn_$Mesh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Mesh$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Mesh>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.MeshCollider <MeshCollider>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& UnityEngine::XR::MeshGenerationResult::dyn_$MeshCollider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$MeshCollider$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MeshCollider>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshGenerationStatus <Status>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::MeshGenerationStatus& UnityEngine::XR::MeshGenerationResult::dyn_$Status$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Status$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Status>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshGenerationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.XR.MeshVertexAttributes <Attributes>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::MeshVertexAttributes& UnityEngine::XR::MeshGenerationResult::dyn_$Attributes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::dyn_$Attributes$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Attributes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::MeshVertexAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_MeshId
::UnityEngine::XR::MeshId UnityEngine::XR::MeshGenerationResult::get_MeshId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_MeshId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MeshId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshId, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Mesh
::UnityEngine::Mesh* UnityEngine::XR::MeshGenerationResult::get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_MeshCollider
::UnityEngine::MeshCollider* UnityEngine::XR::MeshGenerationResult::get_MeshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_MeshCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_MeshCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MeshCollider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Status
::UnityEngine::XR::MeshGenerationStatus UnityEngine::XR::MeshGenerationResult::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshGenerationStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.get_Attributes
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshGenerationResult::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::MeshVertexAttributes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.Equals
bool UnityEngine::XR::MeshGenerationResult::Equals(::UnityEngine::XR::MeshGenerationResult other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.Equals
bool UnityEngine::XR::MeshGenerationResult::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.XR.MeshGenerationResult.GetHashCode
int UnityEngine::XR::MeshGenerationResult::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshGenerationResult::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.MeshVertexAttributes
#include "UnityEngine/XR/MeshVertexAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes None
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes None
void UnityEngine::XR::MeshVertexAttributes::_set_None(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Normals
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Normals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Normals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Normals
void UnityEngine::XR::MeshVertexAttributes::_set_Normals(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Normals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Normals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Tangents
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Tangents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Tangents"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Tangents
void UnityEngine::XR::MeshVertexAttributes::_set_Tangents(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Tangents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Tangents", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes UVs
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_UVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_UVs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "UVs"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes UVs
void UnityEngine::XR::MeshVertexAttributes::_set_UVs(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_UVs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "UVs", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.MeshVertexAttributes Colors
::UnityEngine::XR::MeshVertexAttributes UnityEngine::XR::MeshVertexAttributes::_get_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_get_Colors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::MeshVertexAttributes>("UnityEngine.XR", "MeshVertexAttributes", "Colors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.MeshVertexAttributes Colors
void UnityEngine::XR::MeshVertexAttributes::_set_Colors(::UnityEngine::XR::MeshVertexAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::_set_Colors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR", "MeshVertexAttributes", "Colors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::MeshVertexAttributes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::MeshVertexAttributes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRMeshSubsystem.InvokeMeshReadyDelegate
void UnityEngine::XR::XRMeshSubsystem::InvokeMeshReadyDelegate(::UnityEngine::XR::MeshGenerationResult result, ::System::Action_1<::UnityEngine::XR::MeshGenerationResult>* onMeshGenerationComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::XRMeshSubsystem::InvokeMeshReadyDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMeshReadyDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(onMeshGenerationComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, onMeshGenerationComplete);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.ButtonState
#include "VRUIControls/ButtonState.hpp"
// Including type: VRUIControls.MouseButtonEventData
#include "VRUIControls/MouseButtonEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.InputButton _button
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::InputButton& VRUIControls::ButtonState::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData::InputButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRUIControls.MouseButtonEventData _eventData
[[deprecated("Use field access instead!")]] ::VRUIControls::MouseButtonEventData*& VRUIControls::ButtonState::dyn__eventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::dyn__eventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventData"))->offset;
  return *reinterpret_cast<::VRUIControls::MouseButtonEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pressedValue
[[deprecated("Use field access instead!")]] float& VRUIControls::ButtonState::dyn__pressedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::dyn__pressedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRUIControls.ButtonState.get_eventData
::VRUIControls::MouseButtonEventData* VRUIControls::ButtonState::get_eventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::get_eventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VRUIControls::MouseButtonEventData*, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.ButtonState.set_eventData
void VRUIControls::ButtonState::set_eventData(::VRUIControls::MouseButtonEventData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::set_eventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRUIControls.ButtonState.get_button
::UnityEngine::EventSystems::PointerEventData::InputButton VRUIControls::ButtonState::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerEventData::InputButton, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.ButtonState.set_button
void VRUIControls::ButtonState::set_button(::UnityEngine::EventSystems::PointerEventData::InputButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::set_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRUIControls.ButtonState.get_pressedValue
float VRUIControls::ButtonState::get_pressedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::get_pressedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.ButtonState.set_pressedValue
void VRUIControls::ButtonState::set_pressedValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::ButtonState::set_pressedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pressedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.MouseButtonEventData
#include "VRUIControls/MouseButtonEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.FramePressState buttonState
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::FramePressState& VRUIControls::MouseButtonEventData::dyn_buttonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseButtonEventData::dyn_buttonState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonState"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData::FramePressState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData buttonData
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData*& VRUIControls::MouseButtonEventData::dyn_buttonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseButtonEventData::dyn_buttonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonData"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRUIControls.MouseButtonEventData.PressedThisFrame
bool VRUIControls::MouseButtonEventData::PressedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseButtonEventData::PressedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.MouseButtonEventData.ReleasedThisFrame
bool VRUIControls::MouseButtonEventData::ReleasedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseButtonEventData::ReleasedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleasedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.MouseState
#include "VRUIControls/MouseState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VRUIControls.ButtonState
#include "VRUIControls/ButtonState.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.InputButton
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRUIControls.ButtonState> _trackedButtons
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VRUIControls::ButtonState*>*& VRUIControls::MouseState::dyn__trackedButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseState::dyn__trackedButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackedButtons"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VRUIControls::ButtonState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRUIControls.MouseState.AnyPressesThisFrame
bool VRUIControls::MouseState::AnyPressesThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseState::AnyPressesThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyPressesThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.MouseState.AnyReleasesThisFrame
bool VRUIControls::MouseState::AnyReleasesThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseState::AnyReleasesThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyReleasesThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.MouseState.GetButtonState
::VRUIControls::ButtonState* VRUIControls::MouseState::GetButtonState(::UnityEngine::EventSystems::PointerEventData::InputButton button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseState::GetButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodRethrow<::VRUIControls::ButtonState*, false>(this, ___internal__method, button);
}
// Autogenerated method: VRUIControls.MouseState.SetButtonState
void VRUIControls::MouseState::SetButtonState(::UnityEngine::EventSystems::PointerEventData::InputButton button, ::UnityEngine::EventSystems::PointerEventData::FramePressState stateForMouseButton, ::UnityEngine::EventSystems::PointerEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::MouseState::SetButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(stateForMouseButton), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, stateForMouseButton, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.PhysicsRaycasterWithCache
#include "VRUIControls/PhysicsRaycasterWithCache.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VRUIControls.PhysicsRaycasterWithCache/VRUIControls.CachedRaycast> _cachedRaycasts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VRUIControls::PhysicsRaycasterWithCache::CachedRaycast>*& VRUIControls::PhysicsRaycasterWithCache::dyn__cachedRaycasts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::PhysicsRaycasterWithCache::dyn__cachedRaycasts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedRaycasts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VRUIControls::PhysicsRaycasterWithCache::CachedRaycast>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFrameCount
[[deprecated("Use field access instead!")]] int& VRUIControls::PhysicsRaycasterWithCache::dyn__lastFrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::PhysicsRaycasterWithCache::dyn__lastFrameCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRUIControls.PhysicsRaycasterWithCache.Raycast
bool VRUIControls::PhysicsRaycasterWithCache::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::PhysicsRaycasterWithCache::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ray, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.PhysicsRaycasterWithCache/VRUIControls.CachedRaycast
#include "VRUIControls/PhysicsRaycasterWithCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean wasHit
[[deprecated("Use field access instead!")]] bool& VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_wasHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_wasHit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Ray ray
[[deprecated("Use field access instead!")]] ::UnityEngine::Ray& VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_ray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_ray");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ray"))->offset;
  return *reinterpret_cast<::UnityEngine::Ray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.RaycastHit hitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_hitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_hitInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single maxDistance
[[deprecated("Use field access instead!")]] float& VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_maxDistance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 layerMask
[[deprecated("Use field access instead!")]] int& VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::dyn_layerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRUIControls.PhysicsRaycasterWithCache/VRUIControls.CachedRaycast..ctor
// ABORTED elsewhere.  VRUIControls::PhysicsRaycasterWithCache::CachedRaycast::CachedRaycast(bool wasHit, ::UnityEngine::Ray ray, ::UnityEngine::RaycastHit hitInfo, float maxDistance, int layerMask)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRUIControls.VRGraphicRaycaster
#include "VRUIControls/VRGraphicRaycaster.hpp"
// Including type: HMUI.CurvedCanvasSettingsHelper
#include "HMUI/CurvedCanvasSettingsHelper.hpp"
// Including type: VRUIControls.VRGraphicRaycaster/VRUIControls.<>c
#include "VRUIControls/VRGraphicRaycaster_--c.hpp"
// Including type: VRUIControls.PhysicsRaycasterWithCache
#include "VRUIControls/PhysicsRaycasterWithCache.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPhysics3DRaycastDistance
float VRUIControls::VRGraphicRaycaster::_get_kPhysics3DRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::_get_kPhysics3DRaycastDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VRUIControls", "VRGraphicRaycaster", "kPhysics3DRaycastDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPhysics3DRaycastDistance
void VRUIControls::VRGraphicRaycaster::_set_kPhysics3DRaycastDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::_set_kPhysics3DRaycastDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRGraphicRaycaster", "kPhysics3DRaycastDistance", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10CA740
// Autogenerated static field getter
// Get static field: static private readonly System.Single[] _ray2DCircleIntersectionDistances
::ArrayW<float> VRUIControls::VRGraphicRaycaster::_get__ray2DCircleIntersectionDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::_get__ray2DCircleIntersectionDistances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("VRUIControls", "VRGraphicRaycaster", "_ray2DCircleIntersectionDistances"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single[] _ray2DCircleIntersectionDistances
void VRUIControls::VRGraphicRaycaster::_set__ray2DCircleIntersectionDistances(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::_set__ray2DCircleIntersectionDistances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VRUIControls", "VRGraphicRaycaster", "_ray2DCircleIntersectionDistances", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _blockingMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& VRUIControls::VRGraphicRaycaster::dyn__blockingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::dyn__blockingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockingMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VRUIControls.PhysicsRaycasterWithCache _physicsRaycaster
[[deprecated("Use field access instead!")]] ::VRUIControls::PhysicsRaycasterWithCache*& VRUIControls::VRGraphicRaycaster::dyn__physicsRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::dyn__physicsRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_physicsRaycaster"))->offset;
  return *reinterpret_cast<::VRUIControls::PhysicsRaycasterWithCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& VRUIControls::VRGraphicRaycaster::dyn__canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::dyn__canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VRUIControls.VRGraphicRaycaster/VRUIControls.VRGraphicRaycastResult> _raycastResults
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult>*& VRUIControls::VRGraphicRaycaster::dyn__raycastResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::dyn__raycastResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_raycastResults"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.CurvedCanvasSettingsHelper _curvedCanvasSettingsHelper
[[deprecated("Use field access instead!")]] ::HMUI::CurvedCanvasSettingsHelper*& VRUIControls::VRGraphicRaycaster::dyn__curvedCanvasSettingsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::dyn__curvedCanvasSettingsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curvedCanvasSettingsHelper"))->offset;
  return *reinterpret_cast<::HMUI::CurvedCanvasSettingsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster..cctor
void VRUIControls::VRGraphicRaycaster::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VRUIControls", "VRGraphicRaycaster", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster.RaycastCanvas
void VRUIControls::VRGraphicRaycaster::RaycastCanvas(::UnityEngine::Canvas* canvas, ::UnityEngine::Ray ray, float hitDistance, float curvedUIRadius, ::System::Collections::Generic::List_1<::VRUIControls::VRGraphicRaycaster::VRGraphicRaycastResult>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::RaycastCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VRUIControls", "VRGraphicRaycaster", "RaycastCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(hitDistance), ::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, canvas, ray, hitDistance, curvedUIRadius, results);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster.get_eventCamera
::UnityEngine::Camera* VRUIControls::VRGraphicRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster.OnEnable
void VRUIControls::VRGraphicRaycaster::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRUIControls.VRGraphicRaycaster.Raycast
void VRUIControls::VRGraphicRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VRUIControls::VRGraphicRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
