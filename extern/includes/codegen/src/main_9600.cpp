// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageHandler::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageInvoker
#include "System/Net/Http/HttpMessageInvoker.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpMessageHandler handler
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpMessageHandler*& System::Net::Http::HttpMessageInvoker::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean disposeHandler
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpMessageInvoker::dyn_disposeHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::dyn_disposeHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposeHandler"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageInvoker::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod delete_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_delete_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_delete_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "delete_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod delete_method
void System::Net::Http::HttpMethod::_set_delete_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_delete_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "delete_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod get_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_get_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_get_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "get_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod get_method
void System::Net::Http::HttpMethod::_set_get_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_get_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "get_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod head_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_head_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_head_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "head_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod head_method
void System::Net::Http::HttpMethod::_set_head_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_head_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "head_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod options_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_options_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_options_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "options_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod options_method
void System::Net::Http::HttpMethod::_set_options_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_options_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "options_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod post_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_post_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_post_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "post_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod post_method
void System::Net::Http::HttpMethod::_set_post_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_post_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "post_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod put_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_put_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_put_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "put_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod put_method
void System::Net::Http::HttpMethod::_set_put_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_put_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "put_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod trace_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_trace_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_trace_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "trace_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod trace_method
void System::Net::Http::HttpMethod::_set_trace_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_trace_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "trace_method", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String method
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::HttpMethod::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Get
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Method
::StringW System::Net::Http::HttpMethod::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Post
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod..cctor
void System::Net::Http::HttpMethod::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(::System::Net::Http::HttpMethod* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.HttpMethod.GetHashCode
int System::Net::Http::HttpMethod::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.ToString
::StringW System::Net::Http::HttpMethod::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.op_Equality
bool System::Net::Http::operator ==(::System::Net::Http::HttpMethod* left, ::System::Net::Http::HttpMethod& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpRequestException
#include "System/Net/Http/HttpRequestException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpRequestHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpRequestHeaders*& System::Net::Http::HttpRequestMessage::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpRequestHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpMethod method
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpMethod*& System::Net::Http::HttpRequestMessage::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpMethod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::Http::HttpRequestMessage::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Http::HttpRequestMessage::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_used
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpRequestMessage::dyn_is_used() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_is_used");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_used"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpRequestMessage::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <Content>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpRequestMessage::dyn_$Content$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_$Content$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Content>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Content
::System::Net::Http::HttpContent* System::Net::Http::HttpRequestMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Content
void System::Net::Http::HttpRequestMessage::set_Content(::System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Headers
::System::Net::Http::Headers::HttpRequestHeaders* System::Net::Http::HttpRequestMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpRequestHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Method
::System::Net::Http::HttpMethod* System::Net::Http::HttpRequestMessage::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Method
void System::Net::Http::HttpRequestMessage::set_Method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_RequestUri
::System::Uri* System::Net::Http::HttpRequestMessage::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_RequestUri
void System::Net::Http::HttpRequestMessage::set_RequestUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Version
::System::Version* System::Net::Http::HttpRequestMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.IsAllowedAbsoluteUri
bool System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpRequestMessage", "IsAllowedAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.SetIsUsed
bool System::Net::Http::HttpRequestMessage::SetIsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::SetIsUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.ToString
::StringW System::Net::Http::HttpRequestMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpResponseHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpResponseHeaders*& System::Net::Http::HttpResponseMessage::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpResponseHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String reasonPhrase
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::HttpResponseMessage::dyn_reasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_reasonPhrase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reasonPhrase"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpStatusCode statusCode
[[deprecated("Use field access instead!")]] ::System::Net::HttpStatusCode& System::Net::Http::HttpResponseMessage::dyn_statusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_statusCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusCode"))->offset;
  return *reinterpret_cast<::System::Net::HttpStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::Http::HttpResponseMessage::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpResponseMessage::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <Content>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpResponseMessage::dyn_$Content$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_$Content$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Content>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpRequestMessage <RequestMessage>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpResponseMessage::dyn_$RequestMessage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_$RequestMessage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestMessage>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Content
::System::Net::Http::HttpContent* System::Net::Http::HttpResponseMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_Content
void System::Net::Http::HttpResponseMessage::set_Content(::System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Headers
::System::Net::Http::Headers::HttpResponseHeaders* System::Net::Http::HttpResponseMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpResponseHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_IsSuccessStatusCode
bool System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_ReasonPhrase
::StringW System::Net::Http::HttpResponseMessage::get_ReasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_ReasonPhrase
void System::Net::Http::HttpResponseMessage::set_ReasonPhrase(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_RequestMessage
void System::Net::Http::HttpResponseMessage::set_RequestMessage(::System::Net::Http::HttpRequestMessage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_RequestMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_StatusCode
::System::Net::HttpStatusCode System::Net::Http::HttpResponseMessage::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpStatusCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_StatusCode
void System::Net::Http::HttpResponseMessage::set_StatusCode(::System::Net::HttpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Version
::System::Version* System::Net::Http::HttpResponseMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
::System::Net::Http::HttpResponseMessage* System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.ToString
::StringW System::Net::Http::HttpResponseMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StreamContent
#include "System/Net/Http/StreamContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream content
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::Http::StreamContent::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 bufferSize
[[deprecated("Use field access instead!")]] int& System::Net::Http::StreamContent::dyn_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::Http::StreamContent::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 startPosition
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::StreamContent::dyn_startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean contentCopied
[[deprecated("Use field access instead!")]] bool& System::Net::Http::StreamContent::dyn_contentCopied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_contentCopied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentCopied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.StreamContent.Dispose
void System::Net::Http::StreamContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.StreamContent.SerializeToStreamAsync
::System::Threading::Tasks::Task* System::Net::Http::StreamContent::SerializeToStreamAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.StreamContent.TryComputeLength
bool System::Net::Http::StreamContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StringContent
#include "System/Net/Http/StringContent.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.StringContent.GetByteArray
::ArrayW<uint8_t> System::Net::Http::StringContent::GetByteArray(::StringW content, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StringContent::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "StringContent", "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, content, encoding);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.AuthenticationHeaderValue
#include "System/Net/Http/Headers/AuthenticationHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Parameter>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Parameter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Parameter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameter>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Scheme>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Scheme$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Scheme$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Scheme>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Parameter
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Parameter
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Scheme
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Scheme
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::AuthenticationHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::AuthenticationHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::AuthenticationHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::AuthenticationHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::AuthenticationHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParseElement
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::AuthenticationHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::AuthenticationHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.Equals
bool System::Net::Http::Headers::AuthenticationHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode
int System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.ToString
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.CacheControlHeaderValue
#include "System/Net/Http/Headers/CacheControlHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> extensions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> no_cache_headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_no_cache_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_no_cache_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "no_cache_headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> private_headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_private_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_private_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "private_headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MaxAge>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxAge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxAge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxAge>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MaxStale>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStale$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxStale>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MaxStaleLimit>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStaleLimit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStaleLimit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxStaleLimit>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MinFresh>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MinFresh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MinFresh$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MinFresh>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MustRevalidate>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MustRevalidate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MustRevalidate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MustRevalidate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoCache>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoCache$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoCache$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoCache>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoStore>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoStore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoStore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoStore>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoTransform>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoTransform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoTransform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoTransform>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OnlyIfCached>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$OnlyIfCached$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$OnlyIfCached$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnlyIfCached>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Private>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Private$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Private$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Private>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ProxyRevalidate>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$ProxyRevalidate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$ProxyRevalidate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProxyRevalidate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Public>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Public$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Public$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Public>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <SharedMaxAge>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$SharedMaxAge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$SharedMaxAge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SharedMaxAge>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Extensions
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxAge
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStale
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStale
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStaleLimit
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStaleLimit
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MinFresh
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MinFresh
void System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MustRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MustRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCache
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoCache
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCacheHeaders
::System::Collections::Generic::ICollection_1<::StringW>* System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCacheHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoStore
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoStore
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoTransform
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoTransform
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_OnlyIfCached
bool System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_OnlyIfCached
void System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Private
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Private
void System::Net::Http::Headers::CacheControlHeaderValue::set_Private(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_PrivateHeaders
::System::Collections::Generic::ICollection_1<::StringW>* System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_ProxyRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_ProxyRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Public
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Public
void System::Net::Http::Headers::CacheControlHeaderValue::set_Public(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_SharedMaxAge
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_SharedMaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::CacheControlHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.TryParse
bool System::Net::Http::Headers::CacheControlHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::CacheControlHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CacheControlHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::CacheControlHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.Equals
bool System::Net::Http::Headers::CacheControlHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
int System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.ToString
::StringW System::Net::Http::Headers::CacheControlHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.CollectionExtensions
#include "System/Net/Http/Headers/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionExtensions.SetValue
void System::Net::Http::Headers::CollectionExtensions::SetValue(::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>* parameters, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionExtensions::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionExtensions", "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.CollectionParser
#include "System/Net/Http/Headers/CollectionParser.hpp"
// Including type: System.Net.Http.Headers.ElementTryParser`1
#include "System/Net/Http/Headers/ElementTryParser_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParse
bool System::Net::Http::Headers::CollectionParser::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::StringW>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionParser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::StringW>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParseStringElement
bool System::Net::Http::Headers::CollectionParser::TryParseStringElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::StringW> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionParser::TryParseStringElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParseStringElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentDispositionHeaderValue
#include "System/Net/Http/Headers/ContentDispositionHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String dispositionType
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_dispositionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_dispositionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dispositionType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentDispositionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse
bool System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::ContentDispositionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentDispositionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ContentDispositionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.Equals
bool System::Net::Http::Headers::ContentDispositionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.ToString
::StringW System::Net::Http::Headers::ContentDispositionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentRangeHeaderValue
#include "System/Net/Http/Headers/ContentRangeHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String unit
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <From>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$From$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$From$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<From>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <Length>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <To>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$To$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$To$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<To>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_From
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_From
void System::Net::Http::Headers::ContentRangeHeaderValue::set_From(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Length
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_Length
void System::Net::Http::Headers::ContentRangeHeaderValue::set_Length(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_To
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_To
void System::Net::Http::Headers::ContentRangeHeaderValue::set_To(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Unit
::StringW System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentRangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.TryParse
bool System::Net::Http::Headers::ContentRangeHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::ContentRangeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentRangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ContentRangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.Equals
bool System::Net::Http::Headers::ContentRangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.ToString
::StringW System::Net::Http::Headers::ContentRangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
::System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::EntityTagHeaderValue::_get_any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::_get_any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::EntityTagHeaderValue*>("System.Net.Http.Headers", "EntityTagHeaderValue", "any"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
void System::Net::Http::Headers::EntityTagHeaderValue::_set_any(::System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::_set_any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "EntityTagHeaderValue", "any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsWeak>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::EntityTagHeaderValue::dyn_$IsWeak$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::dyn_$IsWeak$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsWeak>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Tag>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::EntityTagHeaderValue::dyn_$Tag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::dyn_$Tag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tag>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_IsWeak
bool System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_IsWeak
void System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_Tag
::StringW System::Net::Http::Headers::EntityTagHeaderValue::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_Tag
void System::Net::Http::Headers::EntityTagHeaderValue::set_Tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::set_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue..cctor
void System::Net::Http::Headers::EntityTagHeaderValue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::EntityTagHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::EntityTagHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::EntityTagHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParseElement
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::EntityTagHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::EntityTagHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::EntityTagHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::EntityTagHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.Equals
bool System::Net::Http::Headers::EntityTagHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
int System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.ToString
::StringW System::Net::Http::Headers::EntityTagHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HashCodeCalculator
#include "System/Net/Http/Headers/HashCodeCalculator.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/System.Net.Http.Headers.HeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_HeaderTypeInfo_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/System.Net.Http.Headers.CollectionHeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_CollectionHeaderTypeInfo_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.Http.Headers.TryParseDelegate`1
#include "System/Net/Http/Headers/TryParseDelegate_1.hpp"
// Including type: System.Net.Http.Headers.TryParseListDelegate`1
#include "System/Net/Http/Headers/TryParseListDelegate_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowsMany
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::HeaderInfo::dyn_AllowsMany() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_AllowsMany");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowsMany"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaderKind& System::Net::Http::Headers::HeaderInfo::dyn_HeaderKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_HeaderKind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderKind"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaderKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::HeaderInfo::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.String> <CustomToString>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::StringW>*& System::Net::Http::Headers::HeaderInfo::dyn_$CustomToString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_$CustomToString$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomToString>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_CustomToString
::System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::HeaderInfo::get_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::get_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.set_CustomToString
void System::Net::Http::Headers::HeaderInfo::set_CustomToString(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::set_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_Separator
::StringW System::Net::Http::Headers::HeaderInfo::get_Separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::get_Separator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Separator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(::System::Net::Http::Headers::HttpHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::CreateCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, headers);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.AddToCollection
void System::Net::Http::Headers::HeaderInfo::AddToCollection(::Il2CppObject* collection, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::AddToCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collection, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(::System::Net::Http::Headers::HttpHeaders* headers, ::System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::CreateCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, headers, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.ToStringCollection
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HeaderInfo::ToStringCollection(::Il2CppObject* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::ToStringCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.TryParse
bool System::Net::Http::Headers::HeaderInfo::TryParse(::StringW value, ByRef<::Il2CppObject*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::TryParse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.HttpContent content
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::Headers::HttpContentHeaders::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentLength
::System::Nullable_1<int64_t> System::Net::Http::Headers::HttpContentHeaders::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::get_ContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentType
::System::Net::Http::Headers::MediaTypeHeaderValue* System::Net::Http::Headers::HttpContentHeaders::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::MediaTypeHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.set_ContentType
void System::Net::Http::Headers::HttpContentHeaders::set_ContentType(::System::Net::Http::Headers::MediaTypeHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpHeaderKind
#include "System/Net/Http/Headers/HttpHeaderKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind None
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind None
void System::Net::Http::Headers::HttpHeaderKind::_set_None(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Request
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Request"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Request
void System::Net::Http::Headers::HttpHeaderKind::_set_Request(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Request", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Response
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Response"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Response
void System::Net::Http::Headers::HttpHeaderKind::_set_Response(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Response", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Content
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Content
void System::Net::Http::Headers::HttpHeaderKind::_set_Content(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Content", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::HttpHeaderKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>* System::Net::Http::Headers::HttpHeaders::_get_known_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::_get_known_headers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>*>("System.Net.Http.Headers", "HttpHeaders", "known_headers")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
void System::Net::Http::Headers::HttpHeaders::_set_known_headers(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::_set_known_headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaders", "known_headers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket> headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>*& System::Net::Http::Headers::HttpHeaders::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaderKind& System::Net::Http::Headers::HttpHeaders::dyn_HeaderKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_HeaderKind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderKind"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaderKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> connectionclose
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpHeaders::dyn_connectionclose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_connectionclose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionclose"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> transferEncodingChunked
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpHeaders::dyn_transferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_transferEncodingChunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transferEncodingChunked"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders..cctor
void System::Net::Http::Headers::HttpHeaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.AddInternal
bool System::Net::Http::Headers::HttpHeaders::AddInternal(::StringW name, ::System::Collections::Generic::IEnumerable_1<::StringW>* values, ::System::Net::Http::Headers::HeaderInfo* headerInfo, bool ignoreInvalid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::AddInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(headerInfo), ::il2cpp_utils::ExtractType(ignoreInvalid)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, values, headerInfo, ignoreInvalid);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation
bool System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation(::StringW name, ::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddWithoutValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.CheckName
::System::Net::Http::Headers::HeaderInfo* System::Net::Http::Headers::HttpHeaders::CheckName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::CheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HeaderInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryCheckName
bool System::Net::Http::Headers::HttpHeaders::TryCheckName(::StringW name, ByRef<::System::Net::Http::Headers::HeaderInfo*> headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::TryCheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::HeaderInfo*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(headerInfo));
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>>* System::Net::Http::Headers::HttpHeaders::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Net::Http::Headers::HttpHeaders::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.Remove
bool System::Net::Http::Headers::HttpHeaders::Remove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetSingleHeaderString
::StringW System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString(::StringW key, ::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetSingleHeaderString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetAllHeaderValues
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues(::System::Net::Http::Headers::HttpHeaders::HeaderBucket* bucket, ::System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllHeaderValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, bucket, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetKnownHeaderKind
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetKnownHeaderKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderKind, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.ToString
::StringW System::Net::Http::Headers::HttpHeaders::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object Parsed
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_Parsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_Parsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parsed"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> values
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Func`2<System.Object,System.String> CustomToString
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::StringW>*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_CustomToString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomToString"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.get_HasStringValues
bool System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasStringValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.get_Values
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.set_Values
void System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.ParsedToString
::StringW System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsedToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,System.Collections.Generic.IEnumerable`1<System.String>> <>2__current
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.Headers.HttpHeaders <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaders*& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>::Enumerator& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*> System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_System_Collections_Generic_IEnumerable$System_String$$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.IDisposable.Dispose
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.MoveNext
bool System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.<>m__Finally1
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.IEnumerator.Reset
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> expectContinue
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpRequestHeaders::dyn_expectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::dyn_expectContinue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectContinue"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Connection
::System::Net::Http::Headers::HttpHeaderValueCollection_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderValueCollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionClose
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionKeepAlive
bool System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionKeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ExpectContinue
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Host
::StringW System::Net::Http::Headers::HttpRequestHeaders::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncoding
::System::Net::Http::Headers::HttpHeaderValueCollection_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderValueCollection_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncodingChunked
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncodingChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.AddHeaders
void System::Net::Http::Headers::HttpRequestHeaders::AddHeaders(::System::Net::Http::Headers::HttpRequestHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::AddHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::HttpRequestHeaders::$$c* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpRequestHeaders::$$c*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9(::System::Net::Http::Headers::HttpRequestHeaders::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__19_0
::System::Predicate_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::StringW>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__19_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0(::System::Predicate_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__22_0
::System::Predicate_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::StringW>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__22_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0(::System::Predicate_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0(::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0(::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpRequestHeaders/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ConnectionClose>b__19_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionClose$b__19_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionClose>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionClose>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ConnectionKeepAlive>b__22_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionKeepAlive$b__22_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionKeepAlive>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionKeepAlive>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ExpectContinue>b__29_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ExpectContinue$b__29_0(::System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ExpectContinue>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ExpectContinue>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_TransferEncodingChunked>b__71_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_TransferEncodingChunked$b__71_0(::System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_TransferEncodingChunked>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_TransferEncodingChunked>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Token Empty
::System::Net::Http::Headers::Token System::Net::Http::Headers::Token::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token>("System.Net.Http.Headers", "Token", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Token Empty
void System::Net::Http::Headers::Token::_set_Empty(::System::Net::Http::Headers::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.Headers.Token/System.Net.Http.Headers.Type type
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::Token::Type& System::Net::Http::Headers::Token::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::Token::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartPosition>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::dyn_$StartPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_$StartPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <EndPosition>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::dyn_$EndPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_$EndPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EndPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_StartPosition
int System::Net::Http::Headers::Token::get_StartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_StartPosition
void System::Net::Http::Headers::Token::set_StartPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::set_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_EndPosition
int System::Net::Http::Headers::Token::get_EndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_EndPosition
void System::Net::Http::Headers::Token::set_EndPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::set_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_Kind
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::Token::Type, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token..ctor
// ABORTED elsewhere.  System::Net::Http::Headers::Token::Token(::System::Net::Http::Headers::Token::Type type, int startPosition, int endPosition)
// Autogenerated method: System.Net.Http.Headers.Token..cctor
void System::Net::Http::Headers::Token::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Token", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.ToString
::StringW System::Net::Http::Headers::Token::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token/System.Net.Http.Headers.Type
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Error
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Error
void System::Net::Http::Headers::Token::Type::_set_Error(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type End
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type End
void System::Net::Http::Headers::Token::Type::_set_End(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Token
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Token
void System::Net::Http::Headers::Token::Type::_set_Token(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type QuotedString
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_QuotedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_QuotedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "QuotedString"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type QuotedString
void System::Net::Http::Headers::Token::Type::_set_QuotedString(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_QuotedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "QuotedString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorEqual
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorEqual
void System::Net::Http::Headers::Token::Type::_set_SeparatorEqual(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSemicolon
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSemicolon
void System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSlash
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorSlash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSlash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSlash
void System::Net::Http::Headers::Token::Type::_set_SeparatorSlash(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorSlash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSlash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorDash
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorDash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorDash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorDash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorDash
void System::Net::Http::Headers::Token::Type::_set_SeparatorDash(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorDash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorDash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorComma
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorComma"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorComma
void System::Net::Http::Headers::Token::Type::_set_SeparatorComma(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorComma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type OpenParens
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_OpenParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_OpenParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "OpenParens"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type OpenParens
void System::Net::Http::Headers::Token::Type::_set_OpenParens(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_OpenParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "OpenParens", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean[] token_chars
::ArrayW<bool> System::Net::Http::Headers::Lexer::_get_token_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_token_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("System.Net.Http.Headers", "Lexer", "token_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean[] token_chars
void System::Net::Http::Headers::Lexer::_set_token_chars(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_token_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "token_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 last_token_char
int System::Net::Http::Headers::Lexer::_get_last_token_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_last_token_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Http.Headers", "Lexer", "last_token_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 last_token_char
void System::Net::Http::Headers::Lexer::_set_last_token_char(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_last_token_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "last_token_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] dt_formats
::ArrayW<::StringW> System::Net::Http::Headers::Lexer::_get_dt_formats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_dt_formats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net.Http.Headers", "Lexer", "dt_formats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] dt_formats
void System::Net::Http::Headers::Lexer::_set_dt_formats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_dt_formats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "dt_formats", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String s
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::Lexer::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Lexer::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.get_Position
int System::Net::Http::Headers::Lexer::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.set_Position
void System::Net::Http::Headers::Lexer::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer..cctor
void System::Net::Http::Headers::Lexer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::StringW System::Net::Http::Headers::Lexer::GetStringValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::StringW System::Net::Http::Headers::Lexer::GetStringValue(::System::Net::Http::Headers::Token start, ::System::Net::Http::Headers::Token end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetQuotedStringValue
::StringW System::Net::Http::Headers::Lexer::GetQuotedStringValue(::System::Net::Http::Headers::Token start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetQuotedStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuotedStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetRemainingStringValue
::StringW System::Net::Http::Headers::Lexer::GetRemainingStringValue(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetRemainingStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, position);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsStarStringValue
bool System::Net::Http::Headers::Lexer::IsStarStringValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsStarStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsStarStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(::System::Net::Http::Headers::Token token, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(::System::Net::Http::Headers::Token token, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetTimeSpanValue
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::Lexer::TryGetTimeSpanValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetTimeSpanValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTimeSpanValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(::System::Net::Http::Headers::Token token, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(::StringW text, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDoubleValue
bool System::Net::Http::Headers::Lexer::TryGetDoubleValue(::System::Net::Http::Headers::Token token, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDoubleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDoubleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidToken
bool System::Net::Http::Headers::Lexer::IsValidToken(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsValidToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidCharacter
bool System::Net::Http::Headers::Lexer::IsValidCharacter(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsValidCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.EatChar
void System::Net::Http::Headers::Lexer::EatChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::EatChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.PeekChar
int System::Net::Http::Headers::Lexer::PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::PeekChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.ScanCommentOptional
bool System::Net::Http::Headers::Lexer::ScanCommentOptional(ByRef<::StringW> value, ByRef<::System::Net::Http::Headers::Token> readToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::ScanCommentOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCommentOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value), byref(readToken));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.Scan
::System::Net::Http::Headers::Token System::Net::Http::Headers::Lexer::Scan(bool recognizeDash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recognizeDash)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::Token, false>(this, ___internal__method, recognizeDash);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::MediaTypeHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String media_type
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::MediaTypeHeaderValue::dyn_media_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::dyn_media_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "media_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_CharSet
::StringW System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.set_CharSet
void System::Net::Http::Headers::MediaTypeHeaderValue::set_CharSet(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::set_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.set_MediaType
void System::Net::Http::Headers::MediaTypeHeaderValue::set_MediaType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::set_MediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::MediaTypeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::MediaTypeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::MediaTypeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParseMediaType
::System::Nullable_1<::System::Net::Http::Headers::Token> System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType(::System::Net::Http::Headers::Lexer* lexer, ByRef<::StringW> media) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParseMediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Net::Http::Headers::Token>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(media));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.Equals
bool System::Net::Http::Headers::MediaTypeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
int System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.ToString
::StringW System::Net::Http::Headers::MediaTypeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::MediaTypeHeaderValue::$$c* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::MediaTypeHeaderValue::$$c*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9(::System::Net::Http::Headers::MediaTypeHeaderValue::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0(::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c.<get_CharSet>b__6_0
bool System::Net::Http::Headers::MediaTypeHeaderValue::$$c::$get_CharSet$b__6_0(::System::Net::Http::Headers::NameValueHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::<get_CharSet>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_CharSet>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
#include "System/Net/Http/Headers/MediaTypeWithQualityHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::NameValueHeaderValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::NameValueHeaderValue::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Name
::StringW System::Net::Http::Headers::NameValueHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Name
void System::Net::Http::Headers::NameValueHeaderValue::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Value
::StringW System::Net::Http::Headers::NameValueHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Value
void System::Net::Http::Headers::NameValueHeaderValue::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Create
::System::Net::Http::Headers::NameValueHeaderValue* System::Net::Http::Headers::NameValueHeaderValue::Create(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::NameValueHeaderValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParsePragma
bool System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParsePragma", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseParameters
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*> result, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(result), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::NameValueHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::NameValueHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Equals
bool System::Net::Http::Headers::NameValueHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.ToString
::StringW System::Net::Http::Headers::NameValueHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueWithParametersHeaderValue
#include "System/Net/Http/Headers/NameValueWithParametersHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::NameValueWithParametersHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueWithParametersHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString
::StringW System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Parser_Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token.Check
void System::Net::Http::Headers::Parser::Token::Check(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Token::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token.TryCheck
bool System::Net::Http::Headers::Parser::Token::TryCheck(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Token::TryCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "TryCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime
#include "System/Net/Http/Headers/Parser_DateTime.hpp"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
::System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::Parser::DateTime::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, ::StringW>*>("System.Net.Http.Headers", "Parser/DateTime", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::DateTime::_set_ToString(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime..cctor
void System::Net::Http::Headers::Parser::DateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime.TryParse
bool System::Net::Http::Headers::Parser::DateTime::TryParse(::StringW input, ByRef<::System::DateTimeOffset> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::Parser::DateTime::$$c* System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Parser::DateTime::$$c*>("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9(::System::Net::Http::Headers::Parser::DateTime::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::Parser::DateTime::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c.<.cctor>b__2_0
::StringW System::Net::Http::Headers::Parser::DateTime::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.EmailAddress
#include "System/Net/Http/Headers/Parser_EmailAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.EmailAddress.TryParse
bool System::Net::Http::Headers::Parser::EmailAddress::TryParse(::StringW input, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::EmailAddress::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/EmailAddress", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Host
#include "System/Net/Http/Headers/Parser_Host.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Host.TryParse
bool System::Net::Http::Headers::Parser::Host::TryParse(::StringW input, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Host::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Host", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Int
#include "System/Net/Http/Headers/Parser_Int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Int.TryParse
bool System::Net::Http::Headers::Parser::Int::TryParse(::StringW input, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Int::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Int", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Long
#include "System/Net/Http/Headers/Parser_Long.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Long.TryParse
bool System::Net::Http::Headers::Parser::Long::TryParse(::StringW input, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Long::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Long", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5
#include "System/Net/Http/Headers/Parser_MD5.hpp"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_MD5_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
::System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::Parser::MD5::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, ::StringW>*>("System.Net.Http.Headers", "Parser/MD5", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::MD5::_set_ToString(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/MD5", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5..cctor
void System::Net::Http::Headers::Parser::MD5::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5.TryParse
bool System::Net::Http::Headers::Parser::MD5::TryParse(::StringW input, ByRef<::ArrayW<uint8_t>> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_MD5_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::Parser::MD5::$$c* System::Net::Http::Headers::Parser::MD5::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Parser::MD5::$$c*>("System.Net.Http.Headers", "Parser/MD5/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::Parser::MD5::$$c::_set_$$9(::System::Net::Http::Headers::Parser::MD5::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/MD5/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::Parser::MD5::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/MD5/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.MD5/System.Net.Http.Headers.<>c.<.cctor>b__2_0
::StringW System::Net::Http::Headers::Parser::MD5::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::MD5::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.TimeSpanSeconds
#include "System/Net/Http/Headers/Parser_TimeSpanSeconds.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.TimeSpanSeconds.TryParse
bool System::Net::Http::Headers::Parser::TimeSpanSeconds::TryParse(::StringW input, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::TimeSpanSeconds::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/TimeSpanSeconds", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Uri
#include "System/Net/Http/Headers/Parser_Uri.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Uri.TryParse
bool System::Net::Http::Headers::Parser::Uri::TryParse(::StringW input, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Uri::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Uri", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ProductHeaderValue
#include "System/Net/Http/Headers/ProductHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ProductHeaderValue::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Version>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ProductHeaderValue::dyn_$Version$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::dyn_$Version$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Version>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.get_Name
::StringW System::Net::Http::Headers::ProductHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.set_Name
void System::Net::Http::Headers::ProductHeaderValue::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.get_Version
::StringW System::Net::Http::Headers::ProductHeaderValue::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.set_Version
void System::Net::Http::Headers::ProductHeaderValue::set_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ProductHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.TryParse
bool System::Net::Http::Headers::ProductHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ProductHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ProductHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.TryParseElement
bool System::Net::Http::Headers::ProductHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::ProductHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ProductHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.Equals
bool System::Net::Http::Headers::ProductHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.GetHashCode
int System::Net::Http::Headers::ProductHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductHeaderValue.ToString
::StringW System::Net::Http::Headers::ProductHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ProductInfoHeaderValue
#include "System/Net/Http/Headers/ProductInfoHeaderValue.hpp"
// Including type: System.Net.Http.Headers.ProductHeaderValue
#include "System/Net/Http/Headers/ProductHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Comment>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Comment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Comment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Comment>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.ProductHeaderValue <Product>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::ProductHeaderValue*& System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Product$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::dyn_$Product$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Product>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::ProductHeaderValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.get_Comment
::StringW System::Net::Http::Headers::ProductInfoHeaderValue::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.set_Comment
void System::Net::Http::Headers::ProductInfoHeaderValue::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.get_Product
::System::Net::Http::Headers::ProductHeaderValue* System::Net::Http::Headers::ProductInfoHeaderValue::get_Product() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::get_Product");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Product", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::ProductHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.set_Product
void System::Net::Http::Headers::ProductInfoHeaderValue::set_Product(::System::Net::Http::Headers::ProductHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::set_Product");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Product", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ProductInfoHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.TryParse
bool System::Net::Http::Headers::ProductInfoHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ProductInfoHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductInfoHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ProductInfoHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.TryParseElement
bool System::Net::Http::Headers::ProductInfoHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::ProductInfoHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ProductInfoHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ProductInfoHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.Equals
bool System::Net::Http::Headers::ProductInfoHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode
int System::Net::Http::Headers::ProductInfoHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ProductInfoHeaderValue.ToString
::StringW System::Net::Http::Headers::ProductInfoHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ProductInfoHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeConditionHeaderValue
#include "System/Net/Http/Headers/RangeConditionHeaderValue.hpp"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTimeOffset>& System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.EntityTagHeaderValue <EntityTag>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::EntityTagHeaderValue*& System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$EntityTag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::dyn_$EntityTag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EntityTag>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::EntityTagHeaderValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.get_Date
::System::Nullable_1<::System::DateTimeOffset> System::Net::Http::Headers::RangeConditionHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.set_Date
void System::Net::Http::Headers::RangeConditionHeaderValue::set_Date(::System::Nullable_1<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.get_EntityTag
::System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::RangeConditionHeaderValue::get_EntityTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::get_EntityTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::EntityTagHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.set_EntityTag
void System::Net::Http::Headers::RangeConditionHeaderValue::set_EntityTag(::System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::set_EntityTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntityTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeConditionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.TryParse
bool System::Net::Http::Headers::RangeConditionHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::RangeConditionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RangeConditionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::RangeConditionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.Equals
bool System::Net::Http::Headers::RangeConditionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeConditionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeConditionHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeConditionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeConditionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeHeaderValue
#include "System/Net/Http/Headers/RangeHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.RangeItemHeaderValue
#include "System/Net/Http/Headers/RangeItemHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.RangeItemHeaderValue> ranges
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::RangeItemHeaderValue*>*& System::Net::Http::Headers::RangeHeaderValue::dyn_ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::dyn_ranges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ranges"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::RangeItemHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String unit
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::RangeHeaderValue::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.get_Ranges
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::RangeItemHeaderValue*>* System::Net::Http::Headers::RangeHeaderValue::get_Ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::get_Ranges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ranges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::RangeItemHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.get_Unit
::StringW System::Net::Http::Headers::RangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.TryParse
bool System::Net::Http::Headers::RangeHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::RangeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::RangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.Equals
bool System::Net::Http::Headers::RangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RangeItemHeaderValue
#include "System/Net/Http/Headers/RangeItemHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <From>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::RangeItemHeaderValue::dyn_$From$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::dyn_$From$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<From>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <To>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::RangeItemHeaderValue::dyn_$To$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::dyn_$To$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<To>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.get_From
::System::Nullable_1<int64_t> System::Net::Http::Headers::RangeItemHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.set_From
void System::Net::Http::Headers::RangeItemHeaderValue::set_From(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.get_To
::System::Nullable_1<int64_t> System::Net::Http::Headers::RangeItemHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.set_To
void System::Net::Http::Headers::RangeItemHeaderValue::set_To(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RangeItemHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.Equals
bool System::Net::Http::Headers::RangeItemHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode
int System::Net::Http::Headers::RangeItemHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RangeItemHeaderValue.ToString
::StringW System::Net::Http::Headers::RangeItemHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RangeItemHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.RetryConditionHeaderValue
#include "System/Net/Http/Headers/RetryConditionHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTimeOffset>& System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <Delta>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Delta$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::dyn_$Delta$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Delta>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.get_Date
::System::Nullable_1<::System::DateTimeOffset> System::Net::Http::Headers::RetryConditionHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.set_Date
void System::Net::Http::Headers::RetryConditionHeaderValue::set_Date(::System::Nullable_1<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.get_Delta
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::RetryConditionHeaderValue::get_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::get_Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.set_Delta
void System::Net::Http::Headers::RetryConditionHeaderValue::set_Delta(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::set_Delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::RetryConditionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.TryParse
bool System::Net::Http::Headers::RetryConditionHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::RetryConditionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "RetryConditionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::RetryConditionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.Equals
bool System::Net::Http::Headers::RetryConditionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode
int System::Net::Http::Headers::RetryConditionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.RetryConditionHeaderValue.ToString
::StringW System::Net::Http::Headers::RetryConditionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::RetryConditionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.StringWithQualityHeaderValue
#include "System/Net/Http/Headers/StringWithQualityHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Double> <Quality>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<double>& System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Quality$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Quality$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Quality>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.get_Quality
::System::Nullable_1<double> System::Net::Http::Headers::StringWithQualityHeaderValue::get_Quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::get_Quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.set_Quality
void System::Net::Http::Headers::StringWithQualityHeaderValue::set_Quality(::System::Nullable_1<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::set_Quality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Quality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.get_Value
::StringW System::Net::Http::Headers::StringWithQualityHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.set_Value
void System::Net::Http::Headers::StringWithQualityHeaderValue::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::StringWithQualityHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::StringWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::StringWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "StringWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::StringWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::StringWithQualityHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::StringWithQualityHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "StringWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::StringWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals
bool System::Net::Http::Headers::StringWithQualityHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
int System::Net::Http::Headers::StringWithQualityHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
::StringW System::Net::Http::Headers::StringWithQualityHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::StringWithQualityHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::TransferCodingHeaderValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::TransferCodingHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::TransferCodingHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.get_Value
::StringW System::Net::Http::Headers::TransferCodingHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::TransferCodingHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse
bool System::Net::Http::Headers::TransferCodingHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.TryParseElement
bool System::Net::Http::Headers::TransferCodingHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::TransferCodingHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::TransferCodingHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.Equals
bool System::Net::Http::Headers::TransferCodingHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode
int System::Net::Http::Headers::TransferCodingHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingHeaderValue.ToString
::StringW System::Net::Http::Headers::TransferCodingHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
#include "System/Net/Http/Headers/TransferCodingWithQualityHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "TransferCodingWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::TransferCodingWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ViaHeaderValue
#include "System/Net/Http/Headers/ViaHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Comment>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$Comment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::dyn_$Comment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Comment>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ProtocolName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProtocolName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ProtocolVersion>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolVersion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::dyn_$ProtocolVersion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProtocolVersion>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ReceivedBy>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ViaHeaderValue::dyn_$ReceivedBy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::dyn_$ReceivedBy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReceivedBy>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_Comment
::StringW System::Net::Http::Headers::ViaHeaderValue::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_Comment
void System::Net::Http::Headers::ViaHeaderValue::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ProtocolName
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ProtocolName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::get_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ProtocolName
void System::Net::Http::Headers::ViaHeaderValue::set_ProtocolName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::set_ProtocolName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ProtocolVersion
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ProtocolVersion
void System::Net::Http::Headers::ViaHeaderValue::set_ProtocolVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::set_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.get_ReceivedBy
::StringW System::Net::Http::Headers::ViaHeaderValue::get_ReceivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::get_ReceivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReceivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.set_ReceivedBy
void System::Net::Http::Headers::ViaHeaderValue::set_ReceivedBy(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::set_ReceivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ViaHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.TryParse
bool System::Net::Http::Headers::ViaHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ViaHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ViaHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::ViaHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.TryParseElement
bool System::Net::Http::Headers::ViaHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::ViaHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ViaHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ViaHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.Equals
bool System::Net::Http::Headers::ViaHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.GetHashCode
int System::Net::Http::Headers::ViaHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ViaHeaderValue.ToString
::StringW System::Net::Http::Headers::ViaHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ViaHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.WarningHeaderValue
#include "System/Net/Http/Headers/WarningHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Agent>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::WarningHeaderValue::dyn_$Agent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::dyn_$Agent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Agent>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Code>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::WarningHeaderValue::dyn_$Code$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::dyn_$Code$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Code>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTimeOffset> <Date>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTimeOffset>& System::Net::Http::Headers::WarningHeaderValue::dyn_$Date$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::dyn_$Date$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Date>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Text>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::WarningHeaderValue::dyn_$Text$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::dyn_$Text$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Text>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Agent
::StringW System::Net::Http::Headers::WarningHeaderValue::get_Agent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::get_Agent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Agent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Agent
void System::Net::Http::Headers::WarningHeaderValue::set_Agent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::set_Agent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Agent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Code
int System::Net::Http::Headers::WarningHeaderValue::get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::get_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Code
void System::Net::Http::Headers::WarningHeaderValue::set_Code(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::set_Code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Date
::System::Nullable_1<::System::DateTimeOffset> System::Net::Http::Headers::WarningHeaderValue::get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::get_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Date
void System::Net::Http::Headers::WarningHeaderValue::set_Date(::System::Nullable_1<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::set_Date");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Date", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.get_Text
::StringW System::Net::Http::Headers::WarningHeaderValue::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.set_Text
void System::Net::Http::Headers::WarningHeaderValue::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.IsCodeValid
bool System::Net::Http::Headers::WarningHeaderValue::IsCodeValid(int code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::IsCodeValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "IsCodeValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::WarningHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.TryParse
bool System::Net::Http::Headers::WarningHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::WarningHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::WarningHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.TryParseElement
bool System::Net::Http::Headers::WarningHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::WarningHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "WarningHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::WarningHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.Equals
bool System::Net::Http::Headers::WarningHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.GetHashCode
int System::Net::Http::Headers::WarningHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.WarningHeaderValue.ToString
::StringW System::Net::Http::Headers::WarningHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::WarningHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataContractAttribute
#include "System/Runtime/Serialization/DataContractAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReference
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataContractAttribute::dyn_isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataContractAttribute::dyn_isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataContractAttribute.get_IsReference
bool System::Runtime::Serialization::DataContractAttribute::get_IsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataContractAttribute::get_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataMemberAttribute
#include "System/Runtime/Serialization/DataMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Serialization::DataMemberAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated("Use field access instead!")]] int& System::Runtime::Serialization::DataMemberAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRequired
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emitDefaultValue
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emitDefaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Name
::StringW System::Runtime::Serialization::DataMemberAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Order
int System::Runtime::Serialization::DataMemberAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_IsRequired
bool System::Runtime::Serialization::DataMemberAttribute::get_IsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_IsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_EmitDefaultValue
bool System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmitDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.EnumMemberAttribute
#include "System/Runtime/Serialization/EnumMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Serialization::EnumMemberAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::EnumMemberAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.EnumMemberAttribute.get_Value
::StringW System::Runtime::Serialization::EnumMemberAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::EnumMemberAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.KnownTypeAttribute
#include "System/Runtime/Serialization/KnownTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Runtime::Serialization::KnownTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::KnownTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR___.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::System::Globalization::CultureInfo* culture, ::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, name, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.Cache.XPathDocumentNavigator
#include "MS/Internal/Xml/Cache/XPathDocumentNavigator.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageCurrent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageCurrent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxCurrent
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxCurrent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxParent
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.GetPositionHashCode
int MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Value
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NamespaceURI
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NameTable
::System::Xml::XmlNameTable* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_UnderlyingObject
::Il2CppObject* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.Clone
::System::Xml::XPath::XPathNavigator* MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToFirstNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace(::System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToFirstNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceScope)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToNextNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace(::System::Xml::XPath::XPathNamespaceScope scope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToNextNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scope)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, scope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToParent
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.IsSamePosition
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition(::System::Xml::XPath::XPathNavigator* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSamePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNode
#include "MS/Internal/Xml/Cache/XPathNode.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodeInfoAtom info
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::Cache::XPathNodeInfoAtom*& MS::Internal::Xml::Cache::XPathNode::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_info");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::Cache::XPathNodeInfoAtom**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSibling
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSibling"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxParent
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSimilar
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSimilar"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 posOffset
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_posOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_posOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posOffset"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 props
[[deprecated("Use field access instead!")]] uint& MS::Internal::Xml::Cache::XPathNode::dyn_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_props");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "props"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_NodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNode::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Document
::System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNode::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_PageInfo
::MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNode::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsXmlNamespaceNode
bool MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsXmlNamespaceNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasSibling
bool MS::Internal::Xml::Cache::XPathNode::get_HasSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasCollapsedText
bool MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasCollapsedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsText
bool MS::Internal::Xml::Cache::XPathNode::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasNamespaceDecls
bool MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasNamespaceDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Value
::StringW MS::Internal::Xml::Cache::XPathNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetParent
int MS::Internal::Xml::Cache::XPathNode::GetParent(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetSibling
int MS::Internal::Xml::Cache::XPathNode::GetSibling(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::GetSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeRef
#include "MS/Internal/Xml/Cache/XPathNodeRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] page
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeRef::dyn_page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::dyn_page");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "page"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idx
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Page
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeRef::get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::get_Page");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Page", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Index
int MS::Internal::Xml::Cache::XPathNodeRef::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef..ctor
// ABORTED elsewhere.  MS::Internal::Xml::Cache::XPathNodeRef::XPathNodeRef(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> page, int idx)
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.GetHashCode
int MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeHelper
#include "MS/Internal/Xml/Cache/XPathNodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocalNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocalNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetInScopeNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetInScopeNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetParent
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetParent(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocation
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageNode, int idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageNode, idxNode);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetTextFollowing
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageCurrent, ByRef<int> idxCurrent, ::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageEnd, int idxEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetTextFollowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageCurrent), ::il2cpp_utils::ExtractType(idxCurrent), ::il2cpp_utils::ExtractType(pageEnd), ::il2cpp_utils::ExtractType(idxEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageCurrent), byref(idxCurrent), pageEnd, idxEnd);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetNonDescendant
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetNonDescendant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pageNum
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeCount
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageNext
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNext"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_PageNumber
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NodeCount
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NextPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String localName
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String namespaceUri
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageSibling
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageSibling"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathDocument doc
[[deprecated("Use field access instead!")]] ::System::Xml::XPath::XPathDocument*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doc"))->offset;
  return *reinterpret_cast<::System::Xml::XPath::XPathDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodePageInfo pageInfo
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::Cache::XPathNodePageInfo*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageInfo"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::Cache::XPathNodePageInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_PageInfo
::MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_SiblingPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SiblingPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_ParentPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Document
::System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalAppContextSwitches
#include "System/LocalAppContextSwitches_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean DontThrowOnInvalidSurrogatePairs
bool System::LocalAppContextSwitches_::_get_DontThrowOnInvalidSurrogatePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches_::_get_DontThrowOnInvalidSurrogatePairs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "LocalAppContextSwitches", "DontThrowOnInvalidSurrogatePairs"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean DontThrowOnInvalidSurrogatePairs
void System::LocalAppContextSwitches_::_set_DontThrowOnInvalidSurrogatePairs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches_::_set_DontThrowOnInvalidSurrogatePairs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalAppContextSwitches", "DontThrowOnInvalidSurrogatePairs", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.AsyncHelper
#include "System/Xml/AsyncHelper.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task DoneTask
::System::Threading::Tasks::Task* System::Xml::AsyncHelper::_get_DoneTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task*>("System.Xml", "AsyncHelper", "DoneTask"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task DoneTask
void System::Xml::AsyncHelper::_set_DoneTask(::System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTask", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
::System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskTrue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
void System::Xml::AsyncHelper::_set_DoneTaskTrue(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskTrue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
::System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskFalse"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
void System::Xml::AsyncHelper::_set_DoneTaskFalse(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskFalse", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
::System::Threading::Tasks::Task_1<int>* System::Xml::AsyncHelper::_get_DoneTaskZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<int>*>("System.Xml", "AsyncHelper", "DoneTaskZero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
void System::Xml::AsyncHelper::_set_DoneTaskZero(::System::Threading::Tasks::Task_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskZero", value));
}
// Autogenerated method: System.Xml.AsyncHelper..cctor
void System::Xml::AsyncHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "AsyncHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Base64Encoder
#include "System/Xml/Base64Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] leftOverBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::Base64Encoder::dyn_leftOverBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_leftOverBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftOverBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 leftOverBytesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Base64Encoder::dyn_leftOverBytesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_leftOverBytesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftOverBytesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charsLine
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::Base64Encoder::dyn_charsLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_charsLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charsLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Base64Encoder.WriteChars
void System::Xml::Base64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Encode
void System::Xml::Base64Encoder::Encode(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Flush
void System::Xml::Base64Encoder::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlRawWriterBase64Encoder
#include "System/Xml/XmlRawWriterBase64Encoder.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlRawWriter rawWriter
[[deprecated("Use field access instead!")]] ::System::Xml::XmlRawWriter*& System::Xml::XmlRawWriterBase64Encoder::dyn_rawWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriterBase64Encoder::dyn_rawWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawWriter"))->offset;
  return *reinterpret_cast<::System::Xml::XmlRawWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlRawWriterBase64Encoder.WriteChars
void System::Xml::XmlRawWriterBase64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriterBase64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexDecoder
#include "System/Xml/BinHexDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::BinHexDecoder::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curIndex
[[deprecated("Use field access instead!")]] int& System::Xml::BinHexDecoder::dyn_curIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_curIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endIndex
[[deprecated("Use field access instead!")]] int& System::Xml::BinHexDecoder::dyn_endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasHalfByteCached
[[deprecated("Use field access instead!")]] bool& System::Xml::BinHexDecoder::dyn_hasHalfByteCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_hasHalfByteCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasHalfByteCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte cachedHalfByte
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::BinHexDecoder::dyn_cachedHalfByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_cachedHalfByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedHalfByte"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
::ArrayW<uint8_t> System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, bool allowOddChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(allowOddChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, allowOddChars);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
void System::Xml::BinHexDecoder::Decode(::Il2CppChar* pChars, ::Il2CppChar* pCharsEndPos, uint8_t* pBytes, uint8_t* pBytesEndPos, ByRef<bool> hasHalfByteCached, ByRef<uint8_t> cachedHalfByte, ByRef<int> charsDecoded, ByRef<int> bytesDecoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pChars), ::il2cpp_utils::ExtractType(pCharsEndPos), ::il2cpp_utils::ExtractType(pBytes), ::il2cpp_utils::ExtractType(pBytesEndPos), ::il2cpp_utils::ExtractType(hasHalfByteCached), ::il2cpp_utils::ExtractType(cachedHalfByte), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pChars, pCharsEndPos, pBytes, pBytesEndPos, byref(hasHalfByteCached), byref(cachedHalfByte), byref(charsDecoded), byref(bytesDecoded));
}
// Autogenerated method: System.Xml.BinHexDecoder.get_IsFull
bool System::Xml::BinHexDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
int System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexEncoder
#include "System/Xml/BinHexEncoder.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.BinHexEncoder.Encode
void System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> buffer, int index, int count, ::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, count, writer);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
::StringW System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
int System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count, ::ArrayW<::Il2CppChar> outArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(outArray)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count, outArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] bitStack
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Xml::BitStack::dyn_bitStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_bitStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitStack"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 stackPos
[[deprecated("Use field access instead!")]] int& System::Xml::BitStack::dyn_stackPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_stackPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stackPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 curr
[[deprecated("Use field access instead!")]] uint& System::Xml::BitStack::dyn_curr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_curr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curr"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BitStack.PushBit
void System::Xml::BitStack::PushBit(bool bit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PushBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bit);
}
// Autogenerated method: System.Xml.BitStack.PopBit
bool System::Xml::BitStack::PopBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PopBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PeekBit
bool System::Xml::BitStack::PeekBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PeekBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PushCurr
void System::Xml::BitStack::PushCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PushCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PopCurr
void System::Xml::BitStack::PopCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PopCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Bits
#include "System/Xml/Bits.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0101010101010101
uint System::Xml::Bits::_get_MASK_0101010101010101() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0101010101010101");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0101010101010101"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0101010101010101
void System::Xml::Bits::_set_MASK_0101010101010101(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0101010101010101");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0101010101010101", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0011001100110011
uint System::Xml::Bits::_get_MASK_0011001100110011() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0011001100110011");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0011001100110011"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0011001100110011
void System::Xml::Bits::_set_MASK_0011001100110011(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0011001100110011");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0011001100110011", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0000111100001111
uint System::Xml::Bits::_get_MASK_0000111100001111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0000111100001111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0000111100001111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0000111100001111
void System::Xml::Bits::_set_MASK_0000111100001111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0000111100001111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0000111100001111", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0000000011111111
uint System::Xml::Bits::_get_MASK_0000000011111111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0000000011111111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0000000011111111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0000000011111111
void System::Xml::Bits::_set_MASK_0000000011111111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0000000011111111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0000000011111111", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_1111111111111111
uint System::Xml::Bits::_get_MASK_1111111111111111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_1111111111111111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_1111111111111111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_1111111111111111
void System::Xml::Bits::_set_MASK_1111111111111111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_1111111111111111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_1111111111111111", value));
}
// Autogenerated method: System.Xml.Bits..cctor
void System::Xml::Bits::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Bits.Count
int System::Xml::Bits::Count(uint num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num);
}
// Autogenerated method: System.Xml.Bits.LeastPosition
int System::Xml::Bits::LeastPosition(uint num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::LeastPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", "LeastPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] stack
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::ByteStack::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 growthRate
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_growthRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_growthRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "growthRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 top
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "top"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 size
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.ByteStack.Push
void System::Xml::ByteStack::Push(uint8_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.ByteStack.Pop
uint8_t System::Xml::ByteStack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinaryCompatibility
#include "System/Xml/BinaryCompatibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _targetsAtLeast_Desktop_V4_5_2
bool System::Xml::BinaryCompatibility::_get__targetsAtLeast_Desktop_V4_5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::_get__targetsAtLeast_Desktop_V4_5_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Xml", "BinaryCompatibility", "_targetsAtLeast_Desktop_V4_5_2"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _targetsAtLeast_Desktop_V4_5_2
void System::Xml::BinaryCompatibility::_set__targetsAtLeast_Desktop_V4_5_2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::_set__targetsAtLeast_Desktop_V4_5_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinaryCompatibility", "_targetsAtLeast_Desktop_V4_5_2", value));
}
// Autogenerated method: System.Xml.BinaryCompatibility.get_TargetsAtLeast_Desktop_V4_5_2
bool System::Xml::BinaryCompatibility::get_TargetsAtLeast_Desktop_V4_5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::get_TargetsAtLeast_Desktop_V4_5_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", "get_TargetsAtLeast_Desktop_V4_5_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinaryCompatibility..cctor
void System::Xml::BinaryCompatibility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinaryCompatibility.RunningOnCheck
bool System::Xml::BinaryCompatibility::RunningOnCheck(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::RunningOnCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", "RunningOnCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
// Including type: System.Xml.CharEntityEncoderFallbackBuffer
#include "System/Xml/CharEntityEncoderFallbackBuffer.hpp"
// Including type: System.Text.EncoderFallbackBuffer
#include "System/Text/EncoderFallbackBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.CharEntityEncoderFallbackBuffer fallbackBuffer
[[deprecated("Use field access instead!")]] ::System::Xml::CharEntityEncoderFallbackBuffer*& System::Xml::CharEntityEncoderFallback::dyn_fallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_fallbackBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackBuffer"))->offset;
  return *reinterpret_cast<::System::Xml::CharEntityEncoderFallbackBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] textContentMarks
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Xml::CharEntityEncoderFallback::dyn_textContentMarks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_textContentMarks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textContentMarks"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkPos
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_endMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_endMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curMarkPos
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_curMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_curMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curMarkPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startOffset
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_startOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_startOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.set_StartOffset
void System::Xml::CharEntityEncoderFallback::set_StartOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::set_StartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.Reset
void System::Xml::CharEntityEncoderFallback::Reset(::ArrayW<int> textContentMarks, int endMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContentMarks), ::il2cpp_utils::ExtractType(endMarkPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textContentMarks, endMarkPos);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.CanReplaceAt
bool System::Xml::CharEntityEncoderFallback::CanReplaceAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::CanReplaceAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanReplaceAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.get_MaxCharCount
int System::Xml::CharEntityEncoderFallback::get_MaxCharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::get_MaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.CreateFallbackBuffer
::System::Text::EncoderFallbackBuffer* System::Xml::CharEntityEncoderFallback::CreateFallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::CreateFallbackBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFallbackBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::EncoderFallbackBuffer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.CharEntityEncoderFallbackBuffer
#include "System/Xml/CharEntityEncoderFallbackBuffer.hpp"
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.CharEntityEncoderFallback parent
[[deprecated("Use field access instead!")]] ::System::Xml::CharEntityEncoderFallback*& System::Xml::CharEntityEncoderFallbackBuffer::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::CharEntityEncoderFallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String charEntity
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEntity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charEntityIndex
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntityIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntityIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEntityIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.SurrogateCharToUtf32
int System::Xml::CharEntityEncoderFallbackBuffer::SurrogateCharToUtf32(::Il2CppChar highSurrogate, ::Il2CppChar lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::SurrogateCharToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SurrogateCharToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.get_Remaining
int System::Xml::CharEntityEncoderFallbackBuffer::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::get_Remaining");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Remaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Fallback
bool System::Xml::CharEntityEncoderFallbackBuffer::Fallback(::Il2CppChar charUnknown, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charUnknown), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, charUnknown, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Fallback
bool System::Xml::CharEntityEncoderFallbackBuffer::Fallback(::Il2CppChar charUnknownHigh, ::Il2CppChar charUnknownLow, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charUnknownHigh), ::il2cpp_utils::ExtractType(charUnknownLow), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, charUnknownHigh, charUnknownLow, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.GetNextChar
::Il2CppChar System::Xml::CharEntityEncoderFallbackBuffer::GetNextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::GetNextChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.MovePrevious
bool System::Xml::CharEntityEncoderFallbackBuffer::MovePrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::MovePrevious");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Reset
void System::Xml::CharEntityEncoderFallbackBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ConformanceLevel
#include "System/Xml/ConformanceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Auto
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Auto
void System::Xml::ConformanceLevel::_set_Auto(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Fragment
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Fragment
void System::Xml::ConformanceLevel::_set_Fragment(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Document
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Document
void System::Xml::ConformanceLevel::_set_Document(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Document", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::ConformanceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdProcessing
#include "System/Xml/DtdProcessing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Prohibit
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Prohibit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Prohibit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Prohibit"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Prohibit
void System::Xml::DtdProcessing::_set_Prohibit(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Prohibit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Prohibit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Ignore
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Ignore
void System::Xml::DtdProcessing::_set_Ignore(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Parse
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Parse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Parse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Parse
void System::Xml::DtdProcessing::_set_Parse(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Parse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Parse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdProcessing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.EntityHandling
#include "System/Xml/EntityHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.EntityHandling ExpandEntities
::System::Xml::EntityHandling System::Xml::EntityHandling::_get_ExpandEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_get_ExpandEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EntityHandling>("System.Xml", "EntityHandling", "ExpandEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.EntityHandling ExpandEntities
void System::Xml::EntityHandling::_set_ExpandEntities(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_set_ExpandEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "EntityHandling", "ExpandEntities", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.EntityHandling ExpandCharEntities
::System::Xml::EntityHandling System::Xml::EntityHandling::_get_ExpandCharEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_get_ExpandCharEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EntityHandling>("System.Xml", "EntityHandling", "ExpandCharEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.EntityHandling ExpandCharEntities
void System::Xml::EntityHandling::_set_ExpandCharEntities(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_set_ExpandCharEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "EntityHandling", "ExpandCharEntities", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::EntityHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlEncodedRawTextWriter
#include "System/Xml/HtmlEncodedRawTextWriter.hpp"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlEncodedRawTextWriter::_get_elementPropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_get_elementPropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlEncodedRawTextWriter", "elementPropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
void System::Xml::HtmlEncodedRawTextWriter::_set_elementPropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_set_elementPropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlEncodedRawTextWriter", "elementPropertySearch", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlEncodedRawTextWriter::_get_attributePropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_get_attributePropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlEncodedRawTextWriter", "attributePropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
void System::Xml::HtmlEncodedRawTextWriter::_set_attributePropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_set_attributePropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlEncodedRawTextWriter", "attributePropertySearch", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ByteStack elementScope
[[deprecated("Use field access instead!")]] ::System::Xml::ByteStack*& System::Xml::HtmlEncodedRawTextWriter::dyn_elementScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_elementScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementScope"))->offset;
  return *reinterpret_cast<::System::Xml::ByteStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ElementProperties currentElementProperties
[[deprecated("Use field access instead!")]] ::System::Xml::ElementProperties& System::Xml::HtmlEncodedRawTextWriter::dyn_currentElementProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_currentElementProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElementProperties"))->offset;
  return *reinterpret_cast<::System::Xml::ElementProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.AttributeProperties currentAttributeProperties
[[deprecated("Use field access instead!")]] ::System::Xml::AttributeProperties& System::Xml::HtmlEncodedRawTextWriter::dyn_currentAttributeProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_currentAttributeProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAttributeProperties"))->offset;
  return *reinterpret_cast<::System::Xml::AttributeProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean endsWithAmpersand
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriter::dyn_endsWithAmpersand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_endsWithAmpersand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endsWithAmpersand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] uriEscapingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::HtmlEncodedRawTextWriter::dyn_uriEscapingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_uriEscapingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uriEscapingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mediaType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlEncodedRawTextWriter::dyn_mediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_mediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doNotEscapeUriAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriter::dyn_doNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_doNotEscapeUriAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotEscapeUriAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.Init
void System::Xml::HtmlEncodedRawTextWriter::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteMetaElement
void System::Xml::HtmlEncodedRawTextWriter::WriteMetaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteMetaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlElementTextBlock
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeTextBlock
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeText
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteUriAttributeText
void System::Xml::HtmlEncodedRawTextWriter::WriteUriAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteUriAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUriAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.OutputRestAmps
void System::Xml::HtmlEncodedRawTextWriter::OutputRestAmps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::OutputRestAmps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutputRestAmps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteDocType
void System::Xml::HtmlEncodedRawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteStartElement
void System::Xml::HtmlEncodedRawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.StartElementContent
void System::Xml::HtmlEncodedRawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEndElement
void System::Xml::HtmlEncodedRawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteFullEndElement
void System::Xml::HtmlEncodedRawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteStartAttribute
void System::Xml::HtmlEncodedRawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEndAttribute
void System::Xml::HtmlEncodedRawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteProcessingInstruction
void System::Xml::HtmlEncodedRawTextWriter::WriteProcessingInstruction(::StringW target, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteString
void System::Xml::HtmlEncodedRawTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEntityRef
void System::Xml::HtmlEncodedRawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteCharEntity
void System::Xml::HtmlEncodedRawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteSurrogateCharEntity
void System::Xml::HtmlEncodedRawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteChars
void System::Xml::HtmlEncodedRawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlEncodedRawTextWriterIndent
#include "System/Xml/HtmlEncodedRawTextWriterIndent.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endBlockPos
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_endBlockPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_endBlockPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endBlockPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteIndent
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteDocType
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteStartElement
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.StartElementContent
void System::Xml::HtmlEncodedRawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteEndElement
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteStartAttribute
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.FlushBuffer
void System::Xml::HtmlEncodedRawTextWriterIndent::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.Init
void System::Xml::HtmlEncodedRawTextWriterIndent::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlTernaryTree
#include "System/Xml/HtmlTernaryTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Byte[] htmlElements
::ArrayW<uint8_t> System::Xml::HtmlTernaryTree::_get_htmlElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_get_htmlElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "HtmlTernaryTree", "htmlElements"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] htmlElements
void System::Xml::HtmlTernaryTree::_set_htmlElements(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_set_htmlElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlTernaryTree", "htmlElements", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte[] htmlAttributes
::ArrayW<uint8_t> System::Xml::HtmlTernaryTree::_get_htmlAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_get_htmlAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "HtmlTernaryTree", "htmlAttributes"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] htmlAttributes
void System::Xml::HtmlTernaryTree::_set_htmlAttributes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_set_htmlAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlTernaryTree", "htmlAttributes", value));
}
// Autogenerated method: System.Xml.HtmlTernaryTree..cctor
void System::Xml::HtmlTernaryTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "HtmlTernaryTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlUtf8RawTextWriter
#include "System/Xml/HtmlUtf8RawTextWriter.hpp"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlUtf8RawTextWriter::_get_elementPropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_get_elementPropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlUtf8RawTextWriter", "elementPropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
void System::Xml::HtmlUtf8RawTextWriter::_set_elementPropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_set_elementPropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlUtf8RawTextWriter", "elementPropertySearch", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlUtf8RawTextWriter::_get_attributePropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_get_attributePropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlUtf8RawTextWriter", "attributePropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
void System::Xml::HtmlUtf8RawTextWriter::_set_attributePropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_set_attributePropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlUtf8RawTextWriter", "attributePropertySearch", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ByteStack elementScope
[[deprecated("Use field access instead!")]] ::System::Xml::ByteStack*& System::Xml::HtmlUtf8RawTextWriter::dyn_elementScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_elementScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementScope"))->offset;
  return *reinterpret_cast<::System::Xml::ByteStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ElementProperties currentElementProperties
[[deprecated("Use field access instead!")]] ::System::Xml::ElementProperties& System::Xml::HtmlUtf8RawTextWriter::dyn_currentElementProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_currentElementProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElementProperties"))->offset;
  return *reinterpret_cast<::System::Xml::ElementProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.AttributeProperties currentAttributeProperties
[[deprecated("Use field access instead!")]] ::System::Xml::AttributeProperties& System::Xml::HtmlUtf8RawTextWriter::dyn_currentAttributeProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_currentAttributeProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAttributeProperties"))->offset;
  return *reinterpret_cast<::System::Xml::AttributeProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean endsWithAmpersand
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriter::dyn_endsWithAmpersand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_endsWithAmpersand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endsWithAmpersand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] uriEscapingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::HtmlUtf8RawTextWriter::dyn_uriEscapingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_uriEscapingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uriEscapingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mediaType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlUtf8RawTextWriter::dyn_mediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_mediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doNotEscapeUriAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriter::dyn_doNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_doNotEscapeUriAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotEscapeUriAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.Init
void System::Xml::HtmlUtf8RawTextWriter::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteMetaElement
void System::Xml::HtmlUtf8RawTextWriter::WriteMetaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteMetaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlElementTextBlock
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeTextBlock
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeText
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteUriAttributeText
void System::Xml::HtmlUtf8RawTextWriter::WriteUriAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteUriAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUriAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.OutputRestAmps
void System::Xml::HtmlUtf8RawTextWriter::OutputRestAmps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::OutputRestAmps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutputRestAmps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteDocType
void System::Xml::HtmlUtf8RawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteStartElement
void System::Xml::HtmlUtf8RawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.StartElementContent
void System::Xml::HtmlUtf8RawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEndElement
void System::Xml::HtmlUtf8RawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteFullEndElement
void System::Xml::HtmlUtf8RawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteStartAttribute
void System::Xml::HtmlUtf8RawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEndAttribute
void System::Xml::HtmlUtf8RawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteProcessingInstruction
void System::Xml::HtmlUtf8RawTextWriter::WriteProcessingInstruction(::StringW target, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteString
void System::Xml::HtmlUtf8RawTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEntityRef
void System::Xml::HtmlUtf8RawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteCharEntity
void System::Xml::HtmlUtf8RawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteSurrogateCharEntity
void System::Xml::HtmlUtf8RawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteChars
void System::Xml::HtmlUtf8RawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlUtf8RawTextWriterIndent
#include "System/Xml/HtmlUtf8RawTextWriterIndent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endBlockPos
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_endBlockPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_endBlockPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endBlockPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteIndent
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteDocType
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteStartElement
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.StartElementContent
void System::Xml::HtmlUtf8RawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteEndElement
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteStartAttribute
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.FlushBuffer
void System::Xml::HtmlUtf8RawTextWriterIndent::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.Init
void System::Xml::HtmlUtf8RawTextWriterIndent::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdInfo.get_Name
::System::Xml::XmlQualifiedName* System::Xml::IDtdInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_InternalDtdSubset
::StringW System::Xml::IDtdInfo::get_InternalDtdSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_InternalDtdSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalDtdSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_HasDefaultAttributes
bool System::Xml::IDtdInfo::get_HasDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_HasDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDefaultAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_HasNonCDataAttributes
bool System::Xml::IDtdInfo::get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasNonCDataAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.LookupAttributeList
::System::Xml::IDtdAttributeListInfo* System::Xml::IDtdInfo::LookupAttributeList(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::LookupAttributeList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupAttributeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeListInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.IDtdInfo.LookupEntity
::System::Xml::IDtdEntityInfo* System::Xml::IDtdInfo::LookupEntity(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::LookupEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdEntityInfo*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdAttributeListInfo.get_HasNonCDataAttributes
bool System::Xml::IDtdAttributeListInfo::get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasNonCDataAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeListInfo.LookupAttribute
::System::Xml::IDtdAttributeInfo* System::Xml::IDtdAttributeListInfo::LookupAttribute(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::LookupAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes
::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>* System::Xml::IDtdAttributeListInfo::LookupDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::LookupDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupDefaultAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_Prefix
::StringW System::Xml::IDtdAttributeInfo::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LocalName
::StringW System::Xml::IDtdAttributeInfo::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LineNumber
int System::Xml::IDtdAttributeInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LinePosition
int System::Xml::IDtdAttributeInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsNonCDataType
bool System::Xml::IDtdAttributeInfo::get_IsNonCDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsNonCDataType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNonCDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsDeclaredInExternal
bool System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsXmlAttribute
bool System::Xml::IDtdAttributeInfo::get_IsXmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsXmlAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsXmlAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueExpanded
::StringW System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueExpanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueTyped
::Il2CppObject* System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueTyped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_ValueLineNumber
int System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_ValueLinePosition
int System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueLinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdEntityInfo.get_Name
::StringW System::Xml::IDtdEntityInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsExternal
bool System::Xml::IDtdEntityInfo::get_IsExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsExternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsDeclaredInExternal
bool System::Xml::IDtdEntityInfo::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsUnparsedEntity
bool System::Xml::IDtdEntityInfo::get_IsUnparsedEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsUnparsedEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnparsedEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_IsParameterEntity
bool System::Xml::IDtdEntityInfo::get_IsParameterEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_IsParameterEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsParameterEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_BaseUriString
::StringW System::Xml::IDtdEntityInfo::get_BaseUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_BaseUriString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_DeclaredUriString
::StringW System::Xml::IDtdEntityInfo::get_DeclaredUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_DeclaredUriString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaredUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_SystemId
::StringW System::Xml::IDtdEntityInfo::get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_SystemId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_PublicId
::StringW System::Xml::IDtdEntityInfo::get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_PublicId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_Text
::StringW System::Xml::IDtdEntityInfo::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_Text");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_LineNumber
int System::Xml::IDtdEntityInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdEntityInfo.get_LinePosition
int System::Xml::IDtdEntityInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdEntityInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParser
#include "System/Xml/IDtdParser.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParser.ParseInternalDtd
::System::Xml::IDtdInfo* System::Xml::IDtdParser::ParseInternalDtd(::System::Xml::IDtdParserAdapter* adapter, bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParser::ParseInternalDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInternalDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adapter), ::il2cpp_utils::ExtractType(saveInternalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, adapter, saveInternalSubset);
}
// Autogenerated method: System.Xml.IDtdParser.ParseFreeFloatingDtd
::System::Xml::IDtdInfo* System::Xml::IDtdParser::ParseFreeFloatingDtd(::StringW baseUri, ::StringW docTypeName, ::StringW publicId, ::StringW systemId, ::StringW internalSubset, ::System::Xml::IDtdParserAdapter* adapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParser::ParseFreeFloatingDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFreeFloatingDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(docTypeName), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset), ::il2cpp_utils::ExtractType(adapter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
// Including type: System.Xml.LineInfo
#include "System/Xml/LineInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdParserAdapter.get_NameTable
::System::Xml::XmlNameTable* System::Xml::IDtdParserAdapter::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_NamespaceResolver
::System::Xml::IXmlNamespaceResolver* System::Xml::IDtdParserAdapter::get_NamespaceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IXmlNamespaceResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_BaseUri
::System::Uri* System::Xml::IDtdParserAdapter::get_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_BaseUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_ParsingBuffer
::ArrayW<::Il2CppChar> System::Xml::IDtdParserAdapter::get_ParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_ParsingBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_ParsingBufferLength
int System::Xml::IDtdParserAdapter::get_ParsingBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_ParsingBufferLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_CurrentPosition
int System::Xml::IDtdParserAdapter::get_CurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.set_CurrentPosition
void System::Xml::IDtdParserAdapter::set_CurrentPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::set_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_LineNo
int System::Xml::IDtdParserAdapter::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_LineNo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_LineStartPosition
int System::Xml::IDtdParserAdapter::get_LineStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_LineStartPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineStartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_IsEof
bool System::Xml::IDtdParserAdapter::get_IsEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_IsEof");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_EntityStackLength
int System::Xml::IDtdParserAdapter::get_EntityStackLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_EntityStackLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntityStackLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.get_IsEntityEolNormalized
bool System::Xml::IDtdParserAdapter::get_IsEntityEolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::get_IsEntityEolNormalized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEntityEolNormalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ReadData
int System::Xml::IDtdParserAdapter::ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ReadData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnNewLine
void System::Xml::IDtdParserAdapter::OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnNewLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseNumericCharRef
int System::Xml::IDtdParserAdapter::ParseNumericCharRef(::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseNumericCharRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumericCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseNamedCharRef
int System::Xml::IDtdParserAdapter::ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseNamedCharRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNamedCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParsePI
void System::Xml::IDtdParserAdapter::ParsePI(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParsePI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.ParseComment
void System::Xml::IDtdParserAdapter::ParseComment(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::ParseComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushEntity
bool System::Xml::IDtdParserAdapter::PushEntity(::System::Xml::IDtdEntityInfo* entity, ByRef<int> entityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity, byref(entityId));
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PopEntity
bool System::Xml::IDtdParserAdapter::PopEntity(ByRef<::System::Xml::IDtdEntityInfo*> oldEntity, ByRef<int> newEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PopEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Xml::IDtdEntityInfo*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(oldEntity), byref(newEntityId));
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushExternalSubset
bool System::Xml::IDtdParserAdapter::PushExternalSubset(::StringW systemId, ::StringW publicId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushExternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushExternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(publicId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, systemId, publicId);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.PushInternalDtd
void System::Xml::IDtdParserAdapter::PushInternalDtd(::StringW baseUri, ::StringW internalDtd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::PushInternalDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushInternalDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(internalDtd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, internalDtd);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnSystemId
void System::Xml::IDtdParserAdapter::OnSystemId(::StringW systemId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo systemLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnSystemId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(systemLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, systemId, keywordLineInfo, systemLiteralLineInfo);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.OnPublicId
void System::Xml::IDtdParserAdapter::OnPublicId(::StringW publicId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo publicLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::OnPublicId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(publicLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, keywordLineInfo, publicLiteralLineInfo);
}
// Autogenerated method: System.Xml.IDtdParserAdapter.Throw
void System::Xml::IDtdParserAdapter::Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdParserAdapter::Throw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
