// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.WriteState
#include "Newtonsoft/Json/WriteState.hpp"
// Including type: Newtonsoft.Json.JsonContainerType
#include "Newtonsoft/Json/JsonContainerType.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonToken
#include "Newtonsoft/Json/JsonToken.hpp"
// Including type: Newtonsoft.Json.JsonWriterException
#include "Newtonsoft/Json/JsonWriterException.hpp"
// Including type: Newtonsoft.Json.Utilities.PrimitiveTypeCode
#include "Newtonsoft/Json/Utilities/PrimitiveTypeCode.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State[][] StateArray
::ArrayW<::ArrayW<::Newtonsoft::Json::JsonWriter::State>> Newtonsoft::Json::JsonWriter::_get_StateArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::_get_StateArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<::Newtonsoft::Json::JsonWriter::State>>>("Newtonsoft.Json", "JsonWriter", "StateArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State[][] StateArray
void Newtonsoft::Json::JsonWriter::_set_StateArray(::ArrayW<::ArrayW<::Newtonsoft::Json::JsonWriter::State>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::_set_StateArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter", "StateArray", value));
}
// Autogenerated static field getter
// Get static field: static readonly Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State[][] StateArrayTempate
::ArrayW<::ArrayW<::Newtonsoft::Json::JsonWriter::State>> Newtonsoft::Json::JsonWriter::_get_StateArrayTempate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::_get_StateArrayTempate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<::Newtonsoft::Json::JsonWriter::State>>>("Newtonsoft.Json", "JsonWriter", "StateArrayTempate"));
}
// Autogenerated static field setter
// Set static field: static readonly Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State[][] StateArrayTempate
void Newtonsoft::Json::JsonWriter::_set_StateArrayTempate(::ArrayW<::ArrayW<::Newtonsoft::Json::JsonWriter::State>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::_set_StateArrayTempate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter", "StateArrayTempate", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.JsonPosition> _stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>*& Newtonsoft::Json::JsonWriter::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonPosition _currentPosition
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonPosition& Newtonsoft::Json::JsonWriter::dyn__currentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__currentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPosition"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonPosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State _currentState
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonWriter::State& Newtonsoft::Json::JsonWriter::dyn__currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentState"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonWriter::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Formatting _formatting
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Formatting& Newtonsoft::Json::JsonWriter::dyn__formatting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__formatting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formatting"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Formatting*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CloseOutput>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonWriter::dyn_$CloseOutput$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn_$CloseOutput$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CloseOutput>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.DateFormatHandling _dateFormatHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::DateFormatHandling& Newtonsoft::Json::JsonWriter::dyn__dateFormatHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__dateFormatHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateFormatHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::DateFormatHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.DateTimeZoneHandling _dateTimeZoneHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::DateTimeZoneHandling& Newtonsoft::Json::JsonWriter::dyn__dateTimeZoneHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__dateTimeZoneHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeZoneHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::DateTimeZoneHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.StringEscapeHandling _stringEscapeHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::StringEscapeHandling& Newtonsoft::Json::JsonWriter::dyn__stringEscapeHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__stringEscapeHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringEscapeHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::StringEscapeHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.FloatFormatHandling _floatFormatHandling
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::FloatFormatHandling& Newtonsoft::Json::JsonWriter::dyn__floatFormatHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__floatFormatHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatFormatHandling"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::FloatFormatHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dateFormatString
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::JsonWriter::dyn__dateFormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__dateFormatString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateFormatString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& Newtonsoft::Json::JsonWriter::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_CloseOutput
bool Newtonsoft::Json::JsonWriter::get_CloseOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_CloseOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloseOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.set_CloseOutput
void Newtonsoft::Json::JsonWriter::set_CloseOutput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::set_CloseOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CloseOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_Top
int Newtonsoft::Json::JsonWriter::get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_Top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_WriteState
::Newtonsoft::Json::WriteState Newtonsoft::Json::JsonWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_WriteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_ContainerPath
::StringW Newtonsoft::Json::JsonWriter::get_ContainerPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_ContainerPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainerPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_Path
::StringW Newtonsoft::Json::JsonWriter::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_Formatting
::Newtonsoft::Json::Formatting Newtonsoft::Json::JsonWriter::get_Formatting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_Formatting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Formatting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Formatting, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.set_Formatting
void Newtonsoft::Json::JsonWriter::set_Formatting(::Newtonsoft::Json::Formatting value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::set_Formatting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Formatting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_DateFormatHandling
::Newtonsoft::Json::DateFormatHandling Newtonsoft::Json::JsonWriter::get_DateFormatHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_DateFormatHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateFormatHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::DateFormatHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.set_DateFormatHandling
void Newtonsoft::Json::JsonWriter::set_DateFormatHandling(::Newtonsoft::Json::DateFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::set_DateFormatHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateFormatHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_DateTimeZoneHandling
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::JsonWriter::get_DateTimeZoneHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_DateTimeZoneHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeZoneHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::DateTimeZoneHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.set_DateTimeZoneHandling
void Newtonsoft::Json::JsonWriter::set_DateTimeZoneHandling(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::set_DateTimeZoneHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateTimeZoneHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_StringEscapeHandling
::Newtonsoft::Json::StringEscapeHandling Newtonsoft::Json::JsonWriter::get_StringEscapeHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_StringEscapeHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringEscapeHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::StringEscapeHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.set_StringEscapeHandling
void Newtonsoft::Json::JsonWriter::set_StringEscapeHandling(::Newtonsoft::Json::StringEscapeHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::set_StringEscapeHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StringEscapeHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_FloatFormatHandling
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::JsonWriter::get_FloatFormatHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_FloatFormatHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FloatFormatHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::FloatFormatHandling, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.set_FloatFormatHandling
void Newtonsoft::Json::JsonWriter::set_FloatFormatHandling(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::set_FloatFormatHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FloatFormatHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_DateFormatString
::StringW Newtonsoft::Json::JsonWriter::get_DateFormatString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_DateFormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateFormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.set_DateFormatString
void Newtonsoft::Json::JsonWriter::set_DateFormatString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::set_DateFormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DateFormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.get_Culture
::System::Globalization::CultureInfo* Newtonsoft::Json::JsonWriter::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.set_Culture
void Newtonsoft::Json::JsonWriter::set_Culture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::set_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter..cctor
void Newtonsoft::Json::JsonWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.BuildStateArray
::ArrayW<::ArrayW<::Newtonsoft::Json::JsonWriter::State>> Newtonsoft::Json::JsonWriter::BuildStateArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::BuildStateArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonWriter", "BuildStateArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::ArrayW<::Newtonsoft::Json::JsonWriter::State>>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.OnStringEscapeHandlingChanged
void Newtonsoft::Json::JsonWriter::OnStringEscapeHandlingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::OnStringEscapeHandlingChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStringEscapeHandlingChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue
void Newtonsoft::Json::JsonWriter::UpdateScopeWithFinishedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::UpdateScopeWithFinishedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScopeWithFinishedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.Push
void Newtonsoft::Json::JsonWriter::Push(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.Pop
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonWriter::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonContainerType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.Peek
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonWriter::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::Peek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonContainerType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.Close
void Newtonsoft::Json::JsonWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteStartObject
void Newtonsoft::Json::JsonWriter::WriteStartObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteStartObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteEndObject
void Newtonsoft::Json::JsonWriter::WriteEndObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteEndObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteStartArray
void Newtonsoft::Json::JsonWriter::WriteStartArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteStartArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteEndArray
void Newtonsoft::Json::JsonWriter::WriteEndArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteEndArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteStartConstructor
void Newtonsoft::Json::JsonWriter::WriteStartConstructor(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteStartConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteEndConstructor
void Newtonsoft::Json::JsonWriter::WriteEndConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteEndConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WritePropertyName
void Newtonsoft::Json::JsonWriter::WritePropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WritePropertyName
void Newtonsoft::Json::JsonWriter::WritePropertyName(::StringW name, bool escape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(escape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, escape);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteEnd
void Newtonsoft::Json::JsonWriter::WriteEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteToken
void Newtonsoft::Json::JsonWriter::WriteToken(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteToken
void Newtonsoft::Json::JsonWriter::WriteToken(::Newtonsoft::Json::JsonReader* reader, bool writeChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(writeChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, writeChildren);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteToken
void Newtonsoft::Json::JsonWriter::WriteToken(::Newtonsoft::Json::JsonToken token, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteToken
void Newtonsoft::Json::JsonWriter::WriteToken(::Newtonsoft::Json::JsonReader* reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(writeChildren), ::il2cpp_utils::ExtractType(writeDateConstructorAsDate), ::il2cpp_utils::ExtractType(writeComments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, writeChildren, writeDateConstructorAsDate, writeComments);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteConstructorDate
void Newtonsoft::Json::JsonWriter::WriteConstructorDate(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteConstructorDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteConstructorDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteEnd
void Newtonsoft::Json::JsonWriter::WriteEnd(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.AutoCompleteAll
void Newtonsoft::Json::JsonWriter::AutoCompleteAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::AutoCompleteAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoCompleteAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.GetCloseTokenForType
::Newtonsoft::Json::JsonToken Newtonsoft::Json::JsonWriter::GetCloseTokenForType(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::GetCloseTokenForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloseTokenForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonToken, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.AutoCompleteClose
void Newtonsoft::Json::JsonWriter::AutoCompleteClose(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::AutoCompleteClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoCompleteClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteEnd
void Newtonsoft::Json::JsonWriter::WriteEnd(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteIndent
void Newtonsoft::Json::JsonWriter::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteIndent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValueDelimiter
void Newtonsoft::Json::JsonWriter::WriteValueDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValueDelimiter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValueDelimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteIndentSpace
void Newtonsoft::Json::JsonWriter::WriteIndentSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteIndentSpace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndentSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.AutoComplete
void Newtonsoft::Json::JsonWriter::AutoComplete(::Newtonsoft::Json::JsonToken tokenBeingWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::AutoComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenBeingWritten)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tokenBeingWritten);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteNull
void Newtonsoft::Json::JsonWriter::WriteNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteNull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteUndefined
void Newtonsoft::Json::JsonWriter::WriteUndefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteUndefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUndefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteRaw
void Newtonsoft::Json::JsonWriter::WriteRaw(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteRawValue
void Newtonsoft::Json::JsonWriter::WriteRawValue(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteRawValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<::System::Decimal> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<::System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteComment
void Newtonsoft::Json::JsonWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose
void Newtonsoft::Json::JsonWriter::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.Dispose
void Newtonsoft::Json::JsonWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.WriteValue
void Newtonsoft::Json::JsonWriter::WriteValue(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Utilities::PrimitiveTypeCode typeCode, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::WriteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonWriter", "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, typeCode, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.CreateUnsupportedTypeException
::Newtonsoft::Json::JsonWriterException* Newtonsoft::Json::JsonWriter::CreateUnsupportedTypeException(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::CreateUnsupportedTypeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonWriter", "CreateUnsupportedTypeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonWriterException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, value);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.InternalWriteEnd
void Newtonsoft::Json::JsonWriter::InternalWriteEnd(::Newtonsoft::Json::JsonContainerType container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::InternalWriteEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.InternalWritePropertyName
void Newtonsoft::Json::JsonWriter::InternalWritePropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::InternalWritePropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.InternalWriteRaw
void Newtonsoft::Json::JsonWriter::InternalWriteRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::InternalWriteRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.InternalWriteStart
void Newtonsoft::Json::JsonWriter::InternalWriteStart(::Newtonsoft::Json::JsonToken token, ::Newtonsoft::Json::JsonContainerType container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::InternalWriteStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token, container);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.InternalWriteValue
void Newtonsoft::Json::JsonWriter::InternalWriteValue(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::InternalWriteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.JsonWriter.InternalWriteComment
void Newtonsoft::Json::JsonWriter::InternalWriteComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::InternalWriteComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State
#include "Newtonsoft/Json/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Start
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "Start"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Start
void Newtonsoft::Json::JsonWriter::State::_set_Start(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Property
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "Property"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Property
void Newtonsoft::Json::JsonWriter::State::_set_Property(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State ObjectStart
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_ObjectStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_ObjectStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "ObjectStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State ObjectStart
void Newtonsoft::Json::JsonWriter::State::_set_ObjectStart(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_ObjectStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "ObjectStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Object
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Object
void Newtonsoft::Json::JsonWriter::State::_set_Object(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State ArrayStart
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_ArrayStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_ArrayStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "ArrayStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State ArrayStart
void Newtonsoft::Json::JsonWriter::State::_set_ArrayStart(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_ArrayStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "ArrayStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Array
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Array
void Newtonsoft::Json::JsonWriter::State::_set_Array(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State ConstructorStart
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_ConstructorStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_ConstructorStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "ConstructorStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State ConstructorStart
void Newtonsoft::Json::JsonWriter::State::_set_ConstructorStart(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_ConstructorStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "ConstructorStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Constructor
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Constructor
void Newtonsoft::Json::JsonWriter::State::_set_Constructor(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Closed
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Closed
void Newtonsoft::Json::JsonWriter::State::_set_Closed(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "Closed", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Error
::Newtonsoft::Json::JsonWriter::State Newtonsoft::Json::JsonWriter::State::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonWriter::State>("Newtonsoft.Json", "JsonWriter/State", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonWriter/Newtonsoft.Json.State Error
void Newtonsoft::Json::JsonWriter::State::_set_Error(::Newtonsoft::Json::JsonWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonWriter/State", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonWriter::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonWriter::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.WriteState
#include "Newtonsoft/Json/WriteState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.WriteState Error
::Newtonsoft::Json::WriteState Newtonsoft::Json::WriteState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::WriteState>("Newtonsoft.Json", "WriteState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.WriteState Error
void Newtonsoft::Json::WriteState::_set_Error(::Newtonsoft::Json::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "WriteState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.WriteState Closed
::Newtonsoft::Json::WriteState Newtonsoft::Json::WriteState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::WriteState>("Newtonsoft.Json", "WriteState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.WriteState Closed
void Newtonsoft::Json::WriteState::_set_Closed(::Newtonsoft::Json::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "WriteState", "Closed", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.WriteState Object
::Newtonsoft::Json::WriteState Newtonsoft::Json::WriteState::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::WriteState>("Newtonsoft.Json", "WriteState", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.WriteState Object
void Newtonsoft::Json::WriteState::_set_Object(::Newtonsoft::Json::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "WriteState", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.WriteState Array
::Newtonsoft::Json::WriteState Newtonsoft::Json::WriteState::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::WriteState>("Newtonsoft.Json", "WriteState", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.WriteState Array
void Newtonsoft::Json::WriteState::_set_Array(::Newtonsoft::Json::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "WriteState", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.WriteState Constructor
::Newtonsoft::Json::WriteState Newtonsoft::Json::WriteState::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::WriteState>("Newtonsoft.Json", "WriteState", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.WriteState Constructor
void Newtonsoft::Json::WriteState::_set_Constructor(::Newtonsoft::Json::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "WriteState", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.WriteState Property
::Newtonsoft::Json::WriteState Newtonsoft::Json::WriteState::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::WriteState>("Newtonsoft.Json", "WriteState", "Property"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.WriteState Property
void Newtonsoft::Json::WriteState::_set_Property(::Newtonsoft::Json::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "WriteState", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.WriteState Start
::Newtonsoft::Json::WriteState Newtonsoft::Json::WriteState::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::WriteState>("Newtonsoft.Json", "WriteState", "Start"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.WriteState Start
void Newtonsoft::Json::WriteState::_set_Start(::Newtonsoft::Json::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "WriteState", "Start", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::WriteState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::WriteState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ParserTimeZone
#include "Newtonsoft/Json/Utilities/ParserTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ParserTimeZone Unspecified
::Newtonsoft::Json::Utilities::ParserTimeZone Newtonsoft::Json::Utilities::ParserTimeZone::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ParserTimeZone>("Newtonsoft.Json.Utilities", "ParserTimeZone", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ParserTimeZone Unspecified
void Newtonsoft::Json::Utilities::ParserTimeZone::_set_Unspecified(::Newtonsoft::Json::Utilities::ParserTimeZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ParserTimeZone", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ParserTimeZone Utc
::Newtonsoft::Json::Utilities::ParserTimeZone Newtonsoft::Json::Utilities::ParserTimeZone::_get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::_get_Utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ParserTimeZone>("Newtonsoft.Json.Utilities", "ParserTimeZone", "Utc"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ParserTimeZone Utc
void Newtonsoft::Json::Utilities::ParserTimeZone::_set_Utc(::Newtonsoft::Json::Utilities::ParserTimeZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::_set_Utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ParserTimeZone", "Utc", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ParserTimeZone LocalWestOfUtc
::Newtonsoft::Json::Utilities::ParserTimeZone Newtonsoft::Json::Utilities::ParserTimeZone::_get_LocalWestOfUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::_get_LocalWestOfUtc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ParserTimeZone>("Newtonsoft.Json.Utilities", "ParserTimeZone", "LocalWestOfUtc"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ParserTimeZone LocalWestOfUtc
void Newtonsoft::Json::Utilities::ParserTimeZone::_set_LocalWestOfUtc(::Newtonsoft::Json::Utilities::ParserTimeZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::_set_LocalWestOfUtc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ParserTimeZone", "LocalWestOfUtc", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ParserTimeZone LocalEastOfUtc
::Newtonsoft::Json::Utilities::ParserTimeZone Newtonsoft::Json::Utilities::ParserTimeZone::_get_LocalEastOfUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::_get_LocalEastOfUtc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ParserTimeZone>("Newtonsoft.Json.Utilities", "ParserTimeZone", "LocalEastOfUtc"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ParserTimeZone LocalEastOfUtc
void Newtonsoft::Json::Utilities::ParserTimeZone::_set_LocalEastOfUtc(::Newtonsoft::Json::Utilities::ParserTimeZone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::_set_LocalEastOfUtc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ParserTimeZone", "LocalEastOfUtc", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::ParserTimeZone::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParserTimeZone::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.DateTimeParser
#include "Newtonsoft/Json/Utilities/DateTimeParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] Power10
::ArrayW<int> Newtonsoft::Json::Utilities::DateTimeParser::_get_Power10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Power10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Newtonsoft.Json.Utilities", "DateTimeParser", "Power10"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] Power10
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Power10(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Power10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Power10", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy
int Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_
int Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM
int Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_MM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_MM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_MM"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_MM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_MM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_MM", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_
int Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_MM_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_MM_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_MM_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_MM_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_MM_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_MM_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_dd
int Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_MM_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_MM_dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_MM_dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_dd
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_MM_dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_MM_dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_MM_dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_ddT
int Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_MM_ddT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Lzyyyy_MM_ddT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_MM_ddT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_ddT
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_MM_ddT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Lzyyyy_MM_ddT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Lzyyyy_MM_ddT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH
int Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH
void Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_
int Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_
void Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm
int Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH_mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH_mm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH_mm"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm
void Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH_mm(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH_mm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH_mm", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm_
int Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH_mm_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH_mm_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH_mm_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm_
void Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH_mm_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH_mm_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH_mm_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm_ss
int Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH_mm_ss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_LzHH_mm_ss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH_mm_ss"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm_ss
void Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH_mm_ss(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_LzHH_mm_ss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "LzHH_mm_ss", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_
int Newtonsoft::Json::Utilities::DateTimeParser::_get_Lz_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Lz_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "Lz_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Lz_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Lz_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Lz_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz
int Newtonsoft::Json::Utilities::DateTimeParser::_get_Lz_zz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_get_Lz_zz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "DateTimeParser", "Lz_zz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz
void Newtonsoft::Json::Utilities::DateTimeParser::_set_Lz_zz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::_set_Lz_zz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeParser", "Lz_zz", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Year
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_Year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_Year");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Month
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_Month");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Day
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_Day");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Hour
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_Hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_Hour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Minute
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_Minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_Minute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Minute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Second
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_Second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_Second");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Second"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Fraction
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_Fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_Fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fraction"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ZoneHour
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_ZoneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_ZoneHour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ZoneHour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ZoneMinute
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn_ZoneMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_ZoneMinute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ZoneMinute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.ParserTimeZone Zone
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ParserTimeZone& Newtonsoft::Json::Utilities::DateTimeParser::dyn_Zone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn_Zone");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Zone"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ParserTimeZone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _text
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Newtonsoft::Json::Utilities::DateTimeParser::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn__text");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _end
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::DateTimeParser::dyn__end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::dyn__end");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser..cctor
void Newtonsoft::Json::Utilities::DateTimeParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser.Parse
bool Newtonsoft::Json::Utilities::DateTimeParser::Parse(::ArrayW<::Il2CppChar> text, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, startIndex, length);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser.ParseDate
bool Newtonsoft::Json::Utilities::DateTimeParser::ParseDate(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::ParseDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser.ParseTimeAndZoneAndWhitespace
bool Newtonsoft::Json::Utilities::DateTimeParser::ParseTimeAndZoneAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::ParseTimeAndZoneAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTimeAndZoneAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser.ParseTime
bool Newtonsoft::Json::Utilities::DateTimeParser::ParseTime(ByRef<int> start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::ParseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(start));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser.ParseZone
bool Newtonsoft::Json::Utilities::DateTimeParser::ParseZone(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::ParseZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser.Parse4Digit
bool Newtonsoft::Json::Utilities::DateTimeParser::Parse4Digit(int start, ByRef<int> num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::Parse4Digit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse4Digit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(num));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser.Parse2Digit
bool Newtonsoft::Json::Utilities::DateTimeParser::Parse2Digit(int start, ByRef<int> num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::Parse2Digit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse2Digit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(num));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeParser.ParseChar
bool Newtonsoft::Json::Utilities::DateTimeParser::ParseChar(int start, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeParser::ParseChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, ch);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.Base64Encoder
#include "Newtonsoft/Json/Utilities/Base64Encoder.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char[] _charsLine
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Newtonsoft::Json::Utilities::Base64Encoder::dyn__charsLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::Base64Encoder::dyn__charsLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charsLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.TextWriter _writer
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& Newtonsoft::Json::Utilities::Base64Encoder::dyn__writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::Base64Encoder::dyn__writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writer"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _leftOverBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Newtonsoft::Json::Utilities::Base64Encoder::dyn__leftOverBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::Base64Encoder::dyn__leftOverBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftOverBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _leftOverBytesCount
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::Base64Encoder::dyn__leftOverBytesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::Base64Encoder::dyn__leftOverBytesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftOverBytesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.Base64Encoder.Encode
void Newtonsoft::Json::Utilities::Base64Encoder::Encode(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::Base64Encoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: Newtonsoft.Json.Utilities.Base64Encoder.Flush
void Newtonsoft::Json::Utilities::Base64Encoder::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::Base64Encoder::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.Base64Encoder.WriteChars
void Newtonsoft::Json::Utilities::Base64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::Base64Encoder::WriteChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.JsonTokenUtils
#include "Newtonsoft/Json/Utilities/JsonTokenUtils.hpp"
// Including type: Newtonsoft.Json.JsonToken
#include "Newtonsoft/Json/JsonToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.JsonTokenUtils.IsEndToken
bool Newtonsoft::Json::Utilities::JsonTokenUtils::IsEndToken(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JsonTokenUtils::IsEndToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JsonTokenUtils", "IsEndToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken
bool Newtonsoft::Json::Utilities::JsonTokenUtils::IsStartToken(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JsonTokenUtils::IsStartToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JsonTokenUtils", "IsStartToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken
bool Newtonsoft::Json::Utilities::JsonTokenUtils::IsPrimitiveToken(::Newtonsoft::Json::JsonToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JsonTokenUtils::IsPrimitiveToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JsonTokenUtils", "IsPrimitiveToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.PropertyNameTable
#include "Newtonsoft/Json/Utilities/PropertyNameTable.hpp"
// Including type: Newtonsoft.Json.Utilities.PropertyNameTable/Newtonsoft.Json.Utilities.Entry
#include "Newtonsoft/Json/Utilities/PropertyNameTable_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 HashCodeRandomizer
int Newtonsoft::Json::Utilities::PropertyNameTable::_get_HashCodeRandomizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::_get_HashCodeRandomizer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Newtonsoft.Json.Utilities", "PropertyNameTable", "HashCodeRandomizer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 HashCodeRandomizer
void Newtonsoft::Json::Utilities::PropertyNameTable::_set_HashCodeRandomizer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::_set_HashCodeRandomizer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PropertyNameTable", "HashCodeRandomizer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _count
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::PropertyNameTable::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.PropertyNameTable/Newtonsoft.Json.Utilities.Entry[] _entries
[[deprecated("Use field access instead!")]] ::ArrayW<::Newtonsoft::Json::Utilities::PropertyNameTable::Entry*>& Newtonsoft::Json::Utilities::PropertyNameTable::dyn__entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::dyn__entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entries"))->offset;
  return *reinterpret_cast<::ArrayW<::Newtonsoft::Json::Utilities::PropertyNameTable::Entry*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _mask
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::PropertyNameTable::dyn__mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::dyn__mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.PropertyNameTable..cctor
void Newtonsoft::Json::Utilities::PropertyNameTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "PropertyNameTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.PropertyNameTable.Get
::StringW Newtonsoft::Json::Utilities::PropertyNameTable::Get(::ArrayW<::Il2CppChar> key, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key, start, length);
}
// Autogenerated method: Newtonsoft.Json.Utilities.PropertyNameTable.Add
::StringW Newtonsoft::Json::Utilities::PropertyNameTable::Add(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key);
}
// Autogenerated method: Newtonsoft.Json.Utilities.PropertyNameTable.AddEntry
::StringW Newtonsoft::Json::Utilities::PropertyNameTable::AddEntry(::StringW str, int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::AddEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str, hashCode);
}
// Autogenerated method: Newtonsoft.Json.Utilities.PropertyNameTable.Grow
void Newtonsoft::Json::Utilities::PropertyNameTable::Grow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.PropertyNameTable.TextEquals
bool Newtonsoft::Json::Utilities::PropertyNameTable::TextEquals(::StringW str1, ::ArrayW<::Il2CppChar> str2, int str2Start, int str2Length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::TextEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "PropertyNameTable", "TextEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(str2Start), ::il2cpp_utils::ExtractType(str2Length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str1, str2, str2Start, str2Length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.PropertyNameTable/Newtonsoft.Json.Utilities.Entry
#include "Newtonsoft/Json/Utilities/PropertyNameTable_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String Value
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Utilities::PropertyNameTable::Entry::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::Entry::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 HashCode
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::PropertyNameTable::Entry::dyn_HashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::Entry::dyn_HashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.Utilities.PropertyNameTable/Newtonsoft.Json.Utilities.Entry Next
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::PropertyNameTable::Entry*& Newtonsoft::Json::Utilities::PropertyNameTable::Entry::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PropertyNameTable::Entry::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::PropertyNameTable::Entry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionDelegateFactory
#include "Newtonsoft/Json/Utilities/ReflectionDelegateFactory.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::ReflectionDelegateFactory::CreateParameterizedConstructor(::System::Reflection::MethodBase* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionDelegateFactory::CreateParameterizedConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameterizedConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass3_0
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass3_0.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass4_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass4_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass5_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass5_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass6_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass6_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass7_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass7_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass8_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass8_0_1.hpp"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass9_0`1
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass9_0_1.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory _instance
::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory*>("Newtonsoft.Json.Utilities", "LateBoundReflectionDelegateFactory", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory _instance
void Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_set__instance(::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "LateBoundReflectionDelegateFactory", "_instance", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.get_Instance
::Newtonsoft::Json::Utilities::ReflectionDelegateFactory* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "LateBoundReflectionDelegateFactory", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionDelegateFactory*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory..cctor
void Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "LateBoundReflectionDelegateFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory.CreateParameterizedConstructor
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::CreateParameterizedConstructor(::System::Reflection::MethodBase* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::CreateParameterizedConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParameterizedConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass3_0
#include "Newtonsoft/Json/Utilities/LateBoundReflectionDelegateFactory_--c__DisplayClass3_0.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.ConstructorInfo c
[[deprecated("Use field access instead!")]] ::System::Reflection::ConstructorInfo*& Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MethodBase method
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodBase*& Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass3_0.<CreateParameterizedConstructor>b__0
::Il2CppObject* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::$CreateParameterizedConstructor$b__0(::ArrayW<::Il2CppObject*> a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::<CreateParameterizedConstructor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateParameterizedConstructor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, a);
}
// Autogenerated method: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory/Newtonsoft.Json.Utilities.<>c__DisplayClass3_0.<CreateParameterizedConstructor>b__1
::Il2CppObject* Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::$CreateParameterizedConstructor$b__1(::ArrayW<::Il2CppObject*> a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::LateBoundReflectionDelegateFactory::$$c__DisplayClass3_0::<CreateParameterizedConstructor>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateParameterizedConstructor>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, a);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionMember
#include "Newtonsoft/Json/Utilities/ReflectionMember.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <MemberType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Utilities::ReflectionMember::dyn_$MemberType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::dyn_$MemberType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MemberType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.Object> <Getter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionMember::dyn_$Getter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::dyn_$Getter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Getter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Object,System.Object> <Setter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionMember::dyn_$Setter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::dyn_$Setter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Setter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.get_MemberType
::System::Type* Newtonsoft::Json::Utilities::ReflectionMember::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::get_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.set_MemberType
void Newtonsoft::Json::Utilities::ReflectionMember::set_MemberType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::set_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.get_Getter
::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::ReflectionMember::get_Getter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::get_Getter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Getter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.set_Getter
void Newtonsoft::Json::Utilities::ReflectionMember::set_Getter(::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::set_Getter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Getter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionMember.set_Setter
void Newtonsoft::Json::Utilities::ReflectionMember::set_Setter(::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionMember::set_Setter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Setter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_0
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass13_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_1
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass13_1.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_2
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass13_2.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionMember
#include "Newtonsoft/Json/Utilities/ReflectionMember.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> <Creator>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionObject::dyn_$Creator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::dyn_$Creator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Creator>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IDictionary`2<System.String,Newtonsoft.Json.Utilities.ReflectionMember> <Members>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>*& Newtonsoft::Json::Utilities::ReflectionObject::dyn_$Members$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::dyn_$Members$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Members>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.get_Creator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::ReflectionObject::get_Creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::get_Creator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Creator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.set_Creator
void Newtonsoft::Json::Utilities::ReflectionObject::set_Creator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::set_Creator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Creator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.get_Members
::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>* Newtonsoft::Json::Utilities::ReflectionObject::get_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::get_Members");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Members", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.set_Members
void Newtonsoft::Json::Utilities::ReflectionObject::set_Members(::System::Collections::Generic::IDictionary_2<::StringW, ::Newtonsoft::Json::Utilities::ReflectionMember*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::set_Members");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Members", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.GetValue
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionObject::GetValue(::Il2CppObject* target, ::StringW member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, target, member);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.GetType
::System::Type* Newtonsoft::Json::Utilities::ReflectionObject::GetType(::StringW member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.Create
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Utilities::ReflectionObject::Create(::System::Type* t, ::ArrayW<::StringW> memberNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionObject", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(memberNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, memberNames);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject.Create
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Utilities::ReflectionObject::Create(::System::Type* t, ::System::Reflection::MethodBase* creator, ::ArrayW<::StringW> memberNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionObject", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(creator), ::il2cpp_utils::ExtractType(memberNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, creator, memberNames);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_0
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass13_0.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Object> ctor
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_0::dyn_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_0::dyn_ctor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctor"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_0.<Create>b__0
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_0::$Create$b__0(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_0::<Create>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Create>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_1
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass13_1.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> call
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_1::dyn_call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_1::dyn_call");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "call"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_1.<Create>b__1
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_1::$Create$b__1(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_1::<Create>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Create>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_2
#include "Newtonsoft/Json/Utilities/ReflectionObject_--c__DisplayClass13_2.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> call
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_2::dyn_call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_2::dyn_call");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "call"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionObject/Newtonsoft.Json.Utilities.<>c__DisplayClass13_2.<Create>b__2
void Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_2::$Create$b__2(::Il2CppObject* target, ::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionObject::$$c__DisplayClass13_2::<Create>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Create>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, arg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.StringReference
#include "Newtonsoft/Json/Utilities/StringReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char[] _chars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Newtonsoft::Json::Utilities::StringReference::dyn__chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::dyn__chars");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _startIndex
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::StringReference::dyn__startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::dyn__startIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _length
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::StringReference::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::dyn__length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.get_Item
::Il2CppChar Newtonsoft::Json::Utilities::StringReference::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.get_Chars
::ArrayW<::Il2CppChar> Newtonsoft::Json::Utilities::StringReference::get_Chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::get_Chars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Chars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.get_StartIndex
int Newtonsoft::Json::Utilities::StringReference::get_StartIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::get_StartIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.get_Length
int Newtonsoft::Json::Utilities::StringReference::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference..ctor
// ABORTED elsewhere.  Newtonsoft::Json::Utilities::StringReference::StringReference(::ArrayW<::Il2CppChar> chars, int startIndex, int length)
// Autogenerated method: Newtonsoft.Json.Utilities.StringReference.ToString
::StringW Newtonsoft::Json::Utilities::StringReference::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReference::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.StringReferenceExtensions
#include "Newtonsoft/Json/Utilities/StringReferenceExtensions.hpp"
// Including type: Newtonsoft.Json.Utilities.StringReference
#include "Newtonsoft/Json/Utilities/StringReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.StringReferenceExtensions.IndexOf
int Newtonsoft::Json::Utilities::StringReferenceExtensions::IndexOf(::Newtonsoft::Json::Utilities::StringReference s, ::Il2CppChar c, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReferenceExtensions::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringReferenceExtensions", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, c, startIndex, length);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReferenceExtensions.StartsWith
bool Newtonsoft::Json::Utilities::StringReferenceExtensions::StartsWith(::Newtonsoft::Json::Utilities::StringReference s, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReferenceExtensions::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringReferenceExtensions", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, text);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringReferenceExtensions.EndsWith
bool Newtonsoft::Json::Utilities::StringReferenceExtensions::EndsWith(::Newtonsoft::Json::Utilities::StringReference s, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringReferenceExtensions::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringReferenceExtensions", "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.PrimitiveTypeCode
#include "Newtonsoft/Json/Utilities/PrimitiveTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Empty
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Empty
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Empty(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Object
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Object
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Object(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Char
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Char"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Char
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Char(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode CharNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_CharNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_CharNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "CharNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode CharNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_CharNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_CharNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "CharNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Boolean
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Boolean
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Boolean(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode BooleanNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_BooleanNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_BooleanNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "BooleanNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode BooleanNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_BooleanNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_BooleanNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "BooleanNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode SByte
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_SByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_SByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "SByte"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode SByte
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_SByte(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_SByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "SByte", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode SByteNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_SByteNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_SByteNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "SByteNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode SByteNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_SByteNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_SByteNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "SByteNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int16
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int16
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int16(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int16Nullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int16Nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int16Nullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int16Nullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int16Nullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int16Nullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int16Nullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int16Nullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt16
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt16
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt16(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt16Nullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt16Nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt16Nullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt16Nullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt16Nullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt16Nullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt16Nullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt16Nullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int32
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int32
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int32(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int32Nullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int32Nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int32Nullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int32Nullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int32Nullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int32Nullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int32Nullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int32Nullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Byte
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Byte"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Byte
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Byte(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Byte", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode ByteNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_ByteNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_ByteNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "ByteNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode ByteNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_ByteNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_ByteNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "ByteNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt32
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt32
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt32(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt32Nullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt32Nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt32Nullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt32Nullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt32Nullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt32Nullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt32Nullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt32Nullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int64
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int64
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int64(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int64Nullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int64Nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Int64Nullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int64Nullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Int64Nullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int64Nullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Int64Nullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Int64Nullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt64
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt64
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt64(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt64Nullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt64Nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_UInt64Nullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt64Nullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode UInt64Nullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt64Nullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_UInt64Nullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "UInt64Nullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Single
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Single"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Single
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Single(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode SingleNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_SingleNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_SingleNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "SingleNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode SingleNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_SingleNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_SingleNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "SingleNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Double
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Double
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Double(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DoubleNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DoubleNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DoubleNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DoubleNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DoubleNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DoubleNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DoubleNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DoubleNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTime
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTime
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DateTime(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DateTimeNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DateTimeNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DateTimeNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DateTimeNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DateTimeNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DateTimeNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeOffset
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeOffset
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DateTimeOffset(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DateTimeOffset", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeOffsetNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DateTimeOffsetNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DateTimeOffsetNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DateTimeOffsetNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DateTimeOffsetNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DateTimeOffsetNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DateTimeOffsetNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DateTimeOffsetNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Decimal
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Decimal
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Decimal(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DecimalNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DecimalNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DecimalNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DecimalNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DecimalNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DecimalNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DecimalNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DecimalNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Guid
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Guid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Guid
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Guid(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Guid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode GuidNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_GuidNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_GuidNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "GuidNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode GuidNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_GuidNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_GuidNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "GuidNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode TimeSpan
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_TimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_TimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "TimeSpan"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode TimeSpan
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_TimeSpan(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_TimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "TimeSpan", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode TimeSpanNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_TimeSpanNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_TimeSpanNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "TimeSpanNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode TimeSpanNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_TimeSpanNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_TimeSpanNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "TimeSpanNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode BigInteger
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_BigInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_BigInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "BigInteger"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode BigInteger
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_BigInteger(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_BigInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "BigInteger", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode BigIntegerNullable
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_BigIntegerNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_BigIntegerNullable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "BigIntegerNullable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode BigIntegerNullable
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_BigIntegerNullable(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_BigIntegerNullable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "BigIntegerNullable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Uri
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Uri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Uri"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Uri
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Uri(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Uri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Uri", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode String
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode String
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_String(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Bytes
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_Bytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Bytes"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode Bytes
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Bytes(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_Bytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "Bytes", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DBNull
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DBNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_get_DBNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::PrimitiveTypeCode>("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DBNull"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.PrimitiveTypeCode DBNull
void Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DBNull(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::_set_DBNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "PrimitiveTypeCode", "DBNull", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::PrimitiveTypeCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::PrimitiveTypeCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.TypeInformation
#include "Newtonsoft/Json/Utilities/TypeInformation.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Utilities::TypeInformation::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeInformation::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.PrimitiveTypeCode <TypeCode>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::PrimitiveTypeCode& Newtonsoft::Json::Utilities::TypeInformation::dyn_$TypeCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeInformation::dyn_$TypeCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeCode>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::PrimitiveTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeInformation.get_Type
::System::Type* Newtonsoft::Json::Utilities::TypeInformation::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeInformation::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeInformation.set_Type
void Newtonsoft::Json::Utilities::TypeInformation::set_Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeInformation::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeInformation.get_TypeCode
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::TypeInformation::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeInformation::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::PrimitiveTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeInformation.set_TypeCode
void Newtonsoft::Json::Utilities::TypeInformation::set_TypeCode(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeInformation::set_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ParseResult
#include "Newtonsoft/Json/Utilities/ParseResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ParseResult None
::Newtonsoft::Json::Utilities::ParseResult Newtonsoft::Json::Utilities::ParseResult::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ParseResult>("Newtonsoft.Json.Utilities", "ParseResult", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ParseResult None
void Newtonsoft::Json::Utilities::ParseResult::_set_None(::Newtonsoft::Json::Utilities::ParseResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ParseResult", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ParseResult Success
::Newtonsoft::Json::Utilities::ParseResult Newtonsoft::Json::Utilities::ParseResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ParseResult>("Newtonsoft.Json.Utilities", "ParseResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ParseResult Success
void Newtonsoft::Json::Utilities::ParseResult::_set_Success(::Newtonsoft::Json::Utilities::ParseResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ParseResult", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ParseResult Overflow
::Newtonsoft::Json::Utilities::ParseResult Newtonsoft::Json::Utilities::ParseResult::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ParseResult>("Newtonsoft.Json.Utilities", "ParseResult", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ParseResult Overflow
void Newtonsoft::Json::Utilities::ParseResult::_set_Overflow(::Newtonsoft::Json::Utilities::ParseResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ParseResult", "Overflow", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ParseResult Invalid
::Newtonsoft::Json::Utilities::ParseResult Newtonsoft::Json::Utilities::ParseResult::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ParseResult>("Newtonsoft.Json.Utilities", "ParseResult", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ParseResult Invalid
void Newtonsoft::Json::Utilities::ParseResult::_set_Invalid(::Newtonsoft::Json::Utilities::ParseResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ParseResult", "Invalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::ParseResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ParseResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ConvertUtils
#include "Newtonsoft/Json/Utilities/ConvertUtils.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult
#include "Newtonsoft/Json/Utilities/ConvertUtils_ConvertResult.hpp"
// Including type: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass9_0
#include "Newtonsoft/Json/Utilities/ConvertUtils_--c__DisplayClass9_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Utilities.TypeInformation
#include "Newtonsoft/Json/Utilities/TypeInformation.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Newtonsoft.Json.Utilities.ParseResult
#include "Newtonsoft/Json/Utilities/ParseResult.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Newtonsoft.Json.Utilities.PrimitiveTypeCode> TypeCodeMap
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::Utilities::PrimitiveTypeCode>* Newtonsoft::Json::Utilities::ConvertUtils::_get_TypeCodeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::_get_TypeCodeMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::Utilities::PrimitiveTypeCode>*>("Newtonsoft.Json.Utilities", "ConvertUtils", "TypeCodeMap")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Newtonsoft.Json.Utilities.PrimitiveTypeCode> TypeCodeMap
void Newtonsoft::Json::Utilities::ConvertUtils::_set_TypeCodeMap(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::Utilities::PrimitiveTypeCode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::_set_TypeCodeMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ConvertUtils", "TypeCodeMap", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.TypeInformation[] PrimitiveTypeCodes
::ArrayW<::Newtonsoft::Json::Utilities::TypeInformation*> Newtonsoft::Json::Utilities::ConvertUtils::_get_PrimitiveTypeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::_get_PrimitiveTypeCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::Utilities::TypeInformation*>>("Newtonsoft.Json.Utilities", "ConvertUtils", "PrimitiveTypeCodes"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.TypeInformation[] PrimitiveTypeCodes
void Newtonsoft::Json::Utilities::ConvertUtils::_set_PrimitiveTypeCodes(::ArrayW<::Newtonsoft::Json::Utilities::TypeInformation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::_set_PrimitiveTypeCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ConvertUtils", "PrimitiveTypeCodes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey,System.Func`2<System.Object,System.Object>> CastConverters
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey, ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*>* Newtonsoft::Json::Utilities::ConvertUtils::_get_CastConverters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::_get_CastConverters");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey, ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*>*>("Newtonsoft.Json.Utilities", "ConvertUtils", "CastConverters")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey,System.Func`2<System.Object,System.Object>> CastConverters
void Newtonsoft::Json::Utilities::ConvertUtils::_set_CastConverters(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey, ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::_set_CastConverters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ConvertUtils", "CastConverters", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils..cctor
void Newtonsoft::Json::Utilities::ConvertUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::ConvertUtils::GetTypeCode(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::PrimitiveTypeCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Utilities::ConvertUtils::GetTypeCode(::System::Type* t, ByRef<bool> isEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::PrimitiveTypeCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, byref(isEnum));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation
::Newtonsoft::Json::Utilities::TypeInformation* Newtonsoft::Json::Utilities::ConvertUtils::GetTypeInformation(::System::IConvertible* convertable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::GetTypeInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "GetTypeInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(convertable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::TypeInformation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, convertable);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.IsConvertible
bool Newtonsoft::Json::Utilities::ConvertUtils::IsConvertible(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::IsConvertible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "IsConvertible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan
::System::TimeSpan Newtonsoft::Json::Utilities::ConvertUtils::ParseTimeSpan(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ParseTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "ParseTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.CreateCastConverter
::System::Func_2<::Il2CppObject*, ::Il2CppObject*>* Newtonsoft::Json::Utilities::ConvertUtils::CreateCastConverter(::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::CreateCastConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "CreateCastConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.TryConvert
bool Newtonsoft::Json::Utilities::ConvertUtils::TryConvert(::Il2CppObject* initialValue, ::System::Globalization::CultureInfo* culture, ::System::Type* targetType, ByRef<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TryConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "TryConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialValue), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialValue, culture, targetType, byref(value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal
::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult Newtonsoft::Json::Utilities::ConvertUtils::TryConvertInternal(::Il2CppObject* initialValue, ::System::Globalization::CultureInfo* culture, ::System::Type* targetType, ByRef<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TryConvertInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "TryConvertInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialValue), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialValue, culture, targetType, byref(value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast
::Il2CppObject* Newtonsoft::Json::Utilities::ConvertUtils::ConvertOrCast(::Il2CppObject* initialValue, ::System::Globalization::CultureInfo* culture, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertOrCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "ConvertOrCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialValue), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialValue, culture, targetType);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable
::Il2CppObject* Newtonsoft::Json::Utilities::ConvertUtils::EnsureTypeAssignable(::Il2CppObject* value, ::System::Type* initialType, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::EnsureTypeAssignable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "EnsureTypeAssignable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(initialType), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, initialType, targetType);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.GetConverter
::System::ComponentModel::TypeConverter* Newtonsoft::Json::Utilities::ConvertUtils::GetConverter(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.VersionTryParse
bool Newtonsoft::Json::Utilities::ConvertUtils::VersionTryParse(::StringW input, ByRef<::System::Version*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::VersionTryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "VersionTryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Version*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.IsInteger
bool Newtonsoft::Json::Utilities::ConvertUtils::IsInteger(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::IsInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "IsInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse
::Newtonsoft::Json::Utilities::ParseResult Newtonsoft::Json::Utilities::ConvertUtils::Int32TryParse(::ArrayW<::Il2CppChar> chars, int start, int length, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::Int32TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "Int32TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ParseResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, start, length, byref(value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse
::Newtonsoft::Json::Utilities::ParseResult Newtonsoft::Json::Utilities::ConvertUtils::Int64TryParse(::ArrayW<::Il2CppChar> chars, int start, int length, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::Int64TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "Int64TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ParseResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, start, length, byref(value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid
bool Newtonsoft::Json::Utilities::ConvertUtils::TryConvertGuid(::StringW s, ByRef<::System::Guid> g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TryConvertGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "TryConvertGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(g));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt
int Newtonsoft::Json::Utilities::ConvertUtils::HexTextToInt(::ArrayW<::Il2CppChar> text, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::HexTextToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "HexTextToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, start, end);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils.HexCharToInt
int Newtonsoft::Json::Utilities::ConvertUtils::HexCharToInt(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::HexCharToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ConvertUtils", "HexCharToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey
#include "Newtonsoft/Json/Utilities/ConvertUtils.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _initialType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::dyn__initialType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::dyn__initialType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _targetType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::dyn__targetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::dyn__targetType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey.get_InitialType
::System::Type* Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::get_InitialType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::get_InitialType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InitialType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey.get_TargetType
::System::Type* Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::get_TargetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey..ctor
// ABORTED elsewhere.  Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::TypeConvertKey(::System::Type* initialType, ::System::Type* targetType)
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey.Equals
bool Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::Equals(::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey.GetHashCode
int Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.TypeConvertKey.Equals
bool Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::TypeConvertKey::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult
#include "Newtonsoft/Json/Utilities/ConvertUtils_ConvertResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult Success
::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult>("Newtonsoft.Json.Utilities", "ConvertUtils/ConvertResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult Success
void Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_set_Success(::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ConvertUtils/ConvertResult", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult CannotConvertNull
::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_get_CannotConvertNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_get_CannotConvertNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult>("Newtonsoft.Json.Utilities", "ConvertUtils/ConvertResult", "CannotConvertNull"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult CannotConvertNull
void Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_set_CannotConvertNull(::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_set_CannotConvertNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ConvertUtils/ConvertResult", "CannotConvertNull", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult NotInstantiableType
::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_get_NotInstantiableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_get_NotInstantiableType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult>("Newtonsoft.Json.Utilities", "ConvertUtils/ConvertResult", "NotInstantiableType"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult NotInstantiableType
void Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_set_NotInstantiableType(::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_set_NotInstantiableType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ConvertUtils/ConvertResult", "NotInstantiableType", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult NoValidConversion
::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_get_NoValidConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_get_NoValidConversion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult>("Newtonsoft.Json.Utilities", "ConvertUtils/ConvertResult", "NoValidConversion"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.ConvertResult NoValidConversion
void Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_set_NoValidConversion(::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::_set_NoValidConversion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ConvertUtils/ConvertResult", "NoValidConversion", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::ConvertResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass9_0
#include "Newtonsoft/Json/Utilities/ConvertUtils_--c__DisplayClass9_0.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> call
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Utilities::ConvertUtils::$$c__DisplayClass9_0::dyn_call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::$$c__DisplayClass9_0::dyn_call");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "call"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ConvertUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass9_0.<CreateCastConverter>b__0
::Il2CppObject* Newtonsoft::Json::Utilities::ConvertUtils::$$c__DisplayClass9_0::$CreateCastConverter$b__0(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ConvertUtils::$$c__DisplayClass9_0::<CreateCastConverter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateCastConverter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.IWrappedCollection
#include "Newtonsoft/Json/Utilities/IWrappedCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.IWrappedCollection.get_UnderlyingCollection
::Il2CppObject* Newtonsoft::Json::Utilities::IWrappedCollection::get_UnderlyingCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::IWrappedCollection::get_UnderlyingCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.DateTimeUtils
#include "Newtonsoft/Json/Utilities/DateTimeUtils.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Xml.XmlDateTimeSerializationMode
#include "System/Xml/XmlDateTimeSerializationMode.hpp"
// Including type: System.DateTimeKind
#include "System/DateTimeKind.hpp"
// Including type: Newtonsoft.Json.DateTimeZoneHandling
#include "Newtonsoft/Json/DateTimeZoneHandling.hpp"
// Including type: Newtonsoft.Json.Utilities.StringReference
#include "Newtonsoft/Json/Utilities/StringReference.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: Newtonsoft.Json.Utilities.DateTimeParser
#include "Newtonsoft/Json/Utilities/DateTimeParser.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: Newtonsoft.Json.DateFormatHandling
#include "Newtonsoft/Json/DateFormatHandling.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int64 InitialJavaScriptDateTicks
int64_t Newtonsoft::Json::Utilities::DateTimeUtils::_get_InitialJavaScriptDateTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::_get_InitialJavaScriptDateTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Newtonsoft.Json.Utilities", "DateTimeUtils", "InitialJavaScriptDateTicks"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int64 InitialJavaScriptDateTicks
void Newtonsoft::Json::Utilities::DateTimeUtils::_set_InitialJavaScriptDateTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::_set_InitialJavaScriptDateTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeUtils", "InitialJavaScriptDateTicks", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] DaysToMonth365
::ArrayW<int> Newtonsoft::Json::Utilities::DateTimeUtils::_get_DaysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Newtonsoft.Json.Utilities", "DateTimeUtils", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] DaysToMonth365
void Newtonsoft::Json::Utilities::DateTimeUtils::_set_DaysToMonth365(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeUtils", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] DaysToMonth366
::ArrayW<int> Newtonsoft::Json::Utilities::DateTimeUtils::_get_DaysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Newtonsoft.Json.Utilities", "DateTimeUtils", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] DaysToMonth366
void Newtonsoft::Json::Utilities::DateTimeUtils::_set_DaysToMonth366(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "DateTimeUtils", "DaysToMonth366", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils..cctor
void Newtonsoft::Json::Utilities::DateTimeUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset
::System::TimeSpan Newtonsoft::Json::Utilities::DateTimeUtils::GetUtcOffset(::System::DateTime d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode
::System::Xml::XmlDateTimeSerializationMode Newtonsoft::Json::Utilities::DateTimeUtils::ToSerializationMode(::System::DateTimeKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::ToSerializationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "ToSerializationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDateTimeSerializationMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, kind);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime
::System::DateTime Newtonsoft::Json::Utilities::DateTimeUtils::EnsureDateTime(::System::DateTime value, ::Newtonsoft::Json::DateTimeZoneHandling timeZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::EnsureDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "EnsureDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(timeZone)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, timeZone);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToLocalTime
::System::DateTime Newtonsoft::Json::Utilities::DateTimeUtils::SwitchToLocalTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::SwitchToLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "SwitchToLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.SwitchToUtcTime
::System::DateTime Newtonsoft::Json::Utilities::DateTimeUtils::SwitchToUtcTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::SwitchToUtcTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "SwitchToUtcTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks
int64_t Newtonsoft::Json::Utilities::DateTimeUtils::ToUniversalTicks(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::ToUniversalTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "ToUniversalTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.ToUniversalTicks
int64_t Newtonsoft::Json::Utilities::DateTimeUtils::ToUniversalTicks(::System::DateTime dateTime, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::ToUniversalTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "ToUniversalTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks
int64_t Newtonsoft::Json::Utilities::DateTimeUtils::ConvertDateTimeToJavaScriptTicks(::System::DateTime dateTime, ::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::ConvertDateTimeToJavaScriptTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "ConvertDateTimeToJavaScriptTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks
int64_t Newtonsoft::Json::Utilities::DateTimeUtils::ConvertDateTimeToJavaScriptTicks(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::ConvertDateTimeToJavaScriptTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "ConvertDateTimeToJavaScriptTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks
int64_t Newtonsoft::Json::Utilities::DateTimeUtils::ConvertDateTimeToJavaScriptTicks(::System::DateTime dateTime, bool convertToUtc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::ConvertDateTimeToJavaScriptTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "ConvertDateTimeToJavaScriptTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(convertToUtc)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, convertToUtc);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.UniversialTicksToJavaScriptTicks
int64_t Newtonsoft::Json::Utilities::DateTimeUtils::UniversialTicksToJavaScriptTicks(int64_t universialTicks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::UniversialTicksToJavaScriptTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "UniversialTicksToJavaScriptTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(universialTicks)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, universialTicks);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime
::System::DateTime Newtonsoft::Json::Utilities::DateTimeUtils::ConvertJavaScriptTicksToDateTime(int64_t javaScriptTicks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::ConvertJavaScriptTicksToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "ConvertJavaScriptTicksToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaScriptTicks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, javaScriptTicks);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeIso
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeIso(::Newtonsoft::Json::Utilities::StringReference text, ::Newtonsoft::Json::DateTimeZoneHandling dateTimeZoneHandling, ByRef<::System::DateTime> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeIso");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTimeIso", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(dateTimeZoneHandling), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, dateTimeZoneHandling, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetIso
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffsetIso(::Newtonsoft::Json::Utilities::StringReference text, ByRef<::System::DateTimeOffset> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffsetIso");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTimeOffsetIso", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.CreateDateTime
::System::DateTime Newtonsoft::Json::Utilities::DateTimeUtils::CreateDateTime(::Newtonsoft::Json::Utilities::DateTimeParser dateTimeParser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::CreateDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "CreateDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTimeParser)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTimeParser);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTime(::Newtonsoft::Json::Utilities::StringReference s, ::Newtonsoft::Json::DateTimeZoneHandling dateTimeZoneHandling, ::StringW dateFormatString, ::System::Globalization::CultureInfo* culture, ByRef<::System::DateTime> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dateTimeZoneHandling), ::il2cpp_utils::ExtractType(dateFormatString), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dateTimeZoneHandling, dateFormatString, culture, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTime(::StringW s, ::Newtonsoft::Json::DateTimeZoneHandling dateTimeZoneHandling, ::StringW dateFormatString, ::System::Globalization::CultureInfo* culture, ByRef<::System::DateTime> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dateTimeZoneHandling), ::il2cpp_utils::ExtractType(dateFormatString), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dateTimeZoneHandling, dateFormatString, culture, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffset(::Newtonsoft::Json::Utilities::StringReference s, ::StringW dateFormatString, ::System::Globalization::CultureInfo* culture, ByRef<::System::DateTimeOffset> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dateFormatString), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dateFormatString, culture, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffset(::StringW s, ::StringW dateFormatString, ::System::Globalization::CultureInfo* culture, ByRef<::System::DateTimeOffset> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(dateFormatString), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, dateFormatString, culture, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseMicrosoftDate
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseMicrosoftDate(::Newtonsoft::Json::Utilities::StringReference text, ByRef<int64_t> ticks, ByRef<::System::TimeSpan> offset, ByRef<::System::DateTimeKind> kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseMicrosoftDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseMicrosoftDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>(), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeKind&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, byref(ticks), byref(offset), byref(kind));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeMicrosoft
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeMicrosoft(::Newtonsoft::Json::Utilities::StringReference text, ::Newtonsoft::Json::DateTimeZoneHandling dateTimeZoneHandling, ByRef<::System::DateTime> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeMicrosoft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTimeMicrosoft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(dateTimeZoneHandling), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, dateTimeZoneHandling, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeExact
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeExact(::StringW text, ::Newtonsoft::Json::DateTimeZoneHandling dateTimeZoneHandling, ::StringW dateFormatString, ::System::Globalization::CultureInfo* culture, ByRef<::System::DateTime> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTimeExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(dateTimeZoneHandling), ::il2cpp_utils::ExtractType(dateFormatString), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, dateTimeZoneHandling, dateFormatString, culture, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetMicrosoft
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffsetMicrosoft(::Newtonsoft::Json::Utilities::StringReference text, ByRef<::System::DateTimeOffset> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffsetMicrosoft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTimeOffsetMicrosoft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffsetExact
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffsetExact(::StringW text, ::StringW dateFormatString, ::System::Globalization::CultureInfo* culture, ByRef<::System::DateTimeOffset> dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryParseDateTimeOffsetExact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryParseDateTimeOffsetExact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(dateFormatString), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, dateFormatString, culture, byref(dt));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.TryReadOffset
bool Newtonsoft::Json::Utilities::DateTimeUtils::TryReadOffset(::Newtonsoft::Json::Utilities::StringReference offsetText, int startIndex, ByRef<::System::TimeSpan> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::TryReadOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "TryReadOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offsetText), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offsetText, startIndex, byref(offset));
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString
void Newtonsoft::Json::Utilities::DateTimeUtils::WriteDateTimeString(::System::IO::TextWriter* writer, ::System::DateTime value, ::Newtonsoft::Json::DateFormatHandling format, ::StringW formatString, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::WriteDateTimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "WriteDateTimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatString), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, value, format, formatString, culture);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString
int Newtonsoft::Json::Utilities::DateTimeUtils::WriteDateTimeString(::ArrayW<::Il2CppChar> chars, int start, ::System::DateTime value, ::System::Nullable_1<::System::TimeSpan> offset, ::System::DateTimeKind kind, ::Newtonsoft::Json::DateFormatHandling format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::WriteDateTimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "WriteDateTimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, start, value, offset, kind, format);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.WriteDefaultIsoDate
int Newtonsoft::Json::Utilities::DateTimeUtils::WriteDefaultIsoDate(::ArrayW<::Il2CppChar> chars, int start, ::System::DateTime dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::WriteDefaultIsoDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "WriteDefaultIsoDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, start, dt);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.CopyIntToCharArray
void Newtonsoft::Json::Utilities::DateTimeUtils::CopyIntToCharArray(::ArrayW<::Il2CppChar> chars, int start, int value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::CopyIntToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "CopyIntToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, start, value, digits);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset
int Newtonsoft::Json::Utilities::DateTimeUtils::WriteDateTimeOffset(::ArrayW<::Il2CppChar> chars, int start, ::System::TimeSpan offset, ::Newtonsoft::Json::DateFormatHandling format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::WriteDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "WriteDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, start, offset, format);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString
void Newtonsoft::Json::Utilities::DateTimeUtils::WriteDateTimeOffsetString(::System::IO::TextWriter* writer, ::System::DateTimeOffset value, ::Newtonsoft::Json::DateFormatHandling format, ::StringW formatString, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::WriteDateTimeOffsetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "WriteDateTimeOffsetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatString), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, value, format, formatString, culture);
}
// Autogenerated method: Newtonsoft.Json.Utilities.DateTimeUtils.GetDateValues
void Newtonsoft::Json::Utilities::DateTimeUtils::GetDateValues(::System::DateTime td, ByRef<int> year, ByRef<int> month, ByRef<int> day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::DateTimeUtils::GetDateValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "DateTimeUtils", "GetDateValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, td, byref(year), byref(month), byref(day));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.IWrappedDictionary
#include "Newtonsoft/Json/Utilities/IWrappedDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.IWrappedDictionary.get_UnderlyingDictionary
::Il2CppObject* Newtonsoft::Json::Utilities::IWrappedDictionary::get_UnderlyingDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::IWrappedDictionary::get_UnderlyingDictionary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.EnumUtils
#include "Newtonsoft/Json/Utilities/EnumUtils.hpp"
// Including type: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/EnumUtils_--c.hpp"
// Including type: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c__2`1
#include "Newtonsoft/Json/Utilities/EnumUtils_--c__2_1.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Utilities.BidirectionalDictionary`2
#include "Newtonsoft/Json/Utilities/BidirectionalDictionary_2.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.BidirectionalDictionary`2<System.String,System.String>> EnumMemberNamesPerType
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::StringW>*>* Newtonsoft::Json::Utilities::EnumUtils::_get_EnumMemberNamesPerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::_get_EnumMemberNamesPerType");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::StringW>*>*>("Newtonsoft.Json.Utilities", "EnumUtils", "EnumMemberNamesPerType")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.BidirectionalDictionary`2<System.String,System.String>> EnumMemberNamesPerType
void Newtonsoft::Json::Utilities::EnumUtils::_set_EnumMemberNamesPerType(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::_set_EnumMemberNamesPerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "EnumUtils", "EnumMemberNamesPerType", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils..cctor
void Newtonsoft::Json::Utilities::EnumUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "EnumUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils.InitializeEnumType
::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::StringW>* Newtonsoft::Json::Utilities::EnumUtils::InitializeEnumType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::InitializeEnumType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "EnumUtils", "InitializeEnumType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils.GetValues
::System::Collections::Generic::IList_1<::Il2CppObject*>* Newtonsoft::Json::Utilities::EnumUtils::GetValues(::System::Type* enumType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::GetValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "EnumUtils", "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enumType);
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils.ParseEnumName
::Il2CppObject* Newtonsoft::Json::Utilities::EnumUtils::ParseEnumName(::StringW enumText, bool isNullable, ::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::ParseEnumName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "EnumUtils", "ParseEnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumText), ::il2cpp_utils::ExtractType(isNullable), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enumText, isNullable, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils.ToEnumName
::StringW Newtonsoft::Json::Utilities::EnumUtils::ToEnumName(::System::Type* enumType, ::StringW enumText, bool camelCaseText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::ToEnumName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "EnumUtils", "ToEnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumType), ::il2cpp_utils::ExtractType(enumText), ::il2cpp_utils::ExtractType(camelCaseText)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enumType, enumText, camelCaseText);
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils.ResolvedEnumName
::StringW Newtonsoft::Json::Utilities::EnumUtils::ResolvedEnumName(::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::StringW>* map, ::StringW enumText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::ResolvedEnumName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "EnumUtils", "ResolvedEnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map), ::il2cpp_utils::ExtractType(enumText)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, map, enumText);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/EnumUtils_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Runtime.Serialization.EnumMemberAttribute
#include "System/Runtime/Serialization/EnumMemberAttribute.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c <>9
::Newtonsoft::Json::Utilities::EnumUtils::$$c* Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::EnumUtils::$$c*>("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c <>9
void Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9(::Newtonsoft::Json::Utilities::EnumUtils::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Runtime.Serialization.EnumMemberAttribute,System.String> <>9__1_0
::System::Func_2<::System::Runtime::Serialization::EnumMemberAttribute*, ::StringW>* Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Runtime::Serialization::EnumMemberAttribute*, ::StringW>*>("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Runtime.Serialization.EnumMemberAttribute,System.String> <>9__1_0
void Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9__1_0(::System::Func_2<::System::Runtime::Serialization::EnumMemberAttribute*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9__1_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__5_0
::System::Func_2<::System::Reflection::FieldInfo*, bool>* Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::FieldInfo*, bool>*>("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__5_0
void Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9__5_0(::System::Func_2<::System::Reflection::FieldInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "EnumUtils/<>c", "<>9__5_0", value)));
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c..cctor
void Newtonsoft::Json::Utilities::EnumUtils::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "EnumUtils/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c.<InitializeEnumType>b__1_0
::StringW Newtonsoft::Json::Utilities::EnumUtils::$$c::$InitializeEnumType$b__1_0(::System::Runtime::Serialization::EnumMemberAttribute* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::<InitializeEnumType>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializeEnumType>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, a);
}
// Autogenerated method: Newtonsoft.Json.Utilities.EnumUtils/Newtonsoft.Json.Utilities.<>c.<GetValues>b__5_0
bool Newtonsoft::Json::Utilities::EnumUtils::$$c::$GetValues$b__5_0(::System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::EnumUtils::$$c::<GetValues>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetValues>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.BufferUtils
#include "Newtonsoft/Json/Utilities/BufferUtils.hpp"
// Including type: Newtonsoft.Json.IArrayPool`1
#include "Newtonsoft/Json/IArrayPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.BufferUtils.RentBuffer
::ArrayW<::Il2CppChar> Newtonsoft::Json::Utilities::BufferUtils::RentBuffer(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, int minSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::BufferUtils::RentBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "BufferUtils", "RentBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(minSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferPool, minSize);
}
// Autogenerated method: Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer
void Newtonsoft::Json::Utilities::BufferUtils::ReturnBuffer(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, ::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::BufferUtils::ReturnBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "BufferUtils", "ReturnBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferPool, buffer);
}
// Autogenerated method: Newtonsoft.Json.Utilities.BufferUtils.EnsureBufferSize
::ArrayW<::Il2CppChar> Newtonsoft::Json::Utilities::BufferUtils::EnsureBufferSize(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, int size, ::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::BufferUtils::EnsureBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "BufferUtils", "EnsureBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferPool, size, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.JavaScriptUtils
#include "Newtonsoft/Json/Utilities/JavaScriptUtils.hpp"
// Including type: Newtonsoft.Json.StringEscapeHandling
#include "Newtonsoft/Json/StringEscapeHandling.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: Newtonsoft.Json.IArrayPool`1
#include "Newtonsoft/Json/IArrayPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Boolean[] SingleQuoteCharEscapeFlags
::ArrayW<bool> Newtonsoft::Json::Utilities::JavaScriptUtils::_get_SingleQuoteCharEscapeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_get_SingleQuoteCharEscapeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("Newtonsoft.Json.Utilities", "JavaScriptUtils", "SingleQuoteCharEscapeFlags"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean[] SingleQuoteCharEscapeFlags
void Newtonsoft::Json::Utilities::JavaScriptUtils::_set_SingleQuoteCharEscapeFlags(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_set_SingleQuoteCharEscapeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "JavaScriptUtils", "SingleQuoteCharEscapeFlags", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean[] DoubleQuoteCharEscapeFlags
::ArrayW<bool> Newtonsoft::Json::Utilities::JavaScriptUtils::_get_DoubleQuoteCharEscapeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_get_DoubleQuoteCharEscapeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("Newtonsoft.Json.Utilities", "JavaScriptUtils", "DoubleQuoteCharEscapeFlags"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean[] DoubleQuoteCharEscapeFlags
void Newtonsoft::Json::Utilities::JavaScriptUtils::_set_DoubleQuoteCharEscapeFlags(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_set_DoubleQuoteCharEscapeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "JavaScriptUtils", "DoubleQuoteCharEscapeFlags", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean[] HtmlCharEscapeFlags
::ArrayW<bool> Newtonsoft::Json::Utilities::JavaScriptUtils::_get_HtmlCharEscapeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_get_HtmlCharEscapeFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("Newtonsoft.Json.Utilities", "JavaScriptUtils", "HtmlCharEscapeFlags"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean[] HtmlCharEscapeFlags
void Newtonsoft::Json::Utilities::JavaScriptUtils::_set_HtmlCharEscapeFlags(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::_set_HtmlCharEscapeFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "JavaScriptUtils", "HtmlCharEscapeFlags", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils..cctor
void Newtonsoft::Json::Utilities::JavaScriptUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags
::ArrayW<bool> Newtonsoft::Json::Utilities::JavaScriptUtils::GetCharEscapeFlags(::Newtonsoft::Json::StringEscapeHandling stringEscapeHandling, ::Il2CppChar quoteChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::GetCharEscapeFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "GetCharEscapeFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringEscapeHandling), ::il2cpp_utils::ExtractType(quoteChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringEscapeHandling, quoteChar);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString
bool Newtonsoft::Json::Utilities::JavaScriptUtils::ShouldEscapeJavaScriptString(::StringW s, ::ArrayW<bool> charEscapeFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::ShouldEscapeJavaScriptString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "ShouldEscapeJavaScriptString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(charEscapeFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, charEscapeFlags);
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString
void Newtonsoft::Json::Utilities::JavaScriptUtils::WriteEscapedJavaScriptString(::System::IO::TextWriter* writer, ::StringW s, ::Il2CppChar delimiter, bool appendDelimiters, ::ArrayW<bool> charEscapeFlags, ::Newtonsoft::Json::StringEscapeHandling stringEscapeHandling, ::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, ByRef<::ArrayW<::Il2CppChar>> writeBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::WriteEscapedJavaScriptString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "WriteEscapedJavaScriptString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(delimiter), ::il2cpp_utils::ExtractType(appendDelimiters), ::il2cpp_utils::ExtractType(charEscapeFlags), ::il2cpp_utils::ExtractType(stringEscapeHandling), ::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(writeBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, s, delimiter, appendDelimiters, charEscapeFlags, stringEscapeHandling, bufferPool, byref(writeBuffer));
}
// Autogenerated method: Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString
::StringW Newtonsoft::Json::Utilities::JavaScriptUtils::ToEscapedJavaScriptString(::StringW value, ::Il2CppChar delimiter, bool appendDelimiters, ::Newtonsoft::Json::StringEscapeHandling stringEscapeHandling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::JavaScriptUtils::ToEscapedJavaScriptString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "JavaScriptUtils", "ToEscapedJavaScriptString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(delimiter), ::il2cpp_utils::ExtractType(appendDelimiters), ::il2cpp_utils::ExtractType(stringEscapeHandling)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, delimiter, appendDelimiters, stringEscapeHandling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.StringBuffer
#include "Newtonsoft/Json/Utilities/StringBuffer.hpp"
// Including type: Newtonsoft.Json.IArrayPool`1
#include "Newtonsoft/Json/IArrayPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Char[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Newtonsoft::Json::Utilities::StringBuffer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::dyn__buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Utilities::StringBuffer::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::dyn__position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.get_Position
int Newtonsoft::Json::Utilities::StringBuffer::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.set_Position
void Newtonsoft::Json::Utilities::StringBuffer::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.get_IsEmpty
bool Newtonsoft::Json::Utilities::StringBuffer::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.get_InternalBuffer
::ArrayW<::Il2CppChar> Newtonsoft::Json::Utilities::StringBuffer::get_InternalBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::get_InternalBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer..ctor
Newtonsoft::Json::Utilities::StringBuffer::StringBuffer(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, int initalSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(initalSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool, initalSize);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer..ctor
Newtonsoft::Json::Utilities::StringBuffer::StringBuffer(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.Append
void Newtonsoft::Json::Utilities::StringBuffer::Append(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.Append
void Newtonsoft::Json::Utilities::StringBuffer::Append(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, ::ArrayW<::Il2CppChar> buffer, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool, buffer, startIndex, count);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.Clear
void Newtonsoft::Json::Utilities::StringBuffer::Clear(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.EnsureSize
void Newtonsoft::Json::Utilities::StringBuffer::EnsureSize(::Newtonsoft::Json::IArrayPool_1<::Il2CppChar>* bufferPool, int appendLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferPool), ::il2cpp_utils::ExtractType(appendLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferPool, appendLength);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.ToString
::StringW Newtonsoft::Json::Utilities::StringBuffer::ToString(int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start, length);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringBuffer.ToString
::StringW Newtonsoft::Json::Utilities::StringBuffer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringBuffer::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.CollectionUtils
#include "Newtonsoft/Json/Utilities/CollectionUtils.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType
bool Newtonsoft::Json::Utilities::CollectionUtils::IsDictionaryType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::CollectionUtils::IsDictionaryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "CollectionUtils", "IsDictionaryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Utilities::CollectionUtils::ResolveEnumerableCollectionConstructor(::System::Type* collectionType, ::System::Type* collectionItemType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::CollectionUtils::ResolveEnumerableCollectionConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "CollectionUtils", "ResolveEnumerableCollectionConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collectionType), ::il2cpp_utils::ExtractType(collectionItemType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collectionType, collectionItemType);
}
// Autogenerated method: Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Utilities::CollectionUtils::ResolveEnumerableCollectionConstructor(::System::Type* collectionType, ::System::Type* collectionItemType, ::System::Type* constructorArgumentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::CollectionUtils::ResolveEnumerableCollectionConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "CollectionUtils", "ResolveEnumerableCollectionConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collectionType), ::il2cpp_utils::ExtractType(collectionItemType), ::il2cpp_utils::ExtractType(constructorArgumentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collectionType, collectionItemType, constructorArgumentType);
}
// Autogenerated method: Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions
::System::Collections::Generic::IList_1<int>* Newtonsoft::Json::Utilities::CollectionUtils::GetDimensions(::System::Collections::IList* values, int dimensionsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::CollectionUtils::GetDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "CollectionUtils", "GetDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(dimensionsCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values, dimensionsCount);
}
// Autogenerated method: Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray
void Newtonsoft::Json::Utilities::CollectionUtils::CopyFromJaggedToMultidimensionalArray(::System::Collections::IList* values, ::System::Array* multidimensionalArray, ::ArrayW<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::CollectionUtils::CopyFromJaggedToMultidimensionalArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "CollectionUtils", "CopyFromJaggedToMultidimensionalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(multidimensionalArray), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values, multidimensionalArray, indices);
}
// Autogenerated method: Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue
::Il2CppObject* Newtonsoft::Json::Utilities::CollectionUtils::JaggedArrayGetValue(::System::Collections::IList* values, ::ArrayW<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::CollectionUtils::JaggedArrayGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "CollectionUtils", "JaggedArrayGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values, indices);
}
// Autogenerated method: Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray
::System::Array* Newtonsoft::Json::Utilities::CollectionUtils::ToMultidimensionalArray(::System::Collections::IList* values, ::System::Type* type, int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::CollectionUtils::ToMultidimensionalArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "CollectionUtils", "ToMultidimensionalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(rank)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values, type, rank);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.MathUtils
#include "Newtonsoft/Json/Utilities/MathUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.MathUtils.IntLength
int Newtonsoft::Json::Utilities::MathUtils::IntLength(uint64_t i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MathUtils::IntLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MathUtils", "IntLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MathUtils.IntToHex
::Il2CppChar Newtonsoft::Json::Utilities::MathUtils::IntToHex(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MathUtils::IntToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MathUtils", "IntToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MathUtils.ApproxEquals
bool Newtonsoft::Json::Utilities::MathUtils::ApproxEquals(double d1, double d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MathUtils::ApproxEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MathUtils", "ApproxEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d1), ::il2cpp_utils::ExtractType(d2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d1, d2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.MiscellaneousUtils
#include "Newtonsoft/Json/Utilities/MiscellaneousUtils.hpp"
// Including type: System.ArgumentOutOfRangeException
#include "System/ArgumentOutOfRangeException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals
bool Newtonsoft::Json::Utilities::MiscellaneousUtils::ValueEquals(::Il2CppObject* objA, ::Il2CppObject* objB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::ValueEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "ValueEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objA), ::il2cpp_utils::ExtractType(objB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objA, objB);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException
::System::ArgumentOutOfRangeException* Newtonsoft::Json::Utilities::MiscellaneousUtils::CreateArgumentOutOfRangeException(::StringW paramName, ::Il2CppObject* actualValue, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::CreateArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "CreateArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(actualValue), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentOutOfRangeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, actualValue, message);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare
int Newtonsoft::Json::Utilities::MiscellaneousUtils::ByteArrayCompare(::ArrayW<uint8_t> a1, ::ArrayW<uint8_t> a2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::ByteArrayCompare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "ByteArrayCompare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(a2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a1, a2);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix
::StringW Newtonsoft::Json::Utilities::MiscellaneousUtils::GetPrefix(::StringW qualifiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::GetPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "GetPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifiedName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName
::StringW Newtonsoft::Json::Utilities::MiscellaneousUtils::GetLocalName(::StringW qualifiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::GetLocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "GetLocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifiedName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.GetQualifiedNameParts
void Newtonsoft::Json::Utilities::MiscellaneousUtils::GetQualifiedNameParts(::StringW qualifiedName, ByRef<::StringW> prefix, ByRef<::StringW> localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::GetQualifiedNameParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "GetQualifiedNameParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifiedName, byref(prefix), byref(localName));
}
// Autogenerated method: Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint
::StringW Newtonsoft::Json::Utilities::MiscellaneousUtils::FormatValueForPrint(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::MiscellaneousUtils::FormatValueForPrint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "MiscellaneousUtils", "FormatValueForPrint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils
#include "Newtonsoft/Json/Utilities/ReflectionUtils.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass42_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass42_0.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass43_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass43_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
#include "System/Runtime/Serialization/Formatters/FormatterAssemblyStyle.hpp"
// Including type: System.Runtime.Serialization.SerializationBinder
#include "System/Runtime/Serialization/SerializationBinder.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Type[] EmptyTypes
::ArrayW<::System::Type*> Newtonsoft::Json::Utilities::ReflectionUtils::_get_EmptyTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::_get_EmptyTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("Newtonsoft.Json.Utilities", "ReflectionUtils", "EmptyTypes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Type[] EmptyTypes
void Newtonsoft::Json::Utilities::ReflectionUtils::_set_EmptyTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::_set_EmptyTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils", "EmptyTypes", value));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils..cctor
void Newtonsoft::Json::Utilities::ReflectionUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsVirtual(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsVirtual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition
::System::Reflection::MethodInfo* Newtonsoft::Json::Utilities::ReflectionUtils::GetBaseDefinition(::System::Reflection::PropertyInfo* propertyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetBaseDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetBaseDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyInfo);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsPublic(::System::Reflection::PropertyInfo* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::GetObjectType(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName
::StringW Newtonsoft::Json::Utilities::ReflectionUtils::GetTypeName(::System::Type* t, ::System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, ::System::Runtime::Serialization::SerializationBinder* binder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(assemblyFormat), ::il2cpp_utils::ExtractType(binder)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, assemblyFormat, binder);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails
::StringW Newtonsoft::Json::Utilities::ReflectionUtils::RemoveAssemblyDetails(::StringW fullyQualifiedTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::RemoveAssemblyDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "RemoveAssemblyDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullyQualifiedTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullyQualifiedTypeName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor
bool Newtonsoft::Json::Utilities::ReflectionUtils::HasDefaultConstructor(::System::Type* t, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::HasDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "HasDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, nonPublic);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultConstructor(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultConstructor(::System::Type* t, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, nonPublic);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsNullable(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsNullable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsNullableType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsNullableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsNullableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::EnsureNotNullableType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::EnsureNotNullableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "EnsureNotNullableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsGenericDefinition(::System::Type* type, ::System::Type* genericInterfaceDefinition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericInterfaceDefinition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericInterfaceDefinition);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::ImplementsGenericDefinition(::System::Type* type, ::System::Type* genericInterfaceDefinition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::ImplementsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "ImplementsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericInterfaceDefinition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericInterfaceDefinition);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::ImplementsGenericDefinition(::System::Type* type, ::System::Type* genericInterfaceDefinition, ByRef<::System::Type*> implementingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::ImplementsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "ImplementsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericInterfaceDefinition), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericInterfaceDefinition, byref(implementingType));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinition(::System::Type* type, ::System::Type* genericClassDefinition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "InheritsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericClassDefinition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericClassDefinition);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition
bool Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinition(::System::Type* type, ::System::Type* genericClassDefinition, ByRef<::System::Type*> implementingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "InheritsGenericDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(genericClassDefinition), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, genericClassDefinition, byref(implementingType));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal
bool Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinitionInternal(::System::Type* currentType, ::System::Type* genericClassDefinition, ByRef<::System::Type*> implementingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::InheritsGenericDefinitionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "InheritsGenericDefinitionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentType), ::il2cpp_utils::ExtractType(genericClassDefinition), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentType, genericClassDefinition, byref(implementingType));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::GetCollectionItemType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetCollectionItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetCollectionItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes
void Newtonsoft::Json::Utilities::ReflectionUtils::GetDictionaryKeyValueTypes(::System::Type* dictionaryType, ByRef<::System::Type*> keyType, ByRef<::System::Type*> valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetDictionaryKeyValueTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetDictionaryKeyValueTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionaryType), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dictionaryType, byref(keyType), byref(valueType));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberUnderlyingType(::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberUnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetMemberUnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsIndexedProperty(::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsIndexedProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsIndexedProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsIndexedProperty(::System::Reflection::PropertyInfo* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsIndexedProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsIndexedProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberValue(::System::Reflection::MemberInfo* member, ::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, target);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue
void Newtonsoft::Json::Utilities::ReflectionUtils::SetMemberValue(::System::Reflection::MemberInfo* member, ::Il2CppObject* target, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::SetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "SetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, target, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue
bool Newtonsoft::Json::Utilities::ReflectionUtils::CanReadMemberValue(::System::Reflection::MemberInfo* member, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::CanReadMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "CanReadMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, nonPublic);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue
bool Newtonsoft::Json::Utilities::ReflectionUtils::CanSetMemberValue(::System::Reflection::MemberInfo* member, bool nonPublic, bool canSetReadOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::CanSetMemberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "CanSetMemberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(nonPublic), ::il2cpp_utils::ExtractType(canSetReadOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member, nonPublic, canSetReadOnly);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties
::System::Collections::Generic::List_1<::System::Reflection::MemberInfo*>* Newtonsoft::Json::Utilities::ReflectionUtils::GetFieldsAndProperties(::System::Type* type, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetFieldsAndProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetFieldsAndProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Reflection::MemberInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember
bool Newtonsoft::Json::Utilities::ReflectionUtils::IsOverridenGenericMember(::System::Reflection::MemberInfo* memberInfo, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::IsOverridenGenericMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "IsOverridenGenericMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memberInfo, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes
::ArrayW<::System::Attribute*> Newtonsoft::Json::Utilities::ReflectionUtils::GetAttributes(::Il2CppObject* attributeProvider, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeProvider), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributeProvider, attributeType, inherit);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName
void Newtonsoft::Json::Utilities::ReflectionUtils::SplitFullyQualifiedTypeName(::StringW fullyQualifiedTypeName, ByRef<::StringW> typeName, ByRef<::StringW> assemblyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::SplitFullyQualifiedTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "SplitFullyQualifiedTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullyQualifiedTypeName), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullyQualifiedTypeName, byref(typeName), byref(assemblyName));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex
::System::Nullable_1<int> Newtonsoft::Json::Utilities::ReflectionUtils::GetAssemblyDelimiterIndex(::StringW fullyQualifiedTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetAssemblyDelimiterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetAssemblyDelimiterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullyQualifiedTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullyQualifiedTypeName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType
::System::Reflection::MemberInfo* Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberInfoFromType(::System::Type* targetType, ::System::Reflection::MemberInfo* memberInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetMemberInfoFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetMemberInfoFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(memberInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType, memberInfo);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetFields
::System::Collections::Generic::IEnumerable_1<::System::Reflection::FieldInfo*>* Newtonsoft::Json::Utilities::ReflectionUtils::GetFields(::System::Type* targetType, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::FieldInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields
void Newtonsoft::Json::Utilities::ReflectionUtils::GetChildPrivateFields(::System::Collections::Generic::IList_1<::System::Reflection::MemberInfo*>* initialFields, ::System::Type* targetType, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetChildPrivateFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetChildPrivateFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialFields), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(bindingAttr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialFields, targetType, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties
::System::Collections::Generic::IEnumerable_1<::System::Reflection::PropertyInfo*>* Newtonsoft::Json::Utilities::ReflectionUtils::GetProperties(::System::Type* targetType, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::PropertyInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag
::System::Reflection::BindingFlags Newtonsoft::Json::Utilities::ReflectionUtils::RemoveFlag(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::BindingFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::RemoveFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "RemoveFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bindingAttr, flag);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties
void Newtonsoft::Json::Utilities::ReflectionUtils::GetChildPrivateProperties(::System::Collections::Generic::IList_1<::System::Reflection::PropertyInfo*>* initialProperties, ::System::Type* targetType, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetChildPrivateProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetChildPrivateProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialProperties), ::il2cpp_utils::ExtractType(targetType), ::il2cpp_utils::ExtractType(bindingAttr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initialProperties, targetType, bindingAttr);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue
::Il2CppObject* Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultValue(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::GetDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils", "GetDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c <>9
::Newtonsoft::Json::Utilities::ReflectionUtils::$$c* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ReflectionUtils::$$c*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c <>9
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9(::Newtonsoft::Json::Utilities::ReflectionUtils::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__10_0
::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::ConstructorInfo*, bool>*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__10_0
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__10_0(::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MemberInfo,System.String> <>9__29_0
::System::Func_2<::System::Reflection::MemberInfo*, ::StringW>* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__29_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MemberInfo*, ::StringW>*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__29_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MemberInfo,System.String> <>9__29_0
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__29_0(::System::Func_2<::System::Reflection::MemberInfo*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__29_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__29_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ParameterInfo,System.Type> <>9__37_0
::System::Func_2<::System::Reflection::ParameterInfo*, ::System::Type*>* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__37_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__37_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::ParameterInfo*, ::System::Type*>*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__37_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ParameterInfo,System.Type> <>9__37_0
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__37_0(::System::Func_2<::System::Reflection::ParameterInfo*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__37_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__37_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__39_0
::System::Func_2<::System::Reflection::FieldInfo*, bool>* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_get_$$9__39_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::FieldInfo*, bool>*>("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__39_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__39_0
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__39_0(::System::Func_2<::System::Reflection::FieldInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_set_$$9__39_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", "<>9__39_0", value)));
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c..cctor
void Newtonsoft::Json::Utilities::ReflectionUtils::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ReflectionUtils/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c.<GetDefaultConstructor>b__10_0
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c::$GetDefaultConstructor$b__10_0(::System::Reflection::ConstructorInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::<GetDefaultConstructor>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDefaultConstructor>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c.<GetFieldsAndProperties>b__29_0
::StringW Newtonsoft::Json::Utilities::ReflectionUtils::$$c::$GetFieldsAndProperties$b__29_0(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::<GetFieldsAndProperties>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldsAndProperties>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c.<GetMemberInfoFromType>b__37_0
::System::Type* Newtonsoft::Json::Utilities::ReflectionUtils::$$c::$GetMemberInfoFromType$b__37_0(::System::Reflection::ParameterInfo* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::<GetMemberInfoFromType>b__37_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMemberInfoFromType>b__37_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, p);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c.<GetChildPrivateFields>b__39_0
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c::$GetChildPrivateFields$b__39_0(::System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c::<GetChildPrivateFields>b__39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetChildPrivateFields>b__39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass42_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass42_0.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.PropertyInfo subTypeProperty
[[deprecated("Use field access instead!")]] ::System::Reflection::PropertyInfo*& Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass42_0::dyn_subTypeProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass42_0::dyn_subTypeProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subTypeProperty"))->offset;
  return *reinterpret_cast<::System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass42_0.<GetChildPrivateProperties>b__0
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass42_0::$GetChildPrivateProperties$b__0(::System::Reflection::PropertyInfo* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass42_0::<GetChildPrivateProperties>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetChildPrivateProperties>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass42_0.<GetChildPrivateProperties>b__1
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass42_0::$GetChildPrivateProperties$b__1(::System::Reflection::PropertyInfo* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass42_0::<GetChildPrivateProperties>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetChildPrivateProperties>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass42_0.<GetChildPrivateProperties>b__2
bool Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass42_0::$GetChildPrivateProperties$b__2(::System::Reflection::PropertyInfo* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ReflectionUtils::$$c__DisplayClass42_0::<GetChildPrivateProperties>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetChildPrivateProperties>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.ReflectionUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass43_0
#include "Newtonsoft/Json/Utilities/ReflectionUtils_--c__DisplayClass43_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.StringUtils
#include "Newtonsoft/Json/Utilities/StringUtils.hpp"
// Including type: Newtonsoft.Json.Utilities.StringUtils/Newtonsoft.Json.Utilities.<>c__DisplayClass15_0`1
#include "Newtonsoft/Json/Utilities/StringUtils_--c__DisplayClass15_0_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, arg0);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, arg0, arg1);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, arg0, arg1, arg2);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2, ::Il2CppObject* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, arg0, arg1, arg2, arg3);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.FormatWith
::StringW Newtonsoft::Json::Utilities::StringUtils::FormatWith(::StringW format, ::System::IFormatProvider* provider, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::FormatWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "FormatWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, provider, args);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter
::System::IO::StringWriter* Newtonsoft::Json::Utilities::StringUtils::CreateStringWriter(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::CreateStringWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "CreateStringWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::StringWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.GetLength
::System::Nullable_1<int> Newtonsoft::Json::Utilities::StringUtils::GetLength(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode
void Newtonsoft::Json::Utilities::StringUtils::ToCharAsUnicode(::Il2CppChar c, ::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::ToCharAsUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "ToCharAsUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c, buffer);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.ToCamelCase
::StringW Newtonsoft::Json::Utilities::StringUtils::ToCamelCase(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::ToCamelCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "ToCamelCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate
bool Newtonsoft::Json::Utilities::StringUtils::IsHighSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate
bool Newtonsoft::Json::Utilities::StringUtils::IsLowSurrogate(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.StartsWith
bool Newtonsoft::Json::Utilities::StringUtils::StartsWith(::StringW source, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value);
}
// Autogenerated method: Newtonsoft.Json.Utilities.StringUtils.EndsWith
bool Newtonsoft::Json::Utilities::StringUtils::EndsWith(::StringW source, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::StringUtils::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "StringUtils", "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Utilities.TypeExtensions
#include "Newtonsoft/Json/Utilities/TypeExtensions.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.MemberType
::System::Reflection::MemberTypes Newtonsoft::Json::Utilities::TypeExtensions::MemberType(::System::Reflection::MemberInfo* memberInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberTypes, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memberInfo);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters
bool Newtonsoft::Json::Utilities::TypeExtensions::ContainsGenericParameters(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::ContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsInterface
bool Newtonsoft::Json::Utilities::TypeExtensions::IsInterface(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType
bool Newtonsoft::Json::Utilities::TypeExtensions::IsGenericType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsGenericType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition
bool Newtonsoft::Json::Utilities::TypeExtensions::IsGenericTypeDefinition(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsGenericTypeDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.BaseType
::System::Type* Newtonsoft::Json::Utilities::TypeExtensions::BaseType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::BaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsEnum
bool Newtonsoft::Json::Utilities::TypeExtensions::IsEnum(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsClass
bool Newtonsoft::Json::Utilities::TypeExtensions::IsClass(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsSealed
bool Newtonsoft::Json::Utilities::TypeExtensions::IsSealed(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsSealed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsSealed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract
bool Newtonsoft::Json::Utilities::TypeExtensions::IsAbstract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.IsValueType
bool Newtonsoft::Json::Utilities::TypeExtensions::IsValueType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::IsValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "IsValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName
bool Newtonsoft::Json::Utilities::TypeExtensions::AssignableToTypeName(::System::Type* type, ::StringW fullTypeName, ByRef<::System::Type*> match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::AssignableToTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "AssignableToTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(fullTypeName), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, fullTypeName, byref(match));
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName
bool Newtonsoft::Json::Utilities::TypeExtensions::AssignableToTypeName(::System::Type* type, ::StringW fullTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::AssignableToTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "AssignableToTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(fullTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, fullTypeName);
}
// Autogenerated method: Newtonsoft.Json.Utilities.TypeExtensions.ImplementInterface
bool Newtonsoft::Json::Utilities::TypeExtensions::ImplementInterface(::System::Type* type, ::System::Type* interfaceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::TypeExtensions::ImplementInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "TypeExtensions", "ImplementInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(interfaceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, interfaceType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Utilities.ValidationUtils
#include "Newtonsoft/Json/Utilities/ValidationUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull
void Newtonsoft::Json::Utilities::ValidationUtils::ArgumentNotNull(::Il2CppObject* value, ::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Utilities::ValidationUtils::ArgumentNotNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Utilities", "ValidationUtils", "ArgumentNotNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(parameterName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, parameterName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Shims.PreserveAttribute
#include "Newtonsoft/Json/Shims/PreserveAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DiagnosticsTraceWriter
#include "Newtonsoft/Json/Serialization/DiagnosticsTraceWriter.hpp"
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.TraceLevel <LevelFilter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::TraceLevel& Newtonsoft::Json::Serialization::DiagnosticsTraceWriter::dyn_$LevelFilter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DiagnosticsTraceWriter::dyn_$LevelFilter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LevelFilter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::TraceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.get_LevelFilter
::System::Diagnostics::TraceLevel Newtonsoft::Json::Serialization::DiagnosticsTraceWriter::get_LevelFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DiagnosticsTraceWriter::get_LevelFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LevelFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceLevel, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.GetTraceEventType
::System::Diagnostics::TraceEventType Newtonsoft::Json::Serialization::DiagnosticsTraceWriter::GetTraceEventType(::System::Diagnostics::TraceLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DiagnosticsTraceWriter::GetTraceEventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTraceEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceEventType, false>(this, ___internal__method, level);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace
void Newtonsoft::Json::Serialization::DiagnosticsTraceWriter::Trace(::System::Diagnostics::TraceLevel level, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DiagnosticsTraceWriter::Trace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message, ex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.ITraceWriter
#include "Newtonsoft/Json/Serialization/ITraceWriter.hpp"
// Including type: System.Diagnostics.TraceLevel
#include "System/Diagnostics/TraceLevel.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.ITraceWriter.get_LevelFilter
::System::Diagnostics::TraceLevel Newtonsoft::Json::Serialization::ITraceWriter::get_LevelFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ITraceWriter::get_LevelFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LevelFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceLevel, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ITraceWriter.Trace
void Newtonsoft::Json::Serialization::ITraceWriter::Trace(::System::Diagnostics::TraceLevel level, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ITraceWriter::Trace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message, ex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonContainerContract
#include "Newtonsoft/Json/Serialization/JsonContainerContract.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.JsonContract _itemContract
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContract*& Newtonsoft::Json::Serialization::JsonContainerContract::dyn__itemContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn__itemContract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemContract"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonContract**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.JsonContract _finalItemContract
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContract*& Newtonsoft::Json::Serialization::JsonContainerContract::dyn__finalItemContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn__finalItemContract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalItemContract"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonContract**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonConverter <ItemConverter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemConverter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemConverter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> <ItemIsReference>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemIsReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemIsReference$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemIsReference>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemReferenceLoopHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemReferenceLoopHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemReferenceLoopHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Newtonsoft.Json.TypeNameHandling> <ItemTypeNameHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemTypeNameHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::dyn_$ItemTypeNameHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemTypeNameHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemContract
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemContract(::Newtonsoft::Json::Serialization::JsonContract* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_FinalItemContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::JsonContainerContract::get_FinalItemContract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_FinalItemContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FinalItemContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemConverter
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemConverter(::Newtonsoft::Json::JsonConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemIsReference
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemIsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemIsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemIsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemIsReference
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemIsReference(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemIsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemIsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemReferenceLoopHandling
::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemReferenceLoopHandling
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemReferenceLoopHandling(::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemReferenceLoopHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemReferenceLoopHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.get_ItemTypeNameHandling
::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemTypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::get_ItemTypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemTypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContainerContract.set_ItemTypeNameHandling
void Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemTypeNameHandling(::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContainerContract::set_ItemTypeNameHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemTypeNameHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.MemoryTraceWriter
#include "Newtonsoft/Json/Serialization/MemoryTraceWriter.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<System.String> _traceMessages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::StringW>*& Newtonsoft::Json::Serialization::MemoryTraceWriter::dyn__traceMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::MemoryTraceWriter::dyn__traceMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_traceMessages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.TraceLevel <LevelFilter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Diagnostics::TraceLevel& Newtonsoft::Json::Serialization::MemoryTraceWriter::dyn_$LevelFilter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::MemoryTraceWriter::dyn_$LevelFilter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LevelFilter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Diagnostics::TraceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.MemoryTraceWriter.get_LevelFilter
::System::Diagnostics::TraceLevel Newtonsoft::Json::Serialization::MemoryTraceWriter::get_LevelFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::MemoryTraceWriter::get_LevelFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LevelFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceLevel, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.MemoryTraceWriter.set_LevelFilter
void Newtonsoft::Json::Serialization::MemoryTraceWriter::set_LevelFilter(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::MemoryTraceWriter::set_LevelFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LevelFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.MemoryTraceWriter.Trace
void Newtonsoft::Json::Serialization::MemoryTraceWriter::Trace(::System::Diagnostics::TraceLevel level, ::StringW message, ::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::MemoryTraceWriter::Trace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message, ex);
}
// Autogenerated method: Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString
::StringW Newtonsoft::Json::Serialization::MemoryTraceWriter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::MemoryTraceWriter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ReflectionAttributeProvider
#include "Newtonsoft/Json/Serialization/ReflectionAttributeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _attributeProvider
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::ReflectionAttributeProvider::dyn__attributeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ReflectionAttributeProvider::dyn__attributeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeProvider"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.TraceJsonReader
#include "Newtonsoft/Json/Serialization/TraceJsonReader.hpp"
// Including type: Newtonsoft.Json.JsonTextWriter
#include "Newtonsoft/Json/JsonTextWriter.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonReader _innerReader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonReader*& Newtonsoft::Json::Serialization::TraceJsonReader::dyn__innerReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::dyn__innerReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerReader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonTextWriter _textWriter
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonTextWriter*& Newtonsoft::Json::Serialization::TraceJsonReader::dyn__textWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::dyn__textWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textWriter"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonTextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.StringWriter _sw
[[deprecated("Use field access instead!")]] ::System::IO::StringWriter*& Newtonsoft::Json::Serialization::TraceJsonReader::dyn__sw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::dyn__sw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sw"))->offset;
  return *reinterpret_cast<::System::IO::StringWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Newtonsoft.Json.IJsonLineInfo.get_LineNumber
int Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft_Json_IJsonLineInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft.Json.IJsonLineInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Newtonsoft.Json.IJsonLineInfo.get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Newtonsoft.Json.IJsonLineInfo.get_LinePosition
int Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft_Json_IJsonLineInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft.Json.IJsonLineInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Newtonsoft.Json.IJsonLineInfo.get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.GetDeserializedJsonMessage
::StringW Newtonsoft::Json::Serialization::TraceJsonReader::GetDeserializedJsonMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::GetDeserializedJsonMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeserializedJsonMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo
bool Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft_Json_IJsonLineInfo_HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Newtonsoft.Json.IJsonLineInfo.HasLineInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Newtonsoft.Json.IJsonLineInfo.HasLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_Depth
int Newtonsoft::Json::Serialization::TraceJsonReader::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_Depth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_Path
::StringW Newtonsoft::Json::Serialization::TraceJsonReader::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_Path");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_TokenType
::Newtonsoft::Json::JsonToken Newtonsoft::Json::Serialization::TraceJsonReader::get_TokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_TokenType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonToken, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_Value
::Il2CppObject* Newtonsoft::Json::Serialization::TraceJsonReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.get_ValueType
::System::Type* Newtonsoft::Json::Serialization::TraceJsonReader::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Read
bool Newtonsoft::Json::Serialization::TraceJsonReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsInt32
::System::Nullable_1<int> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsString
::StringW Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsBytes
::ArrayW<uint8_t> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDecimal
::System::Nullable_1<::System::Decimal> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Decimal>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDouble
::System::Nullable_1<double> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<double>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsBoolean
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTime
::System::Nullable_1<::System::DateTime> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.ReadAsDateTimeOffset
::System::Nullable_1<::System::DateTimeOffset> Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::ReadAsDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTimeOffset>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonReader.Close
void Newtonsoft::Json::Serialization::TraceJsonReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.TraceJsonWriter
#include "Newtonsoft/Json/Serialization/TraceJsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonTextWriter
#include "Newtonsoft/Json/JsonTextWriter.hpp"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonWriter _innerWriter
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonWriter*& Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__innerWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__innerWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerWriter"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.JsonTextWriter _textWriter
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonTextWriter*& Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__textWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__textWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textWriter"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonTextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.StringWriter _sw
[[deprecated("Use field access instead!")]] ::System::IO::StringWriter*& Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__sw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::dyn__sw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sw"))->offset;
  return *reinterpret_cast<::System::IO::StringWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.GetSerializedJsonMessage
::StringW Newtonsoft::Json::Serialization::TraceJsonWriter::GetSerializedJsonMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::GetSerializedJsonMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializedJsonMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Nullable_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteUndefined
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteUndefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteUndefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUndefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteNull
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteNull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteComment
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartArray
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndArray
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartConstructor
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartConstructor(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndConstructor
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName
void Newtonsoft::Json::Serialization::TraceJsonWriter::WritePropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WritePropertyName
void Newtonsoft::Json::Serialization::TraceJsonWriter::WritePropertyName(::StringW name, bool escape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WritePropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(escape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, escape);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteStartObject
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteStartObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteEndObject
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteEndObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRawValue
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteRawValue(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteRawValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.WriteRaw
void Newtonsoft::Json::Serialization::TraceJsonWriter::WriteRaw(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: Newtonsoft.Json.Serialization.TraceJsonWriter.Close
void Newtonsoft::Json::Serialization::TraceJsonWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::TraceJsonWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonFormatterConverter
#include "Newtonsoft/Json/Serialization/JsonFormatterConverter.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonISerializableContract
#include "Newtonsoft/Json/Serialization/JsonISerializableContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonSerializerInternalReader _reader
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader*& Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reader"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonSerializerInternalReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonISerializableContract _contract
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonISerializableContract*& Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__contract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__contract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contract"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonISerializableContract**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.JsonProperty _member
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonProperty*& Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::dyn__member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_member"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.Convert
::Il2CppObject* Newtonsoft::Json::Serialization::JsonFormatterConverter::Convert(::Il2CppObject* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToBoolean
bool Newtonsoft::Json::Serialization::JsonFormatterConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt32
int Newtonsoft::Json::Serialization::JsonFormatterConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToInt64
int64_t Newtonsoft::Json::Serialization::JsonFormatterConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToSingle
float Newtonsoft::Json::Serialization::JsonFormatterConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonFormatterConverter.ToString
::StringW Newtonsoft::Json::Serialization::JsonFormatterConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonFormatterConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonISerializableContract
#include "Newtonsoft/Json/Serialization/JsonISerializableContract.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> <ISerializableCreator>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonISerializableContract::dyn_$ISerializableCreator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonISerializableContract::dyn_$ISerializableCreator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ISerializableCreator>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonISerializableContract.get_ISerializableCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonISerializableContract::get_ISerializableCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonISerializableContract::get_ISerializableCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ISerializableCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonISerializableContract.set_ISerializableCreator
void Newtonsoft::Json::Serialization::JsonISerializableContract::set_ISerializableCreator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonISerializableContract::set_ISerializableCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ISerializableCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonLinqContract
#include "Newtonsoft/Json/Serialization/JsonLinqContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonPrimitiveContract
#include "Newtonsoft/Json/Serialization/JsonPrimitiveContract.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Newtonsoft.Json.ReadType> ReadTypeMap
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::ReadType>* Newtonsoft::Json::Serialization::JsonPrimitiveContract::_get_ReadTypeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::_get_ReadTypeMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::ReadType>*>("Newtonsoft.Json.Serialization", "JsonPrimitiveContract", "ReadTypeMap")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Newtonsoft.Json.ReadType> ReadTypeMap
void Newtonsoft::Json::Serialization::JsonPrimitiveContract::_set_ReadTypeMap(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Newtonsoft::Json::ReadType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::_set_ReadTypeMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonPrimitiveContract", "ReadTypeMap", value));
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.PrimitiveTypeCode <TypeCode>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::PrimitiveTypeCode& Newtonsoft::Json::Serialization::JsonPrimitiveContract::dyn_$TypeCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::dyn_$TypeCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeCode>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::PrimitiveTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPrimitiveContract.get_TypeCode
::Newtonsoft::Json::Utilities::PrimitiveTypeCode Newtonsoft::Json::Serialization::JsonPrimitiveContract::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::PrimitiveTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPrimitiveContract.set_TypeCode
void Newtonsoft::Json::Serialization::JsonPrimitiveContract::set_TypeCode(::Newtonsoft::Json::Utilities::PrimitiveTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::set_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonPrimitiveContract..cctor
void Newtonsoft::Json::Serialization::JsonPrimitiveContract::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonPrimitiveContract::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonPrimitiveContract", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ErrorEventArgs
#include "Newtonsoft/Json/Serialization/ErrorEventArgs.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object <CurrentObject>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::ErrorEventArgs::dyn_$CurrentObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorEventArgs::dyn_$CurrentObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentObject>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ErrorContext <ErrorContext>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ErrorContext*& Newtonsoft::Json::Serialization::ErrorEventArgs::dyn_$ErrorContext$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorEventArgs::dyn_$ErrorContext$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ErrorContext>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ErrorContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorEventArgs.set_CurrentObject
void Newtonsoft::Json::Serialization::ErrorEventArgs::set_CurrentObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorEventArgs::set_CurrentObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorEventArgs.set_ErrorContext
void Newtonsoft::Json::Serialization::ErrorEventArgs::set_ErrorContext(::Newtonsoft::Json::Serialization::ErrorContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorEventArgs::set_ErrorContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ErrorContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultReferenceResolver
#include "Newtonsoft/Json/Serialization/DefaultReferenceResolver.hpp"
// Including type: Newtonsoft.Json.Utilities.BidirectionalDictionary`2
#include "Newtonsoft/Json/Utilities/BidirectionalDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _referenceCount
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Serialization::DefaultReferenceResolver::dyn__referenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::dyn__referenceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetMappings
::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::Il2CppObject*>* Newtonsoft::Json::Serialization::DefaultReferenceResolver::GetMappings(::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::GetMappings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMappings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::BidirectionalDictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.ResolveReference
::Il2CppObject* Newtonsoft::Json::Serialization::DefaultReferenceResolver::ResolveReference(::Il2CppObject* context, ::StringW reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::ResolveReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(reference)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, reference);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.GetReference
::StringW Newtonsoft::Json::Serialization::DefaultReferenceResolver::GetReference(::Il2CppObject* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::GetReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.AddReference
void Newtonsoft::Json::Serialization::DefaultReferenceResolver::AddReference(::Il2CppObject* context, ::StringW reference, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::AddReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(reference), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, reference, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultReferenceResolver.IsReferenced
bool Newtonsoft::Json::Serialization::DefaultReferenceResolver::IsReferenced(::Il2CppObject* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultReferenceResolver::IsReferenced");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReferenced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver
#include "Newtonsoft/Json/Serialization/CamelCasePropertyNamesContractResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.ResolvePropertyName
::StringW Newtonsoft::Json::Serialization::CamelCasePropertyNamesContractResolver::ResolvePropertyName(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::CamelCasePropertyNamesContractResolver::ResolvePropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolvePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, propertyName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ResolverContractKey
#include "Newtonsoft/Json/Serialization/ResolverContractKey.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _resolverType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::ResolverContractKey::dyn__resolverType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ResolverContractKey::dyn__resolverType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolverType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _contractType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::ResolverContractKey::dyn__contractType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ResolverContractKey::dyn__contractType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contractType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ResolverContractKey..ctor
// ABORTED elsewhere.  Newtonsoft::Json::Serialization::ResolverContractKey::ResolverContractKey(::System::Type* resolverType, ::System::Type* contractType)
// Autogenerated method: Newtonsoft.Json.Serialization.ResolverContractKey.Equals
bool Newtonsoft::Json::Serialization::ResolverContractKey::Equals(::Newtonsoft::Json::Serialization::ResolverContractKey other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ResolverContractKey::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode
int Newtonsoft::Json::Serialization::ResolverContractKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ResolverContractKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ResolverContractKey.Equals
bool Newtonsoft::Json::Serialization::ResolverContractKey::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ResolverContractKey::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolverState
#include "Newtonsoft/Json/Serialization/DefaultContractResolverState.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: Newtonsoft.Json.Utilities.PropertyNameTable
#include "Newtonsoft/Json/Utilities/PropertyNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<Newtonsoft.Json.Serialization.ResolverContractKey,Newtonsoft.Json.Serialization.JsonContract> ContractCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Newtonsoft::Json::Serialization::ResolverContractKey, ::Newtonsoft::Json::Serialization::JsonContract*>*& Newtonsoft::Json::Serialization::DefaultContractResolverState::dyn_ContractCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolverState::dyn_ContractCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContractCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Newtonsoft::Json::Serialization::ResolverContractKey, ::Newtonsoft::Json::Serialization::JsonContract*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.PropertyNameTable NameTable
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::PropertyNameTable*& Newtonsoft::Json::Serialization::DefaultContractResolverState::dyn_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolverState::dyn_NameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NameTable"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::PropertyNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver
#include "Newtonsoft/Json/Serialization/DefaultContractResolver.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.EnumerableDictionaryWrapper`2
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_EnumerableDictionaryWrapper_2.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass34_0.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_1
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass34_1.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_2
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass34_2.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass64_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass64_0.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass65_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass65_0.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolverState
#include "Newtonsoft/Json/Serialization/DefaultContractResolverState.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonObjectContract
#include "Newtonsoft/Json/Serialization/JsonObjectContract.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonPropertyCollection
#include "Newtonsoft/Json/Serialization/JsonPropertyCollection.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Newtonsoft.Json.Serialization.SerializationCallback
#include "Newtonsoft/Json/Serialization/SerializationCallback.hpp"
// Including type: Newtonsoft.Json.Serialization.SerializationErrorCallback
#include "Newtonsoft/Json/Serialization/SerializationErrorCallback.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonDictionaryContract
#include "Newtonsoft/Json/Serialization/JsonDictionaryContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonArrayContract
#include "Newtonsoft/Json/Serialization/JsonArrayContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonPrimitiveContract
#include "Newtonsoft/Json/Serialization/JsonPrimitiveContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonLinqContract
#include "Newtonsoft/Json/Serialization/JsonLinqContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonISerializableContract
#include "Newtonsoft/Json/Serialization/JsonISerializableContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonStringContract
#include "Newtonsoft/Json/Serialization/JsonStringContract.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: Newtonsoft.Json.MemberSerialization
#include "Newtonsoft/Json/MemberSerialization.hpp"
// Including type: Newtonsoft.Json.Serialization.IValueProvider
#include "Newtonsoft/Json/Serialization/IValueProvider.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Serialization.IContractResolver _instance
::Newtonsoft::Json::Serialization::IContractResolver* Newtonsoft::Json::Serialization::DefaultContractResolver::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::IContractResolver*>("Newtonsoft.Json.Serialization", "DefaultContractResolver", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Serialization.IContractResolver _instance
void Newtonsoft::Json::Serialization::DefaultContractResolver::_set__instance(::Newtonsoft::Json::Serialization::IContractResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.JsonConverter[] BuiltInConverters
::ArrayW<::Newtonsoft::Json::JsonConverter*> Newtonsoft::Json::Serialization::DefaultContractResolver::_get_BuiltInConverters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_get_BuiltInConverters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Newtonsoft::Json::JsonConverter*>>("Newtonsoft.Json.Serialization", "DefaultContractResolver", "BuiltInConverters"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.JsonConverter[] BuiltInConverters
void Newtonsoft::Json::Serialization::DefaultContractResolver::_set_BuiltInConverters(::ArrayW<::Newtonsoft::Json::JsonConverter*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_set_BuiltInConverters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver", "BuiltInConverters", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object TypeContractCacheLock
::Il2CppObject* Newtonsoft::Json::Serialization::DefaultContractResolver::_get_TypeContractCacheLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_get_TypeContractCacheLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Newtonsoft.Json.Serialization", "DefaultContractResolver", "TypeContractCacheLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object TypeContractCacheLock
void Newtonsoft::Json::Serialization::DefaultContractResolver::_set_TypeContractCacheLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_set_TypeContractCacheLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver", "TypeContractCacheLock", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Serialization.DefaultContractResolverState _sharedState
::Newtonsoft::Json::Serialization::DefaultContractResolverState* Newtonsoft::Json::Serialization::DefaultContractResolver::_get__sharedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_get__sharedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::DefaultContractResolverState*>("Newtonsoft.Json.Serialization", "DefaultContractResolver", "_sharedState"));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Serialization.DefaultContractResolverState _sharedState
void Newtonsoft::Json::Serialization::DefaultContractResolver::_set__sharedState(::Newtonsoft::Json::Serialization::DefaultContractResolverState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::_set__sharedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver", "_sharedState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Serialization.DefaultContractResolverState _instanceState
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::DefaultContractResolverState*& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn__instanceState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn__instanceState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instanceState"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::DefaultContractResolverState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _sharedCache
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn__sharedCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn__sharedCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sharedCache"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.BindingFlags <DefaultMembersSearchFlags>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::BindingFlags& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$DefaultMembersSearchFlags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$DefaultMembersSearchFlags$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultMembersSearchFlags>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::BindingFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SerializeCompilerGeneratedMembers>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$SerializeCompilerGeneratedMembers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$SerializeCompilerGeneratedMembers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SerializeCompilerGeneratedMembers>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreSerializableInterface>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreSerializableInterface$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreSerializableInterface$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreSerializableInterface>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreSerializableAttribute>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreSerializableAttribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::dyn_$IgnoreSerializableAttribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreSerializableAttribute>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_Instance
::Newtonsoft::Json::Serialization::IContractResolver* Newtonsoft::Json::Serialization::DefaultContractResolver::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::IContractResolver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_DefaultMembersSearchFlags
::System::Reflection::BindingFlags Newtonsoft::Json::Serialization::DefaultContractResolver::get_DefaultMembersSearchFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_DefaultMembersSearchFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultMembersSearchFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::BindingFlags, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.set_DefaultMembersSearchFlags
void Newtonsoft::Json::Serialization::DefaultContractResolver::set_DefaultMembersSearchFlags(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::set_DefaultMembersSearchFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultMembersSearchFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_SerializeCompilerGeneratedMembers
bool Newtonsoft::Json::Serialization::DefaultContractResolver::get_SerializeCompilerGeneratedMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_SerializeCompilerGeneratedMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerializeCompilerGeneratedMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_IgnoreSerializableInterface
bool Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreSerializableInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreSerializableInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreSerializableInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.get_IgnoreSerializableAttribute
bool Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreSerializableAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::get_IgnoreSerializableAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreSerializableAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.set_IgnoreSerializableAttribute
void Newtonsoft::Json::Serialization::DefaultContractResolver::set_IgnoreSerializableAttribute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::set_IgnoreSerializableAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreSerializableAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver..cctor
void Newtonsoft::Json::Serialization::DefaultContractResolver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetState
::Newtonsoft::Json::Serialization::DefaultContractResolverState* Newtonsoft::Json::Serialization::DefaultContractResolver::GetState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::DefaultContractResolverState*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveContract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers
::System::Collections::Generic::List_1<::System::Reflection::MemberInfo*>* Newtonsoft::Json::Serialization::DefaultContractResolver::GetSerializableMembers(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetSerializableMembers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializableMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Reflection::MemberInfo*>*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember
bool Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSerializeEntityMember(::System::Reflection::MemberInfo* memberInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSerializeEntityMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSerializeEntityMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, memberInfo);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract
::Newtonsoft::Json::Serialization::JsonObjectContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateObjectContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateObjectContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObjectContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonObjectContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType
::System::Reflection::MemberInfo* Newtonsoft::Json::Serialization::DefaultContractResolver::GetExtensionDataMemberForType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetExtensionDataMemberForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtensionDataMemberForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberInfo*, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates
void Newtonsoft::Json::Serialization::DefaultContractResolver::SetExtensionDataDelegates(::Newtonsoft::Json::Serialization::JsonObjectContract* contract, ::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::SetExtensionDataDelegates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "SetExtensionDataDelegates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(member)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, contract, member);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Serialization::DefaultContractResolver::GetAttributeConstructor(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetAttributeConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor
::System::Reflection::ConstructorInfo* Newtonsoft::Json::Serialization::DefaultContractResolver::GetParameterizedConstructor(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetParameterizedConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterizedConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::JsonProperty*>* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateConstructorParameters(::System::Reflection::ConstructorInfo* constructor, ::Newtonsoft::Json::Serialization::JsonPropertyCollection* memberProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateConstructorParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateConstructorParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constructor), ::il2cpp_utils::ExtractType(memberProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::JsonProperty*>*, false>(this, ___internal__method, constructor, memberProperties);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter
::Newtonsoft::Json::Serialization::JsonProperty* Newtonsoft::Json::Serialization::DefaultContractResolver::CreatePropertyFromConstructorParameter(::Newtonsoft::Json::Serialization::JsonProperty* matchingMemberProperty, ::System::Reflection::ParameterInfo* parameterInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreatePropertyFromConstructorParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePropertyFromConstructorParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchingMemberProperty), ::il2cpp_utils::ExtractType(parameterInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonProperty*, false>(this, ___internal__method, matchingMemberProperty, parameterInfo);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveContractConverter(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveContractConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveContractConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator
::System::Func_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::DefaultContractResolver::GetDefaultCreator(::System::Type* createdType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetDefaultCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(createdType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Il2CppObject*>*, false>(this, ___internal__method, createdType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract
void Newtonsoft::Json::Serialization::DefaultContractResolver::InitializeContract(::Newtonsoft::Json::Serialization::JsonContract* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::InitializeContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contract);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods
void Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveCallbackMethods(::Newtonsoft::Json::Serialization::JsonContract* contract, ::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveCallbackMethods");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveCallbackMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contract, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType
void Newtonsoft::Json::Serialization::DefaultContractResolver::GetCallbackMethodsForType(::System::Type* type, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*> onSerializing, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*> onSerialized, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*> onDeserializing, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*> onDeserialized, ByRef<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>*> onError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetCallbackMethodsForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCallbackMethodsForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, byref(onSerializing), byref(onSerialized), byref(onDeserializing), byref(onDeserialized), byref(onError));
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized
bool Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSkipDeserialized(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSkipDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "ShouldSkipDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing
bool Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSkipSerializing(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ShouldSkipSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "ShouldSkipSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType
::System::Collections::Generic::List_1<::System::Type*>* Newtonsoft::Json::Serialization::DefaultContractResolver::GetClassHierarchyForType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetClassHierarchyForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClassHierarchyForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Type*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract
::Newtonsoft::Json::Serialization::JsonDictionaryContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateDictionaryContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateDictionaryContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDictionaryContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonDictionaryContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract
::Newtonsoft::Json::Serialization::JsonArrayContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateArrayContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateArrayContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateArrayContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonArrayContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract
::Newtonsoft::Json::Serialization::JsonPrimitiveContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreatePrimitiveContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreatePrimitiveContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePrimitiveContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonPrimitiveContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract
::Newtonsoft::Json::Serialization::JsonLinqContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateLinqContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateLinqContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLinqContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonLinqContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract
::Newtonsoft::Json::Serialization::JsonISerializableContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateISerializableContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateISerializableContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateISerializableContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonISerializableContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract
::Newtonsoft::Json::Serialization::JsonStringContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateStringContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateStringContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateStringContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonStringContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateContract(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType
bool Newtonsoft::Json::Serialization::DefaultContractResolver::IsJsonPrimitiveType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::IsJsonPrimitiveType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "IsJsonPrimitiveType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible
bool Newtonsoft::Json::Serialization::DefaultContractResolver::IsIConvertible(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::IsIConvertible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "IsIConvertible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString
bool Newtonsoft::Json::Serialization::DefaultContractResolver::CanConvertToString(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CanConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "CanConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback
bool Newtonsoft::Json::Serialization::DefaultContractResolver::IsValidCallback(::System::Reflection::MethodInfo* method, ::ArrayW<::System::Reflection::ParameterInfo*> parameters, ::System::Type* attributeType, ::System::Reflection::MethodInfo* currentCallback, ByRef<::System::Type*> prevAttributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::IsValidCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "IsValidCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(currentCallback), ::il2cpp_utils::ExtractType(prevAttributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, parameters, attributeType, currentCallback, byref(prevAttributeType));
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::GetClrTypeFullName(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetClrTypeFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver", "GetClrTypeFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::JsonProperty*>* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateProperties(::System::Type* type, ::Newtonsoft::Json::MemberSerialization memberSerialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(memberSerialization)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::JsonProperty*>*, false>(this, ___internal__method, type, memberSerialization);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider
::Newtonsoft::Json::Serialization::IValueProvider* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateMemberValueProvider(::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateMemberValueProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMemberValueProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::IValueProvider*, false>(this, ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty
::Newtonsoft::Json::Serialization::JsonProperty* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateProperty(::System::Reflection::MemberInfo* member, ::Newtonsoft::Json::MemberSerialization memberSerialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(memberSerialization)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonProperty*, false>(this, ___internal__method, member, memberSerialization);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes
void Newtonsoft::Json::Serialization::DefaultContractResolver::SetPropertySettingsFromAttributes(::Newtonsoft::Json::Serialization::JsonProperty* property, ::Il2CppObject* attributeProvider, ::StringW name, ::System::Type* declaringType, ::Newtonsoft::Json::MemberSerialization memberSerialization, ByRef<bool> allowNonPublicAccess) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::SetPropertySettingsFromAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPropertySettingsFromAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(attributeProvider), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(declaringType), ::il2cpp_utils::ExtractType(memberSerialization), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, attributeProvider, name, declaringType, memberSerialization, byref(allowNonPublicAccess));
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest
::System::Predicate_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::DefaultContractResolver::CreateShouldSerializeTest(::System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::CreateShouldSerializeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateShouldSerializeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Predicate_1<::Il2CppObject*>*, false>(this, ___internal__method, member);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions
void Newtonsoft::Json::Serialization::DefaultContractResolver::SetIsSpecifiedActions(::Newtonsoft::Json::Serialization::JsonProperty* property, ::System::Reflection::MemberInfo* member, bool allowNonPublicAccess) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::SetIsSpecifiedActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsSpecifiedActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(allowNonPublicAccess)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, member, allowNonPublicAccess);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::ResolvePropertyName(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolvePropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolvePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveDictionaryKey(::StringW dictionaryKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::ResolveDictionaryKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveDictionaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dictionaryKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, dictionaryKey);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName
::StringW Newtonsoft::Json::Serialization::DefaultContractResolver::GetResolvedPropertyName(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::GetResolvedPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResolvedPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, propertyName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonProperty
#include "Newtonsoft/Json/Serialization/JsonProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c <>9
::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c <>9
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9(::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__30_0
::System::Func_2<::System::Reflection::MemberInfo*, bool>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__30_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__30_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MemberInfo*, bool>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__30_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__30_0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__30_0(::System::Func_2<::System::Reflection::MemberInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__30_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__30_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__30_1
::System::Func_2<::System::Reflection::MemberInfo*, bool>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__30_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__30_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MemberInfo*, bool>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__30_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__30_1
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__30_1(::System::Func_2<::System::Reflection::MemberInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__30_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__30_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Collections.Generic.IEnumerable`1<System.Reflection.MemberInfo>> <>9__33_0
::System::Func_2<::System::Type*, ::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>*>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__33_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__33_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>*>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__33_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Collections.Generic.IEnumerable`1<System.Reflection.MemberInfo>> <>9__33_0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__33_0(::System::Func_2<::System::Type*, ::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__33_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__33_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__33_1
::System::Func_2<::System::Reflection::MemberInfo*, bool>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__33_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__33_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::MemberInfo*, bool>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__33_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MemberInfo,System.Boolean> <>9__33_1
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__33_1(::System::Func_2<::System::Reflection::MemberInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__33_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__33_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__36_0
::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__36_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__36_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::ConstructorInfo*, bool>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__36_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>9__36_0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__36_0(::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__36_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__36_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,System.Int32> <>9__60_0
::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, int>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__60_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_get_$$9__60_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, int>*>("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__60_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Newtonsoft.Json.Serialization.JsonProperty,System.Int32> <>9__60_0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__60_0(::System::Func_2<::Newtonsoft::Json::Serialization::JsonProperty*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_set_$$9__60_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", "<>9__60_0", value)));
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c..cctor
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetSerializableMembers>b__30_0
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetSerializableMembers$b__30_0(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetSerializableMembers>b__30_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSerializableMembers>b__30_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetSerializableMembers>b__30_1
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetSerializableMembers$b__30_1(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetSerializableMembers>b__30_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSerializableMembers>b__30_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetExtensionDataMemberForType>b__33_0
::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetExtensionDataMemberForType$b__33_0(::System::Type* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetExtensionDataMemberForType>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetExtensionDataMemberForType>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::MemberInfo*>*, false>(this, ___internal__method, baseType);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetExtensionDataMemberForType>b__33_1
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetExtensionDataMemberForType$b__33_1(::System::Reflection::MemberInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetExtensionDataMemberForType>b__33_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetExtensionDataMemberForType>b__33_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<GetAttributeConstructor>b__36_0
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$GetAttributeConstructor$b__36_0(::System::Reflection::ConstructorInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<GetAttributeConstructor>b__36_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAttributeConstructor>b__36_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c.<CreateProperties>b__60_0
int Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::$CreateProperties$b__60_0(::Newtonsoft::Json::Serialization::JsonProperty* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c::<CreateProperties>b__60_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateProperties>b__60_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass34_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Object,System.Object> getExtensionDataDictionary
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0::dyn_getExtensionDataDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0::dyn_getExtensionDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getExtensionDataDictionary"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MemberInfo member
[[deprecated("Use field access instead!")]] ::System::Reflection::MemberInfo*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0::dyn_member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0::dyn_member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "member"))->offset;
  return *reinterpret_cast<::System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_1
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass34_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass34_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.Object,System.Object> setExtensionDataDictionary
[[deprecated("Use field access instead!")]] ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::dyn_setExtensionDataDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::dyn_setExtensionDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setExtensionDataDictionary"))->offset;
  return *reinterpret_cast<::System::Action_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Object> createExtensionDataDictionary
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::dyn_createExtensionDataDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::dyn_createExtensionDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createExtensionDataDictionary"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> setExtensionDataDictionaryValue
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::dyn_setExtensionDataDictionaryValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::dyn_setExtensionDataDictionaryValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setExtensionDataDictionaryValue"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_1.<SetExtensionDataDelegates>b__0
void Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::$SetExtensionDataDelegates$b__0(::Il2CppObject* o, ::StringW key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::<SetExtensionDataDelegates>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetExtensionDataDelegates>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_2
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass34_2.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass34_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> createEnumerableWrapper
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_2::dyn_createEnumerableWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_2::dyn_createEnumerableWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createEnumerableWrapper"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_0 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_2.<SetExtensionDataDelegates>b__1
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>* Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_2::$SetExtensionDataDelegates$b__1(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_2::<SetExtensionDataDelegates>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetExtensionDataDelegates>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass64_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass64_0.hpp"
// Including type: Newtonsoft.Json.Utilities.MethodCall`2
#include "Newtonsoft/Json/Utilities/MethodCall_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> shouldSerializeCall
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass64_0::dyn_shouldSerializeCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass64_0::dyn_shouldSerializeCall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldSerializeCall"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass64_0.<CreateShouldSerializeTest>b__0
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass64_0::$CreateShouldSerializeTest$b__0(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass64_0::<CreateShouldSerializeTest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateShouldSerializeTest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass65_0
#include "Newtonsoft/Json/Serialization/DefaultContractResolver_--c__DisplayClass65_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Object,System.Object> specifiedPropertyGet
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::Il2CppObject*>*& Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass65_0::dyn_specifiedPropertyGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass65_0::dyn_specifiedPropertyGet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "specifiedPropertyGet"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass65_0.<SetIsSpecifiedActions>b__0
bool Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass65_0::$SetIsSpecifiedActions$b__0(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass65_0::<SetIsSpecifiedActions>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetIsSpecifiedActions>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.DefaultSerializationBinder
#include "Newtonsoft/Json/Serialization/DefaultSerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly Newtonsoft.Json.Serialization.DefaultSerializationBinder Instance
::Newtonsoft::Json::Serialization::DefaultSerializationBinder* Newtonsoft::Json::Serialization::DefaultSerializationBinder::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::DefaultSerializationBinder*>("Newtonsoft.Json.Serialization", "DefaultSerializationBinder", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly Newtonsoft.Json.Serialization.DefaultSerializationBinder Instance
void Newtonsoft::Json::Serialization::DefaultSerializationBinder::_set_Instance(::Newtonsoft::Json::Serialization::DefaultSerializationBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "DefaultSerializationBinder", "Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<Newtonsoft.Json.Serialization.DefaultSerializationBinder/Newtonsoft.Json.Serialization.TypeNameKey,System.Type> _typeCache
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey, ::System::Type*>*& Newtonsoft::Json::Serialization::DefaultSerializationBinder::dyn__typeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::dyn__typeCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeCache"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey, ::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder..cctor
void Newtonsoft::Json::Serialization::DefaultSerializationBinder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultSerializationBinder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey
::System::Type* Newtonsoft::Json::Serialization::DefaultSerializationBinder::GetTypeFromTypeNameKey(::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey typeNameKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::GetTypeFromTypeNameKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "DefaultSerializationBinder", "GetTypeFromTypeNameKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeNameKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeNameKey);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType
::System::Type* Newtonsoft::Json::Serialization::DefaultSerializationBinder::BindToType(::StringW assemblyName, ::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.DefaultSerializationBinder/Newtonsoft.Json.Serialization.TypeNameKey
#include "Newtonsoft/Json/Serialization/DefaultSerializationBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String AssemblyName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::dyn_AssemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::dyn_AssemblyName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssemblyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.String TypeName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::dyn_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::dyn_TypeName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder/Newtonsoft.Json.Serialization.TypeNameKey..ctor
// ABORTED elsewhere.  Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::TypeNameKey(::StringW assemblyName, ::StringW typeName)
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder/Newtonsoft.Json.Serialization.TypeNameKey.Equals
bool Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::Equals(::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder/Newtonsoft.Json.Serialization.TypeNameKey.GetHashCode
int Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.DefaultSerializationBinder/Newtonsoft.Json.Serialization.TypeNameKey.Equals
bool Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultSerializationBinder::TypeNameKey::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Traced>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Traced$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Traced$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Traced>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Exception*& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <OriginalObject>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::ErrorContext::dyn_$OriginalObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$OriginalObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OriginalObject>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <Member>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Member$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Member$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Member>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Path>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Path$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Path$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Path>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Handled>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::ErrorContext::dyn_$Handled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::dyn_$Handled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.get_Traced
bool Newtonsoft::Json::Serialization::ErrorContext::get_Traced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::get_Traced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Traced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.set_Traced
void Newtonsoft::Json::Serialization::ErrorContext::set_Traced(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::set_Traced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Traced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.get_Error
::System::Exception* Newtonsoft::Json::Serialization::ErrorContext::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::get_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.set_Error
void Newtonsoft::Json::Serialization::ErrorContext::set_Error(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::set_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.set_OriginalObject
void Newtonsoft::Json::Serialization::ErrorContext::set_OriginalObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::set_OriginalObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OriginalObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.set_Member
void Newtonsoft::Json::Serialization::ErrorContext::set_Member(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::set_Member");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Member", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.set_Path
void Newtonsoft::Json::Serialization::ErrorContext::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ErrorContext.get_Handled
bool Newtonsoft::Json::Serialization::ErrorContext::get_Handled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ErrorContext::get_Handled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.IContractResolver
#include "Newtonsoft/Json/Serialization/IContractResolver.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.IContractResolver.ResolveContract
::Newtonsoft::Json::Serialization::JsonContract* Newtonsoft::Json::Serialization::IContractResolver::ResolveContract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IContractResolver::ResolveContract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::JsonContract*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.IValueProvider
#include "Newtonsoft/Json/Serialization/IValueProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.IValueProvider.SetValue
void Newtonsoft::Json::Serialization::IValueProvider::SetValue(::Il2CppObject* target, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IValueProvider::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.IValueProvider.GetValue
::Il2CppObject* Newtonsoft::Json::Serialization::IValueProvider::GetValue(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::IValueProvider::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonArrayContract
#include "Newtonsoft/Json/Serialization/JsonArrayContract.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Serialization.ObjectConstructor`1
#include "Newtonsoft/Json/Serialization/ObjectConstructor_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Newtonsoft.Json.Utilities.IWrappedCollection
#include "Newtonsoft/Json/Utilities/IWrappedCollection.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <CollectionItemType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$CollectionItemType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$CollectionItemType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CollectionItemType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsMultidimensionalArray>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$IsMultidimensionalArray$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$IsMultidimensionalArray$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsMultidimensionalArray>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _genericCollectionDefinitionType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericCollectionDefinitionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericCollectionDefinitionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericCollectionDefinitionType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _genericWrapperType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericWrapperType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericWrapperType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericWrapperType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _genericWrapperCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericWrapperCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericWrapperCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericWrapperCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Object> _genericTemporaryCollectionCreator
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericTemporaryCollectionCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__genericTemporaryCollectionCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_genericTemporaryCollectionCreator"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsArray>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$IsArray$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$IsArray$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsArray>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ShouldCreateWrapper>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$ShouldCreateWrapper$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$ShouldCreateWrapper$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ShouldCreateWrapper>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CanDeserialize>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$CanDeserialize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$CanDeserialize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CanDeserialize>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.ConstructorInfo _parameterizedConstructor
[[deprecated("Use field access instead!")]] ::System::Reflection::ConstructorInfo*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__parameterizedConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__parameterizedConstructor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterizedConstructor"))->offset;
  return *reinterpret_cast<::System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _parameterizedCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__parameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__parameterizedCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterizedCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> _overrideCreator
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonArrayContract::dyn__overrideCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn__overrideCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideCreator"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasParameterizedCreator>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$HasParameterizedCreator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::dyn_$HasParameterizedCreator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasParameterizedCreator>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_CollectionItemType
::System::Type* Newtonsoft::Json::Serialization::JsonArrayContract::get_CollectionItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_CollectionItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CollectionItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_CollectionItemType
void Newtonsoft::Json::Serialization::JsonArrayContract::set_CollectionItemType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_CollectionItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CollectionItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_IsMultidimensionalArray
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_IsMultidimensionalArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_IsMultidimensionalArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMultidimensionalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_IsMultidimensionalArray
void Newtonsoft::Json::Serialization::JsonArrayContract::set_IsMultidimensionalArray(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_IsMultidimensionalArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsMultidimensionalArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_IsArray
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_IsArray
void Newtonsoft::Json::Serialization::JsonArrayContract::set_IsArray(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_ShouldCreateWrapper
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_ShouldCreateWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_ShouldCreateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldCreateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_ShouldCreateWrapper
void Newtonsoft::Json::Serialization::JsonArrayContract::set_ShouldCreateWrapper(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_ShouldCreateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShouldCreateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_CanDeserialize
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_CanDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_CanDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_CanDeserialize
void Newtonsoft::Json::Serialization::JsonArrayContract::set_CanDeserialize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_CanDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CanDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_ParameterizedCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonArrayContract::get_ParameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_ParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_OverrideCreator
::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonArrayContract::get_OverrideCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_OverrideCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverrideCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_OverrideCreator
void Newtonsoft::Json::Serialization::JsonArrayContract::set_OverrideCreator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_OverrideCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OverrideCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_HasParameterizedCreator
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_HasParameterizedCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_HasParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.set_HasParameterizedCreator
void Newtonsoft::Json::Serialization::JsonArrayContract::set_HasParameterizedCreator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::set_HasParameterizedCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasParameterizedCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.get_HasParameterizedCreatorInternal
bool Newtonsoft::Json::Serialization::JsonArrayContract::get_HasParameterizedCreatorInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::get_HasParameterizedCreatorInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasParameterizedCreatorInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper
::Newtonsoft::Json::Utilities::IWrappedCollection* Newtonsoft::Json::Serialization::JsonArrayContract::CreateWrapper(::Il2CppObject* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::CreateWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::IWrappedCollection*, false>(this, ___internal__method, list);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection
::System::Collections::IList* Newtonsoft::Json::Serialization::JsonArrayContract::CreateTemporaryCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonArrayContract::CreateTemporaryCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTemporaryCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Serialization.JsonContractType
#include "Newtonsoft/Json/Serialization/JsonContractType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType None
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType None
void Newtonsoft::Json::Serialization::JsonContractType::_set_None(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Object
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Object
void Newtonsoft::Json::Serialization::JsonContractType::_set_Object(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Array
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Array
void Newtonsoft::Json::Serialization::JsonContractType::_set_Array(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Primitive
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Primitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Primitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Primitive"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Primitive
void Newtonsoft::Json::Serialization::JsonContractType::_set_Primitive(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Primitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Primitive", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType String
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType String
void Newtonsoft::Json::Serialization::JsonContractType::_set_String(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Dictionary
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Dictionary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Dictionary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Dictionary
void Newtonsoft::Json::Serialization::JsonContractType::_set_Dictionary(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Dictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Dictionary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Dynamic
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Dynamic
void Newtonsoft::Json::Serialization::JsonContractType::_set_Dynamic(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Serializable
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Serializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Serializable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Serializable"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Serializable
void Newtonsoft::Json::Serialization::JsonContractType::_set_Serializable(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Serializable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Serializable", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Serialization.JsonContractType Linq
::Newtonsoft::Json::Serialization::JsonContractType Newtonsoft::Json::Serialization::JsonContractType::_get_Linq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_get_Linq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Serialization::JsonContractType>("Newtonsoft.Json.Serialization", "JsonContractType", "Linq"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Serialization.JsonContractType Linq
void Newtonsoft::Json::Serialization::JsonContractType::_set_Linq(::Newtonsoft::Json::Serialization::JsonContractType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::_set_Linq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Serialization", "JsonContractType", "Linq", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Serialization::JsonContractType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContractType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.SerializationCallback
#include "Newtonsoft/Json/Serialization/SerializationCallback.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationCallback.Invoke
void Newtonsoft::Json::Serialization::SerializationCallback::Invoke(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationCallback.BeginInvoke
::System::IAsyncResult* Newtonsoft::Json::Serialization::SerializationCallback::BeginInvoke(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, context, callback, object);
}
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationCallback.EndInvoke
void Newtonsoft::Json::Serialization::SerializationCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.SerializationErrorCallback
#include "Newtonsoft/Json/Serialization/SerializationErrorCallback.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationErrorCallback.Invoke
void Newtonsoft::Json::Serialization::SerializationErrorCallback::Invoke(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::Newtonsoft::Json::Serialization::ErrorContext* errorContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationErrorCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(errorContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context, errorContext);
}
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationErrorCallback.BeginInvoke
::System::IAsyncResult* Newtonsoft::Json::Serialization::SerializationErrorCallback::BeginInvoke(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::Newtonsoft::Json::Serialization::ErrorContext* errorContext, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationErrorCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(errorContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, context, errorContext, callback, object);
}
// Autogenerated method: Newtonsoft.Json.Serialization.SerializationErrorCallback.EndInvoke
void Newtonsoft::Json::Serialization::SerializationErrorCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::SerializationErrorCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ExtensionDataSetter
#include "Newtonsoft/Json/Serialization/ExtensionDataSetter.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke
void Newtonsoft::Json::Serialization::ExtensionDataSetter::Invoke(::Il2CppObject* o, ::StringW key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataSetter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, key, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataSetter.BeginInvoke
::System::IAsyncResult* Newtonsoft::Json::Serialization::ExtensionDataSetter::BeginInvoke(::Il2CppObject* o, ::StringW key, ::Il2CppObject* value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataSetter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, key, value, callback, object);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataSetter.EndInvoke
void Newtonsoft::Json::Serialization::ExtensionDataSetter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataSetter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.ExtensionDataGetter
#include "Newtonsoft/Json/Serialization/ExtensionDataGetter.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataGetter.Invoke
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>* Newtonsoft::Json::Serialization::ExtensionDataGetter::Invoke(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataGetter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*, false>(this, ___internal__method, o);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataGetter.BeginInvoke
::System::IAsyncResult* Newtonsoft::Json::Serialization::ExtensionDataGetter::BeginInvoke(::Il2CppObject* o, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataGetter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, o, callback, object);
}
// Autogenerated method: Newtonsoft.Json.Serialization.ExtensionDataGetter.EndInvoke
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>* Newtonsoft::Json::Serialization::ExtensionDataGetter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::ExtensionDataGetter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::Il2CppObject*, ::Il2CppObject*>>*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Serialization.JsonContract
#include "Newtonsoft/Json/Serialization/JsonContract.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract/Newtonsoft.Json.Serialization.<>c__DisplayClass73_0
#include "Newtonsoft/Json/Serialization/JsonContract_--c__DisplayClass73_0.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContract/Newtonsoft.Json.Serialization.<>c__DisplayClass74_0
#include "Newtonsoft/Json/Serialization/JsonContract_--c__DisplayClass74_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.Serialization.SerializationCallback
#include "Newtonsoft/Json/Serialization/SerializationCallback.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: Newtonsoft.Json.Serialization.SerializationErrorCallback
#include "Newtonsoft/Json/Serialization/SerializationErrorCallback.hpp"
// Including type: Newtonsoft.Json.JsonConverter
#include "Newtonsoft/Json/JsonConverter.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: Newtonsoft.Json.Serialization.ErrorContext
#include "Newtonsoft/Json/Serialization/ErrorContext.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Boolean IsNullable
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsNullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsNullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsConvertable
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsConvertable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsConvertable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsConvertable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsEnum
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsEnum"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Type NonNullableUnderlyingType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonContract::dyn_NonNullableUnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_NonNullableUnderlyingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NonNullableUnderlyingType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.ReadType InternalReadType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::ReadType& Newtonsoft::Json::Serialization::JsonContract::dyn_InternalReadType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_InternalReadType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalReadType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::ReadType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.Serialization.JsonContractType ContractType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContractType& Newtonsoft::Json::Serialization::JsonContract::dyn_ContractType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_ContractType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContractType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Serialization::JsonContractType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsReadOnlyOrFixedSize
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsReadOnlyOrFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsReadOnlyOrFixedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsReadOnlyOrFixedSize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsSealed
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsSealed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsSealed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsSealed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsInstantiable
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_IsInstantiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_IsInstantiable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsInstantiable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Serialization.SerializationCallback> _onDeserializedCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onDeserializedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onDeserializedCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onDeserializedCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Serialization::SerializationCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<Newtonsoft.Json.Serialization.SerializationCallback> _onDeserializingCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onDeserializingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onDeserializingCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onDeserializingCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<Newtonsoft.Json.Serialization.SerializationCallback> _onSerializedCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onSerializedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onSerializedCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onSerializedCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<Newtonsoft.Json.Serialization.SerializationCallback> _onSerializingCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onSerializingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onSerializingCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onSerializingCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<Newtonsoft.Json.Serialization.SerializationErrorCallback> _onErrorCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>*& Newtonsoft::Json::Serialization::JsonContract::dyn__onErrorCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__onErrorCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onErrorCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _createdType
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonContract::dyn__createdType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn__createdType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createdType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <UnderlyingType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::Serialization::JsonContract::dyn_$UnderlyingType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$UnderlyingType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnderlyingType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> <IsReference>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::Serialization::JsonContract::dyn_$IsReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$IsReference$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsReference>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonConverter <Converter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& Newtonsoft::Json::Serialization::JsonContract::dyn_$Converter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$Converter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Converter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.JsonConverter <InternalConverter>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& Newtonsoft::Json::Serialization::JsonContract::dyn_$InternalConverter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$InternalConverter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InternalConverter>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Object> <DefaultCreator>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Newtonsoft::Json::Serialization::JsonContract::dyn_$DefaultCreator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$DefaultCreator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultCreator>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DefaultCreatorNonPublic>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Serialization::JsonContract::dyn_$DefaultCreatorNonPublic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::dyn_$DefaultCreatorNonPublic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultCreatorNonPublic>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_UnderlyingType
::System::Type* Newtonsoft::Json::Serialization::JsonContract::get_UnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_UnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_UnderlyingType
void Newtonsoft::Json::Serialization::JsonContract::set_UnderlyingType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_UnderlyingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_CreatedType
::System::Type* Newtonsoft::Json::Serialization::JsonContract::get_CreatedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_CreatedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreatedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_CreatedType
void Newtonsoft::Json::Serialization::JsonContract::set_CreatedType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_CreatedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CreatedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_IsReference
::System::Nullable_1<bool> Newtonsoft::Json::Serialization::JsonContract::get_IsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_IsReference
void Newtonsoft::Json::Serialization::JsonContract::set_IsReference(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_Converter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonContract::get_Converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_Converter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Converter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_Converter
void Newtonsoft::Json::Serialization::JsonContract::set_Converter(::Newtonsoft::Json::JsonConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_Converter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Converter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_InternalConverter
::Newtonsoft::Json::JsonConverter* Newtonsoft::Json::Serialization::JsonContract::get_InternalConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_InternalConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::JsonConverter*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_InternalConverter
void Newtonsoft::Json::Serialization::JsonContract::set_InternalConverter(::Newtonsoft::Json::JsonConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_InternalConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnDeserializedCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnDeserializedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnDeserializedCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnDeserializedCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnDeserializingCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnDeserializingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnDeserializingCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnDeserializingCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnSerializedCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnSerializedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnSerializedCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnSerializedCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnSerializingCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnSerializingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnSerializingCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnSerializingCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_OnErrorCallbacks
::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>* Newtonsoft::Json::Serialization::JsonContract::get_OnErrorCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_OnErrorCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnErrorCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::Newtonsoft::Json::Serialization::SerializationErrorCallback*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_DefaultCreator
::System::Func_1<::Il2CppObject*>* Newtonsoft::Json::Serialization::JsonContract::get_DefaultCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_DefaultCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_DefaultCreator
void Newtonsoft::Json::Serialization::JsonContract::set_DefaultCreator(::System::Func_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_DefaultCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.get_DefaultCreatorNonPublic
bool Newtonsoft::Json::Serialization::JsonContract::get_DefaultCreatorNonPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::get_DefaultCreatorNonPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultCreatorNonPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.set_DefaultCreatorNonPublic
void Newtonsoft::Json::Serialization::JsonContract::set_DefaultCreatorNonPublic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::set_DefaultCreatorNonPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultCreatorNonPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnSerializing(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnSerialized(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnSerialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnSerialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnDeserializing(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnDeserialized(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.InvokeOnError
void Newtonsoft::Json::Serialization::JsonContract::InvokeOnError(::Il2CppObject* o, ::System::Runtime::Serialization::StreamingContext context, ::Newtonsoft::Json::Serialization::ErrorContext* errorContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::InvokeOnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(errorContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, context, errorContext);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback
::Newtonsoft::Json::Serialization::SerializationCallback* Newtonsoft::Json::Serialization::JsonContract::CreateSerializationCallback(::System::Reflection::MethodInfo* callbackMethodInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::CreateSerializationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonContract", "CreateSerializationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackMethodInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::SerializationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackMethodInfo);
}
// Autogenerated method: Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback
::Newtonsoft::Json::Serialization::SerializationErrorCallback* Newtonsoft::Json::Serialization::JsonContract::CreateSerializationErrorCallback(::System::Reflection::MethodInfo* callbackMethodInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonContract::CreateSerializationErrorCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Serialization", "JsonContract", "CreateSerializationErrorCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackMethodInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Serialization::SerializationErrorCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackMethodInfo);
}
