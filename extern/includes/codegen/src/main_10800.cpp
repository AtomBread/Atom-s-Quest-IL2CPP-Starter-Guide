// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioDataLoadState
#include "UnityEngine/AudioDataLoadState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Unloaded
::UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Unloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_get_Unloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Unloaded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Unloaded
void UnityEngine::AudioDataLoadState::_set_Unloaded(::UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_set_Unloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Unloaded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Loading
::UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Loading
void UnityEngine::AudioDataLoadState::_set_Loading(::UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Loaded
::UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Loaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_get_Loaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Loaded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Loaded
void UnityEngine::AudioDataLoadState::_set_Loaded(::UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_set_Loaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Loaded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Failed
::UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Failed
void UnityEngine::AudioDataLoadState::_set_Failed(::UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioDataLoadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioDataLoadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.FFTWindow
#include "UnityEngine/FFTWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Rectangular
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Rectangular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Rectangular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Rectangular"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Rectangular
void UnityEngine::FFTWindow::_set_Rectangular(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Rectangular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Rectangular", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Triangle
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Triangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Triangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Triangle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Triangle
void UnityEngine::FFTWindow::_set_Triangle(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Triangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Triangle", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Hamming
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Hamming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Hamming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Hamming"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Hamming
void UnityEngine::FFTWindow::_set_Hamming(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Hamming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Hamming", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Hanning
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Hanning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Hanning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Hanning"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Hanning
void UnityEngine::FFTWindow::_set_Hanning(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Hanning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Hanning", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Blackman
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Blackman() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_Blackman");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Blackman"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Blackman
void UnityEngine::FFTWindow::_set_Blackman(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_Blackman");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Blackman", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow BlackmanHarris
::UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_BlackmanHarris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_get_BlackmanHarris");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "BlackmanHarris"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow BlackmanHarris
void UnityEngine::FFTWindow::_set_BlackmanHarris(::UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::_set_BlackmanHarris");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "BlackmanHarris", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::FFTWindow::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::FFTWindow::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSettings
#include "UnityEngine/AudioSettings.hpp"
// Including type: UnityEngine.AudioSettings/UnityEngine.AudioConfigurationChangeHandler
#include "UnityEngine/AudioSettings_AudioConfigurationChangeHandler.hpp"
// Including type: UnityEngine.AudioSettings/UnityEngine.Mobile
#include "UnityEngine/AudioSettings_Mobile.hpp"
// Including type: UnityEngine.AudioConfiguration
#include "UnityEngine/AudioConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x1073C88
// Autogenerated static field getter
// Get static field: static private UnityEngine.AudioSettings/UnityEngine.AudioConfigurationChangeHandler OnAudioConfigurationChanged
::UnityEngine::AudioSettings::AudioConfigurationChangeHandler* UnityEngine::AudioSettings::_get_OnAudioConfigurationChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::_get_OnAudioConfigurationChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioSettings::AudioConfigurationChangeHandler*>("UnityEngine", "AudioSettings", "OnAudioConfigurationChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AudioSettings/UnityEngine.AudioConfigurationChangeHandler OnAudioConfigurationChanged
void UnityEngine::AudioSettings::_set_OnAudioConfigurationChanged(::UnityEngine::AudioSettings::AudioConfigurationChangeHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::_set_OnAudioConfigurationChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings", "OnAudioConfigurationChanged", value));
}
// Autogenerated method: UnityEngine.AudioSettings.get_dspTime
double UnityEngine::AudioSettings::get_dspTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::get_dspTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "get_dspTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.get_outputSampleRate
int UnityEngine::AudioSettings::get_outputSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::get_outputSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "get_outputSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetSampleRate
int UnityEngine::AudioSettings::GetSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetSpatializerPluginName
::StringW UnityEngine::AudioSettings::GetSpatializerPluginName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetSpatializerPluginName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetSpatializerPluginName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetConfiguration
::UnityEngine::AudioConfiguration UnityEngine::AudioSettings::GetConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioConfiguration, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.InvokeOnAudioConfigurationChanged
void UnityEngine::AudioSettings::InvokeOnAudioConfigurationChanged(bool deviceWasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::InvokeOnAudioConfigurationChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "InvokeOnAudioConfigurationChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceWasChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceWasChanged);
}
// Autogenerated method: UnityEngine.AudioSettings.StartAudioOutput
bool UnityEngine::AudioSettings::StartAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::StartAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "StartAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.StopAudioOutput
bool UnityEngine::AudioSettings::StopAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::StopAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "StopAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetConfiguration_Injected
void UnityEngine::AudioSettings::GetConfiguration_Injected(ByRef<::UnityEngine::AudioConfiguration> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::GetConfiguration_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetConfiguration_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::AudioConfiguration&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioSettings/UnityEngine.AudioConfigurationChangeHandler
#include "UnityEngine/AudioSettings_AudioConfigurationChangeHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.AudioConfigurationChangeHandler.Invoke
void UnityEngine::AudioSettings::AudioConfigurationChangeHandler::Invoke(bool deviceWasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::AudioConfigurationChangeHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceWasChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deviceWasChanged);
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.AudioConfigurationChangeHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::AudioSettings::AudioConfigurationChangeHandler::BeginInvoke(bool deviceWasChanged, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::AudioConfigurationChangeHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceWasChanged), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, deviceWasChanged, callback, object);
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.AudioConfigurationChangeHandler.EndInvoke
void UnityEngine::AudioSettings::AudioConfigurationChangeHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::AudioConfigurationChangeHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSettings/UnityEngine.Mobile
#include "UnityEngine/AudioSettings_Mobile.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x1073CC4
// Autogenerated static field getter
// Get static field: static private System.Boolean <muteState>k__BackingField
bool UnityEngine::AudioSettings::Mobile::_get_$muteState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_get_$muteState$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AudioSettings/Mobile", "<muteState>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <muteState>k__BackingField
void UnityEngine::AudioSettings::Mobile::_set_$muteState$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_set_$muteState$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "<muteState>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _stopAudioOutputOnMute
bool UnityEngine::AudioSettings::Mobile::_get__stopAudioOutputOnMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_get__stopAudioOutputOnMute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AudioSettings/Mobile", "_stopAudioOutputOnMute"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _stopAudioOutputOnMute
void UnityEngine::AudioSettings::Mobile::_set__stopAudioOutputOnMute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_set__stopAudioOutputOnMute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "_stopAudioOutputOnMute", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x1073D00
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Boolean> OnMuteStateChanged
::System::Action_1<bool>* UnityEngine::AudioSettings::Mobile::_get_OnMuteStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_get_OnMuteStateChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("UnityEngine", "AudioSettings/Mobile", "OnMuteStateChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Boolean> OnMuteStateChanged
void UnityEngine::AudioSettings::Mobile::_set_OnMuteStateChanged(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::_set_OnMuteStateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "OnMuteStateChanged", value));
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.Mobile.get_muteState
bool UnityEngine::AudioSettings::Mobile::get_muteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::get_muteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "get_muteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.Mobile.set_muteState
void UnityEngine::AudioSettings::Mobile::set_muteState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::set_muteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "set_muteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.Mobile.get_stopAudioOutputOnMute
bool UnityEngine::AudioSettings::Mobile::get_stopAudioOutputOnMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::get_stopAudioOutputOnMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "get_stopAudioOutputOnMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.Mobile..cctor
void UnityEngine::AudioSettings::Mobile::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.Mobile.InvokeOnMuteStateChanged
void UnityEngine::AudioSettings::Mobile::InvokeOnMuteStateChanged(bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::InvokeOnMuteStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "InvokeOnMuteStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mute);
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.Mobile.StartAudioOutput
void UnityEngine::AudioSettings::Mobile::StartAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::StartAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "StartAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/UnityEngine.Mobile.StopAudioOutput
void UnityEngine::AudioSettings::Mobile::StopAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSettings::Mobile::StopAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "StopAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioClip/UnityEngine.PCMReaderCallback
#include "UnityEngine/AudioClip_PCMReaderCallback.hpp"
// Including type: UnityEngine.AudioClip/UnityEngine.PCMSetPositionCallback
#include "UnityEngine/AudioClip_PCMSetPositionCallback.hpp"
// Including type: UnityEngine.AudioDataLoadState
#include "UnityEngine/AudioDataLoadState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip/UnityEngine.PCMReaderCallback m_PCMReaderCallback
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip::PCMReaderCallback*& UnityEngine::AudioClip::dyn_m_PCMReaderCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::dyn_m_PCMReaderCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PCMReaderCallback"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip::PCMReaderCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip/UnityEngine.PCMSetPositionCallback m_PCMSetPositionCallback
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip::PCMSetPositionCallback*& UnityEngine::AudioClip::dyn_m_PCMSetPositionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::dyn_m_PCMSetPositionCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PCMSetPositionCallback"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip::PCMSetPositionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AudioClip.get_length
float UnityEngine::AudioClip::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_samples
int UnityEngine::AudioClip::get_samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_channels
int UnityEngine::AudioClip::get_channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_frequency
int UnityEngine::AudioClip::get_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_frequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_loadState
::UnityEngine::AudioDataLoadState UnityEngine::AudioClip::get_loadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::get_loadState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioDataLoadState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.add_m_PCMReaderCallback
void UnityEngine::AudioClip::add_m_PCMReaderCallback(::UnityEngine::AudioClip::PCMReaderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::add_m_PCMReaderCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_m_PCMReaderCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.remove_m_PCMReaderCallback
void UnityEngine::AudioClip::remove_m_PCMReaderCallback(::UnityEngine::AudioClip::PCMReaderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::remove_m_PCMReaderCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_m_PCMReaderCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.add_m_PCMSetPositionCallback
void UnityEngine::AudioClip::add_m_PCMSetPositionCallback(::UnityEngine::AudioClip::PCMSetPositionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::add_m_PCMSetPositionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_m_PCMSetPositionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.remove_m_PCMSetPositionCallback
void UnityEngine::AudioClip::remove_m_PCMSetPositionCallback(::UnityEngine::AudioClip::PCMSetPositionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::remove_m_PCMSetPositionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_m_PCMSetPositionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.GetData
bool UnityEngine::AudioClip::GetData(::UnityEngine::AudioClip* clip, ByRef<::ArrayW<float>> data, int numSamples, int samplesOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>(), ::il2cpp_utils::ExtractType(numSamples), ::il2cpp_utils::ExtractType(samplesOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, byref(data), numSamples, samplesOffset);
}
// Autogenerated method: UnityEngine.AudioClip.SetData
bool UnityEngine::AudioClip::SetData(::UnityEngine::AudioClip* clip, ::ArrayW<float> data, int numsamples, int samplesOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numsamples), ::il2cpp_utils::ExtractType(samplesOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, data, numsamples, samplesOffset);
}
// Autogenerated method: UnityEngine.AudioClip.Construct_Internal
::UnityEngine::AudioClip* UnityEngine::AudioClip::Construct_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Construct_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Construct_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.GetName
::StringW UnityEngine::AudioClip::GetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.CreateUserSound
void UnityEngine::AudioClip::CreateUserSound(::StringW name, int lengthSamples, int channels, int frequency, bool stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::CreateUserSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUserSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, lengthSamples, channels, frequency, stream);
}
// Autogenerated method: UnityEngine.AudioClip.LoadAudioData
bool UnityEngine::AudioClip::LoadAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::LoadAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.UnloadAudioData
bool UnityEngine::AudioClip::UnloadAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::UnloadAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.GetData
bool UnityEngine::AudioClip::GetData(::ArrayW<float> data, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offsetSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, offsetSamples);
}
// Autogenerated method: UnityEngine.AudioClip.SetData
bool UnityEngine::AudioClip::SetData(::ArrayW<float> data, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offsetSamples)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, offsetSamples);
}
// Autogenerated method: UnityEngine.AudioClip.Create
::UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::StringW name, int lengthSamples, int channels, int frequency, bool stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, stream);
}
// Autogenerated method: UnityEngine.AudioClip.Create
::UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::StringW name, int lengthSamples, int channels, int frequency, bool stream, ::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback, ::UnityEngine::AudioClip::PCMSetPositionCallback* pcmsetpositioncallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(pcmreadercallback), ::il2cpp_utils::ExtractType(pcmsetpositioncallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, stream, pcmreadercallback, pcmsetpositioncallback);
}
// Autogenerated method: UnityEngine.AudioClip.InvokePCMReaderCallback_Internal
void UnityEngine::AudioClip::InvokePCMReaderCallback_Internal(::ArrayW<float> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::InvokePCMReaderCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePCMReaderCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.AudioClip.InvokePCMSetPositionCallback_Internal
void UnityEngine::AudioClip::InvokePCMSetPositionCallback_Internal(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::InvokePCMSetPositionCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePCMSetPositionCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioClip/UnityEngine.PCMReaderCallback
#include "UnityEngine/AudioClip_PCMReaderCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioClip/UnityEngine.PCMReaderCallback.Invoke
void UnityEngine::AudioClip::PCMReaderCallback::Invoke(::ArrayW<float> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::PCMReaderCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.AudioClip/UnityEngine.PCMReaderCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::AudioClip::PCMReaderCallback::BeginInvoke(::ArrayW<float> data, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::PCMReaderCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, data, callback, object);
}
// Autogenerated method: UnityEngine.AudioClip/UnityEngine.PCMReaderCallback.EndInvoke
void UnityEngine::AudioClip::PCMReaderCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::PCMReaderCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioClip/UnityEngine.PCMSetPositionCallback
#include "UnityEngine/AudioClip_PCMSetPositionCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioClip/UnityEngine.PCMSetPositionCallback.Invoke
void UnityEngine::AudioClip::PCMSetPositionCallback::Invoke(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::PCMSetPositionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.AudioClip/UnityEngine.PCMSetPositionCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::AudioClip::PCMSetPositionCallback::BeginInvoke(int position, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::PCMSetPositionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, position, callback, object);
}
// Autogenerated method: UnityEngine.AudioClip/UnityEngine.PCMSetPositionCallback.EndInvoke
void UnityEngine::AudioClip::PCMSetPositionCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioClip::PCMSetPositionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioListener.get_pause
bool UnityEngine::AudioListener::get_pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioListener::get_pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioListener", "get_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioListener.set_pause
void UnityEngine::AudioListener::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioListener::set_pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioListener", "set_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.FFTWindow
#include "UnityEngine/FFTWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioSource.get_volume
float UnityEngine::AudioSource::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_volume
void UnityEngine::AudioSource::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_pitch
float UnityEngine::AudioSource::get_pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::get_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_pitch
void UnityEngine::AudioSource::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_time
float UnityEngine::AudioSource::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_time
void UnityEngine::AudioSource::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_timeSamples
int UnityEngine::AudioSource::get_timeSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::get_timeSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.get_clip
::UnityEngine::AudioClip* UnityEngine::AudioSource::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_clip
void UnityEngine::AudioSource::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_isPlaying
bool UnityEngine::AudioSource::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_loop
void UnityEngine::AudioSource::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_playOnAwake
bool UnityEngine::AudioSource::get_playOnAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::get_playOnAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playOnAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_playOnAwake
void UnityEngine::AudioSource::set_playOnAwake(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_playOnAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playOnAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_ignoreListenerPause
void UnityEngine::AudioSource::set_ignoreListenerPause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_ignoreListenerPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreListenerPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_spatialBlend
void UnityEngine::AudioSource::set_spatialBlend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_spatialBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spatialBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_reverbZoneMix
void UnityEngine::AudioSource::set_reverbZoneMix(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_reverbZoneMix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reverbZoneMix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_bypassEffects
void UnityEngine::AudioSource::set_bypassEffects(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_bypassEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bypassEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_bypassReverbZones
void UnityEngine::AudioSource::set_bypassReverbZones(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_bypassReverbZones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bypassReverbZones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_dopplerLevel
void UnityEngine::AudioSource::set_dopplerLevel(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_dopplerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dopplerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_spread
void UnityEngine::AudioSource::set_spread(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_spread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_priority
void UnityEngine::AudioSource::set_priority(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_priority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_priority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_minDistance
void UnityEngine::AudioSource::set_minDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::set_minDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.GetPitch
float UnityEngine::AudioSource::GetPitch(::UnityEngine::AudioSource* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.AudioSource.SetPitch
void UnityEngine::AudioSource::SetPitch(::UnityEngine::AudioSource* source, float pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::SetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "SetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(pitch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, pitch);
}
// Autogenerated method: UnityEngine.AudioSource.PlayHelper
void UnityEngine::AudioSource::PlayHelper(::UnityEngine::AudioSource* source, uint64_t delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::PlayHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "PlayHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, delay);
}
// Autogenerated method: UnityEngine.AudioSource.Play
void UnityEngine::AudioSource::Play(double delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delay);
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShotHelper
void UnityEngine::AudioSource::PlayOneShotHelper(::UnityEngine::AudioSource* source, ::UnityEngine::AudioClip* clip, float volumeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::PlayOneShotHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "PlayOneShotHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volumeScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, clip, volumeScale);
}
// Autogenerated method: UnityEngine.AudioSource.Stop
void UnityEngine::AudioSource::Stop(bool stopOneShots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopOneShots)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stopOneShots);
}
// Autogenerated method: UnityEngine.AudioSource.GetSpectrumDataHelper
void UnityEngine::AudioSource::GetSpectrumDataHelper(::UnityEngine::AudioSource* source, ByRef<::ArrayW<float>> samples, int channel, ::UnityEngine::FFTWindow window) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::GetSpectrumDataHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "GetSpectrumDataHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>(), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(window)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, byref(samples), channel, window);
}
// Autogenerated method: UnityEngine.AudioSource.Play
void UnityEngine::AudioSource::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.PlayScheduled
void UnityEngine::AudioSource::PlayScheduled(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::PlayScheduled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayScheduled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShot
void UnityEngine::AudioSource::PlayOneShot(::UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::PlayOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShot
void UnityEngine::AudioSource::PlayOneShot(::UnityEngine::AudioClip* clip, float volumeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::PlayOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volumeScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, volumeScale);
}
// Autogenerated method: UnityEngine.AudioSource.Stop
void UnityEngine::AudioSource::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.Pause
void UnityEngine::AudioSource::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.UnPause
void UnityEngine::AudioSource::UnPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::UnPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.GetSpectrumData
void UnityEngine::AudioSource::GetSpectrumData(::ArrayW<float> samples, int channel, ::UnityEngine::FFTWindow window) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSource::GetSpectrumData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpectrumData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(window)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples, channel, window);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioLowPassFilter
#include "UnityEngine/AudioLowPassFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioLowPassFilter.get_cutoffFrequency
float UnityEngine::AudioLowPassFilter::get_cutoffFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioLowPassFilter::get_cutoffFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutoffFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioLowPassFilter.set_cutoffFrequency
void UnityEngine::AudioLowPassFilter::set_cutoffFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioLowPassFilter::set_cutoffFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cutoffFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioClipPlayable
#include "UnityEngine/Audio/AudioClipPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Audio::AudioClipPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Audio::AudioClipPlayable::AudioClipPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Create
::UnityEngine::Audio::AudioClipPlayable UnityEngine::Audio::AudioClipPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::AudioClip* clip, bool looping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(looping)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioClipPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, clip, looping);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioClipPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::AudioClip* clip, bool looping) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(looping)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, clip, looping);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioClipPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.op_Explicit
UnityEngine::Audio::AudioClipPlayable::AudioClipPlayable(::UnityEngine::Playables::Playable& playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioClipPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Equals
bool UnityEngine::Audio::AudioClipPlayable::Equals(::UnityEngine::Audio::AudioClipPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetVolume
void UnityEngine::Audio::AudioClipPlayable::SetVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStereoPan
void UnityEngine::Audio::AudioClipPlayable::SetStereoPan(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::SetStereoPan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStereoPan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetSpatialBlend
void UnityEngine::Audio::AudioClipPlayable::SetSpatialBlend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::SetSpatialBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetSpatialBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Seek
void UnityEngine::Audio::AudioClipPlayable::Seek(double startTime, double startDelay, double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(startDelay), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTime, startDelay, duration);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetVolumeInternal
void UnityEngine::Audio::AudioClipPlayable::SetVolumeInternal(ByRef<::UnityEngine::Playables::PlayableHandle> hdl, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::SetVolumeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetVolumeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(hdl), volume);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStereoPanInternal
void UnityEngine::Audio::AudioClipPlayable::SetStereoPanInternal(ByRef<::UnityEngine::Playables::PlayableHandle> hdl, float stereoPan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::SetStereoPanInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetStereoPanInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(stereoPan)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(hdl), stereoPan);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetSpatialBlendInternal
void UnityEngine::Audio::AudioClipPlayable::SetSpatialBlendInternal(ByRef<::UnityEngine::Playables::PlayableHandle> hdl, float spatialBlend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::SetSpatialBlendInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetSpatialBlendInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(spatialBlend)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(hdl), spatialBlend);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStartDelayInternal
void UnityEngine::Audio::AudioClipPlayable::SetStartDelayInternal(ByRef<::UnityEngine::Playables::PlayableHandle> hdl, double delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::SetStartDelayInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetStartDelayInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(hdl), delay);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetPauseDelayInternal
void UnityEngine::Audio::AudioClipPlayable::SetPauseDelayInternal(ByRef<::UnityEngine::Playables::PlayableHandle> hdl, double delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::SetPauseDelayInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetPauseDelayInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(hdl), delay);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.InternalCreateAudioClipPlayable
bool UnityEngine::Audio::AudioClipPlayable::InternalCreateAudioClipPlayable(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ::UnityEngine::AudioClip* clip, bool looping, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioClipPlayable::InternalCreateAudioClipPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "InternalCreateAudioClipPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(looping), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), clip, looping, byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioMixerUpdateMode
#include "UnityEngine/Audio/AudioMixerUpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Audio.AudioMixerUpdateMode Normal
::UnityEngine::Audio::AudioMixerUpdateMode UnityEngine::Audio::AudioMixerUpdateMode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerUpdateMode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Audio::AudioMixerUpdateMode>("UnityEngine.Audio", "AudioMixerUpdateMode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Audio.AudioMixerUpdateMode Normal
void UnityEngine::Audio::AudioMixerUpdateMode::_set_Normal(::UnityEngine::Audio::AudioMixerUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerUpdateMode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Audio", "AudioMixerUpdateMode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Audio.AudioMixerUpdateMode UnscaledTime
::UnityEngine::Audio::AudioMixerUpdateMode UnityEngine::Audio::AudioMixerUpdateMode::_get_UnscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerUpdateMode::_get_UnscaledTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Audio::AudioMixerUpdateMode>("UnityEngine.Audio", "AudioMixerUpdateMode", "UnscaledTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Audio.AudioMixerUpdateMode UnscaledTime
void UnityEngine::Audio::AudioMixerUpdateMode::_set_UnscaledTime(::UnityEngine::Audio::AudioMixerUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerUpdateMode::_set_UnscaledTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Audio", "AudioMixerUpdateMode", "UnscaledTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Audio::AudioMixerUpdateMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerUpdateMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: UnityEngine.Audio.AudioMixerUpdateMode
#include "UnityEngine/Audio/AudioMixerUpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioMixer.set_updateMode
void UnityEngine::Audio::AudioMixer::set_updateMode(::UnityEngine::Audio::AudioMixerUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixer::set_updateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioMixer.SetFloat
bool UnityEngine::Audio::AudioMixer::SetFloat(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixer::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Audio.AudioMixer.GetFloat
bool UnityEngine::Audio::AudioMixer::GetFloat(::StringW name, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixer::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioMixerPlayable
#include "UnityEngine/Audio/AudioMixerPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Audio::AudioMixerPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Audio::AudioMixerPlayable::AudioMixerPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.Create
::UnityEngine::Audio::AudioMixerPlayable UnityEngine::Audio::AudioMixerPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeInputVolumes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeInputVolumes)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount, normalizeInputVolumes);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioMixerPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeInputVolumes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioMixerPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeInputVolumes)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount, normalizeInputVolumes);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioMixerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.Equals
bool UnityEngine::Audio::AudioMixerPlayable::Equals(::UnityEngine::Audio::AudioMixerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.CreateAudioMixerPlayableInternal
bool UnityEngine::Audio::AudioMixerPlayable::CreateAudioMixerPlayableInternal(ByRef<::UnityEngine::Playables::PlayableGraph> graph, bool normalizeInputVolumes, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioMixerPlayable::CreateAudioMixerPlayableInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioMixerPlayable", "CreateAudioMixerPlayableInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(normalizeInputVolumes), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), normalizeInputVolumes, byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioPlayableBinding
#include "UnityEngine/Audio/AudioPlayableBinding.hpp"
// Including type: UnityEngine.Playables.PlayableBinding
#include "UnityEngine/Playables/PlayableBinding.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioPlayableBinding.Create
::UnityEngine::Playables::PlayableBinding UnityEngine::Audio::AudioPlayableBinding::Create(::StringW name, ::UnityEngine::Object* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableBinding::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableBinding", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, key);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableBinding.CreateAudioOutput
::UnityEngine::Playables::PlayableOutput UnityEngine::Audio::AudioPlayableBinding::CreateAudioOutput(::UnityEngine::Playables::PlayableGraph graph, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableBinding::CreateAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableBinding", "CreateAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioPlayableGraphExtensions
#include "UnityEngine/Audio/AudioPlayableGraphExtensions.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioPlayableGraphExtensions.InternalCreateAudioOutput
bool UnityEngine::Audio::AudioPlayableGraphExtensions::InternalCreateAudioOutput(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ::StringW name, ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableGraphExtensions::InternalCreateAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableGraphExtensions", "InternalCreateAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableOutputHandle&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), name, byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioPlayableOutput
#include "UnityEngine/Audio/AudioPlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableOutputHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableOutputHandle& UnityEngine::Audio::AudioPlayableOutput::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableOutputHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.get_Null
::UnityEngine::Audio::AudioPlayableOutput UnityEngine::Audio::AudioPlayableOutput::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput..ctor
// ABORTED elsewhere.  UnityEngine::Audio::AudioPlayableOutput::AudioPlayableOutput(::UnityEngine::Playables::PlayableOutputHandle handle)
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.Create
::UnityEngine::Audio::AudioPlayableOutput UnityEngine::Audio::AudioPlayableOutput::Create(::UnityEngine::Playables::PlayableGraph graph, ::StringW name, ::UnityEngine::AudioSource* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, name, target);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.GetHandle
::UnityEngine::Playables::PlayableOutputHandle UnityEngine::Audio::AudioPlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutputHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.op_Explicit
UnityEngine::Audio::AudioPlayableOutput::AudioPlayableOutput(::UnityEngine::Playables::PlayableOutput& output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.SetTarget
void UnityEngine::Audio::AudioPlayableOutput::SetTarget(::UnityEngine::AudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.SetEvaluateOnSeek
void UnityEngine::Audio::AudioPlayableOutput::SetEvaluateOnSeek(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::SetEvaluateOnSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEvaluateOnSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.InternalSetTarget
void UnityEngine::Audio::AudioPlayableOutput::InternalSetTarget(ByRef<::UnityEngine::Playables::PlayableOutputHandle> output, ::UnityEngine::AudioSource* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::InternalSetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "InternalSetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(output), target);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.InternalSetEvaluateOnSeek
void UnityEngine::Audio::AudioPlayableOutput::InternalSetEvaluateOnSeek(ByRef<::UnityEngine::Playables::PlayableOutputHandle> output, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Audio::AudioPlayableOutput::InternalSetEvaluateOnSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "InternalSetEvaluateOnSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(output), value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Audio.AudioSampleProvider
#include "UnityEngine/Experimental/Audio/AudioSampleProvider.hpp"
// Including type: UnityEngine.Experimental.Audio.AudioSampleProvider/UnityEngine.Experimental.Audio.SampleFramesHandler
#include "UnityEngine/Experimental/Audio/AudioSampleProvider_SampleFramesHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.Audio.AudioSampleProvider/UnityEngine.Experimental.Audio.SampleFramesHandler sampleFramesAvailable
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler*& UnityEngine::Experimental::Audio::AudioSampleProvider::dyn_sampleFramesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Audio::AudioSampleProvider::dyn_sampleFramesAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleFramesAvailable"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Experimental.Audio.AudioSampleProvider/UnityEngine.Experimental.Audio.SampleFramesHandler sampleFramesOverflow
[[deprecated("Use field access instead!")]] ::UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler*& UnityEngine::Experimental::Audio::AudioSampleProvider::dyn_sampleFramesOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Audio::AudioSampleProvider::dyn_sampleFramesOverflow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleFramesOverflow"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider.InvokeSampleFramesAvailable
void UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesAvailable(int sampleFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSampleFramesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleFrameCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleFrameCount);
}
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider.InvokeSampleFramesOverflow
void UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesOverflow(int droppedSampleFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSampleFramesOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(droppedSampleFrameCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, droppedSampleFrameCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.Audio.AudioSampleProvider/UnityEngine.Experimental.Audio.SampleFramesHandler
#include "UnityEngine/Experimental/Audio/AudioSampleProvider_SampleFramesHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider/UnityEngine.Experimental.Audio.SampleFramesHandler.Invoke
void UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::Invoke(::UnityEngine::Experimental::Audio::AudioSampleProvider* provider, uint sampleFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleFrameCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, provider, sampleFrameCount);
}
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider/UnityEngine.Experimental.Audio.SampleFramesHandler.BeginInvoke
::System::IAsyncResult* UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::BeginInvoke(::UnityEngine::Experimental::Audio::AudioSampleProvider* provider, uint sampleFrameCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleFrameCount), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, provider, sampleFrameCount, callback, object);
}
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider/UnityEngine.Experimental.Audio.SampleFramesHandler.EndInvoke
void UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Cloth
#include "UnityEngine/Cloth.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <useContinuousCollision>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::Cloth::dyn_$useContinuousCollision$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cloth::dyn_$useContinuousCollision$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<useContinuousCollision>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <selfCollision>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Cloth::dyn_$selfCollision$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cloth::dyn_$selfCollision$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selfCollision>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Cloth.set_externalAcceleration
void UnityEngine::Cloth::set_externalAcceleration(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cloth::set_externalAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_externalAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Cloth.set_externalAcceleration_Injected
void UnityEngine::Cloth::set_externalAcceleration_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cloth::set_externalAcceleration_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_externalAcceleration_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.MathfInternal
#include "UnityEngineInternal/MathfInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single FloatMinNormal
float UnityEngineInternal::MathfInternal::_get_FloatMinNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::MathfInternal::_get_FloatMinNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngineInternal", "MathfInternal", "FloatMinNormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FloatMinNormal
void UnityEngineInternal::MathfInternal::_set_FloatMinNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::MathfInternal::_set_FloatMinNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "MathfInternal", "FloatMinNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FloatMinDenormal
float UnityEngineInternal::MathfInternal::_get_FloatMinDenormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::MathfInternal::_get_FloatMinDenormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngineInternal", "MathfInternal", "FloatMinDenormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FloatMinDenormal
void UnityEngineInternal::MathfInternal::_set_FloatMinDenormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::MathfInternal::_set_FloatMinDenormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "MathfInternal", "FloatMinDenormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean IsFlushToZeroEnabled
bool UnityEngineInternal::MathfInternal::_get_IsFlushToZeroEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::MathfInternal::_get_IsFlushToZeroEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngineInternal", "MathfInternal", "IsFlushToZeroEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean IsFlushToZeroEnabled
void UnityEngineInternal::MathfInternal::_set_IsFlushToZeroEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::MathfInternal::_set_IsFlushToZeroEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "MathfInternal", "IsFlushToZeroEnabled", value));
}
// Autogenerated method: UnityEngineInternal.MathfInternal..cctor
void UnityEngineInternal::MathfInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::MathfInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "MathfInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.TypeInferenceRules
#include "UnityEngineInternal/TypeInferenceRules.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.TypeInferenceRules TypeReferencedByFirstArgument
::UnityEngineInternal::TypeInferenceRules UnityEngineInternal::TypeInferenceRules::_get_TypeReferencedByFirstArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::_get_TypeReferencedByFirstArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::TypeInferenceRules>("UnityEngineInternal", "TypeInferenceRules", "TypeReferencedByFirstArgument"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.TypeInferenceRules TypeReferencedByFirstArgument
void UnityEngineInternal::TypeInferenceRules::_set_TypeReferencedByFirstArgument(::UnityEngineInternal::TypeInferenceRules value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::_set_TypeReferencedByFirstArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "TypeInferenceRules", "TypeReferencedByFirstArgument", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.TypeInferenceRules TypeReferencedBySecondArgument
::UnityEngineInternal::TypeInferenceRules UnityEngineInternal::TypeInferenceRules::_get_TypeReferencedBySecondArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::_get_TypeReferencedBySecondArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::TypeInferenceRules>("UnityEngineInternal", "TypeInferenceRules", "TypeReferencedBySecondArgument"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.TypeInferenceRules TypeReferencedBySecondArgument
void UnityEngineInternal::TypeInferenceRules::_set_TypeReferencedBySecondArgument(::UnityEngineInternal::TypeInferenceRules value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::_set_TypeReferencedBySecondArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "TypeInferenceRules", "TypeReferencedBySecondArgument", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.TypeInferenceRules ArrayOfTypeReferencedByFirstArgument
::UnityEngineInternal::TypeInferenceRules UnityEngineInternal::TypeInferenceRules::_get_ArrayOfTypeReferencedByFirstArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::_get_ArrayOfTypeReferencedByFirstArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::TypeInferenceRules>("UnityEngineInternal", "TypeInferenceRules", "ArrayOfTypeReferencedByFirstArgument"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.TypeInferenceRules ArrayOfTypeReferencedByFirstArgument
void UnityEngineInternal::TypeInferenceRules::_set_ArrayOfTypeReferencedByFirstArgument(::UnityEngineInternal::TypeInferenceRules value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::_set_ArrayOfTypeReferencedByFirstArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "TypeInferenceRules", "ArrayOfTypeReferencedByFirstArgument", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.TypeInferenceRules TypeOfFirstArgument
::UnityEngineInternal::TypeInferenceRules UnityEngineInternal::TypeInferenceRules::_get_TypeOfFirstArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::_get_TypeOfFirstArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::TypeInferenceRules>("UnityEngineInternal", "TypeInferenceRules", "TypeOfFirstArgument"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.TypeInferenceRules TypeOfFirstArgument
void UnityEngineInternal::TypeInferenceRules::_set_TypeOfFirstArgument(::UnityEngineInternal::TypeInferenceRules value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::_set_TypeOfFirstArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "TypeInferenceRules", "TypeOfFirstArgument", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngineInternal::TypeInferenceRules::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRules::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.TypeInferenceRuleAttribute
#include "UnityEngineInternal/TypeInferenceRuleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _rule
[[deprecated("Use field access instead!")]] ::StringW& UnityEngineInternal::TypeInferenceRuleAttribute::dyn__rule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRuleAttribute::dyn__rule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rule"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngineInternal.TypeInferenceRuleAttribute.ToString
::StringW UnityEngineInternal::TypeInferenceRuleAttribute::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::TypeInferenceRuleAttribute::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.GenericStack
#include "UnityEngineInternal/GenericStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Profiling.ProfilerMarker
#include "Unity/Profiling/ProfilerMarker.hpp"
// Including type: Unity.Profiling.ProfilerMarker/Unity.Profiling.AutoScope
#include "Unity/Profiling/ProfilerMarker_AutoScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& Unity::Profiling::ProfilerMarker::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Profiling::ProfilerMarker::dyn_m_Ptr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.Profiling.ProfilerMarker..ctor
Unity::Profiling::ProfilerMarker::ProfilerMarker(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Profiling::ProfilerMarker::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Unity.Profiling.ProfilerMarker.Auto
::Unity::Profiling::ProfilerMarker::AutoScope Unity::Profiling::ProfilerMarker::Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Profiling::ProfilerMarker::Auto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Auto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Profiling::ProfilerMarker::AutoScope, false>(this, ___internal__method);
}
// Autogenerated method: Unity.Profiling.ProfilerMarker.Internal_Create
::System::IntPtr Unity::Profiling::ProfilerMarker::Internal_Create(::StringW name, uint16_t flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Profiling::ProfilerMarker::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Profiling", "ProfilerMarker", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, flags);
}
// Autogenerated method: Unity.Profiling.ProfilerMarker.Internal_Begin
void Unity::Profiling::ProfilerMarker::Internal_Begin(::System::IntPtr markerPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Profiling::ProfilerMarker::Internal_Begin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Profiling", "ProfilerMarker", "Internal_Begin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerPtr);
}
// Autogenerated method: Unity.Profiling.ProfilerMarker.Internal_End
void Unity::Profiling::ProfilerMarker::Internal_End(::System::IntPtr markerPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Profiling::ProfilerMarker::Internal_End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Profiling", "ProfilerMarker", "Internal_End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markerPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, markerPtr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Profiling.ProfilerMarker/Unity.Profiling.AutoScope
#include "Unity/Profiling/ProfilerMarker_AutoScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& Unity::Profiling::ProfilerMarker::AutoScope::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Profiling::ProfilerMarker::AutoScope::dyn_m_Ptr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.Profiling.ProfilerMarker/Unity.Profiling.AutoScope..ctor
// ABORTED elsewhere.  Unity::Profiling::ProfilerMarker::AutoScope::AutoScope(::System::IntPtr markerPtr)
// Autogenerated method: Unity.Profiling.ProfilerMarker/Unity.Profiling.AutoScope.Dispose
void Unity::Profiling::ProfilerMarker::AutoScope::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Profiling::ProfilerMarker::AutoScope::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr jobGroup
[[deprecated("Use field access instead!")]] ::System::IntPtr& Unity::Jobs::JobHandle::dyn_jobGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Jobs::JobHandle::dyn_jobGroup");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jobGroup"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 version
[[deprecated("Use field access instead!")]] int& Unity::Jobs::JobHandle::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Jobs::JobHandle::dyn_version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.Jobs.JobHandle.ScheduleBatchedJobs
void Unity::Jobs::JobHandle::ScheduleBatchedJobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Jobs::JobHandle::ScheduleBatchedJobs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Jobs", "JobHandle", "ScheduleBatchedJobs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.Allocator
#include "Unity/Collections/Allocator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator Invalid
::Unity::Collections::Allocator Unity::Collections::Allocator::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::Allocator>("Unity.Collections", "Allocator", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator Invalid
void Unity::Collections::Allocator::_set_Invalid(::Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator None
::Unity::Collections::Allocator Unity::Collections::Allocator::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::Allocator>("Unity.Collections", "Allocator", "None"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator None
void Unity::Collections::Allocator::_set_None(::Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator Temp
::Unity::Collections::Allocator Unity::Collections::Allocator::_get_Temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_get_Temp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::Allocator>("Unity.Collections", "Allocator", "Temp"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator Temp
void Unity::Collections::Allocator::_set_Temp(::Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_set_Temp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "Temp", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator TempJob
::Unity::Collections::Allocator Unity::Collections::Allocator::_get_TempJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_get_TempJob");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::Allocator>("Unity.Collections", "Allocator", "TempJob"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator TempJob
void Unity::Collections::Allocator::_set_TempJob(::Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_set_TempJob");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "TempJob", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator Persistent
::Unity::Collections::Allocator Unity::Collections::Allocator::_get_Persistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_get_Persistent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::Allocator>("Unity.Collections", "Allocator", "Persistent"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator Persistent
void Unity::Collections::Allocator::_set_Persistent(::Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_set_Persistent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "Persistent", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator AudioKernel
::Unity::Collections::Allocator Unity::Collections::Allocator::_get_AudioKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_get_AudioKernel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Collections::Allocator>("Unity.Collections", "Allocator", "AudioKernel"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator AudioKernel
void Unity::Collections::Allocator::_set_AudioKernel(::Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::_set_AudioKernel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "AudioKernel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Unity::Collections::Allocator::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::Allocator::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.NativeLeakDetection
#include "Unity/Collections/NativeLeakDetection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_NativeLeakDetectionMode
int Unity::Collections::NativeLeakDetection::_get_s_NativeLeakDetectionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::NativeLeakDetection::_get_s_NativeLeakDetectionMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Unity.Collections", "NativeLeakDetection", "s_NativeLeakDetectionMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_NativeLeakDetectionMode
void Unity::Collections::NativeLeakDetection::_set_s_NativeLeakDetectionMode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::NativeLeakDetection::_set_s_NativeLeakDetectionMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "NativeLeakDetection", "s_NativeLeakDetectionMode", value));
}
// Autogenerated method: Unity.Collections.NativeLeakDetection.Initialize
void Unity::Collections::NativeLeakDetection::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::NativeLeakDetection::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections", "NativeLeakDetection", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeContainerAttribute
#include "Unity/Collections/LowLevel/Unsafe/NativeContainerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsMinMaxWriteRestrictionAttribute
#include "Unity/Collections/LowLevel/Unsafe/NativeContainerSupportsMinMaxWriteRestrictionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsDeallocateOnJobCompletionAttribute
#include "Unity/Collections/LowLevel/Unsafe/NativeContainerSupportsDeallocateOnJobCompletionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsDeferredConvertListToArray
#include "Unity/Collections/LowLevel/Unsafe/NativeContainerSupportsDeferredConvertListToArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.WriteAccessRequiredAttribute
#include "Unity/Collections/LowLevel/Unsafe/WriteAccessRequiredAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeDisableUnsafePtrRestrictionAttribute
#include "Unity/Collections/LowLevel/Unsafe/NativeDisableUnsafePtrRestrictionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeArrayUnsafeUtility
#include "Unity/Collections/LowLevel/Unsafe/NativeArrayUnsafeUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.UnsafeUtility
#include "Unity/Collections/LowLevel/Unsafe/UnsafeUtility.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Unity.Collections.Allocator
#include "Unity/Collections/Allocator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.Collections.LowLevel.Unsafe.UnsafeUtility.Free
void Unity::Collections::LowLevel::Unsafe::UnsafeUtility::Free(void* memory, ::Unity::Collections::Allocator allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::LowLevel::Unsafe::UnsafeUtility::Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections.LowLevel.Unsafe", "UnsafeUtility", "Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memory), ::il2cpp_utils::ExtractType(allocator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memory, allocator);
}
// Autogenerated method: Unity.Collections.LowLevel.Unsafe.UnsafeUtility.IsBlittable
bool Unity::Collections::LowLevel::Unsafe::UnsafeUtility::IsBlittable(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::LowLevel::Unsafe::UnsafeUtility::IsBlittable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections.LowLevel.Unsafe", "UnsafeUtility", "IsBlittable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Unity.Collections.LowLevel.Unsafe.UnsafeUtility.IsBlittableValueType
bool Unity::Collections::LowLevel::Unsafe::UnsafeUtility::IsBlittableValueType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::LowLevel::Unsafe::UnsafeUtility::IsBlittableValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections.LowLevel.Unsafe", "UnsafeUtility", "IsBlittableValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Unity.Collections.LowLevel.Unsafe.UnsafeUtility.GetReasonForTypeNonBlittableImpl
::StringW Unity::Collections::LowLevel::Unsafe::UnsafeUtility::GetReasonForTypeNonBlittableImpl(::System::Type* t, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::LowLevel::Unsafe::UnsafeUtility::GetReasonForTypeNonBlittableImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections.LowLevel.Unsafe", "UnsafeUtility", "GetReasonForTypeNonBlittableImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, name);
}
// Autogenerated method: Unity.Collections.LowLevel.Unsafe.UnsafeUtility.IsArrayBlittable
bool Unity::Collections::LowLevel::Unsafe::UnsafeUtility::IsArrayBlittable(::System::Array* arr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::LowLevel::Unsafe::UnsafeUtility::IsArrayBlittable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections.LowLevel.Unsafe", "UnsafeUtility", "IsArrayBlittable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arr);
}
// Autogenerated method: Unity.Collections.LowLevel.Unsafe.UnsafeUtility.GetReasonForArrayNonBlittable
::StringW Unity::Collections::LowLevel::Unsafe::UnsafeUtility::GetReasonForArrayNonBlittable(::System::Array* arr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::Collections::LowLevel::Unsafe::UnsafeUtility::GetReasonForArrayNonBlittable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections.LowLevel.Unsafe", "UnsafeUtility", "GetReasonForArrayNonBlittable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.NotNullAttribute
#include "JetBrains/Annotations/NotNullAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.UsedImplicitlyAttribute
#include "JetBrains/Annotations/UsedImplicitlyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly JetBrains.Annotations.ImplicitUseKindFlags <UseKindFlags>k__BackingField
[[deprecated("Use field access instead!")]] ::JetBrains::Annotations::ImplicitUseKindFlags& JetBrains::Annotations::UsedImplicitlyAttribute::dyn_$UseKindFlags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::UsedImplicitlyAttribute::dyn_$UseKindFlags$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UseKindFlags>k__BackingField"))->offset;
  return *reinterpret_cast<::JetBrains::Annotations::ImplicitUseKindFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly JetBrains.Annotations.ImplicitUseTargetFlags <TargetFlags>k__BackingField
[[deprecated("Use field access instead!")]] ::JetBrains::Annotations::ImplicitUseTargetFlags& JetBrains::Annotations::UsedImplicitlyAttribute::dyn_$TargetFlags$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::UsedImplicitlyAttribute::dyn_$TargetFlags$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TargetFlags>k__BackingField"))->offset;
  return *reinterpret_cast<::JetBrains::Annotations::ImplicitUseTargetFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.ImplicitUseKindFlags
#include "JetBrains/Annotations/ImplicitUseKindFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Default
::JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Default
void JetBrains::Annotations::ImplicitUseKindFlags::_set_Default(::JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Access
::JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_Access() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_get_Access");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "Access"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Access
void JetBrains::Annotations::ImplicitUseKindFlags::_set_Access(::JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_set_Access");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "Access", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Assign
::JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_Assign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_get_Assign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "Assign"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Assign
void JetBrains::Annotations::ImplicitUseKindFlags::_set_Assign(::JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_set_Assign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "Assign", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature
::JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_InstantiatedWithFixedConstructorSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_get_InstantiatedWithFixedConstructorSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "InstantiatedWithFixedConstructorSignature"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature
void JetBrains::Annotations::ImplicitUseKindFlags::_set_InstantiatedWithFixedConstructorSignature(::JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_set_InstantiatedWithFixedConstructorSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "InstantiatedWithFixedConstructorSignature", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature
::JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_InstantiatedNoFixedConstructorSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_get_InstantiatedNoFixedConstructorSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "InstantiatedNoFixedConstructorSignature"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature
void JetBrains::Annotations::ImplicitUseKindFlags::_set_InstantiatedNoFixedConstructorSignature(::JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::_set_InstantiatedNoFixedConstructorSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "InstantiatedNoFixedConstructorSignature", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& JetBrains::Annotations::ImplicitUseKindFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseKindFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.ImplicitUseTargetFlags
#include "JetBrains/Annotations/ImplicitUseTargetFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Default
::JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::ImplicitUseTargetFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseTargetFlags>("JetBrains.Annotations", "ImplicitUseTargetFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Default
void JetBrains::Annotations::ImplicitUseTargetFlags::_set_Default(::JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseTargetFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Itself
::JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::ImplicitUseTargetFlags::_get_Itself() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::_get_Itself");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseTargetFlags>("JetBrains.Annotations", "ImplicitUseTargetFlags", "Itself"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Itself
void JetBrains::Annotations::ImplicitUseTargetFlags::_set_Itself(::JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::_set_Itself");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseTargetFlags", "Itself", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Members
::JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::ImplicitUseTargetFlags::_get_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::_get_Members");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseTargetFlags>("JetBrains.Annotations", "ImplicitUseTargetFlags", "Members"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Members
void JetBrains::Annotations::ImplicitUseTargetFlags::_set_Members(::JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::_set_Members");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseTargetFlags", "Members", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseTargetFlags WithMembers
::JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::ImplicitUseTargetFlags::_get_WithMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::_get_WithMembers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::JetBrains::Annotations::ImplicitUseTargetFlags>("JetBrains.Annotations", "ImplicitUseTargetFlags", "WithMembers"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseTargetFlags WithMembers
void JetBrains::Annotations::ImplicitUseTargetFlags::_set_WithMembers(::JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::_set_WithMembers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseTargetFlags", "WithMembers", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& JetBrains::Annotations::ImplicitUseTargetFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::JetBrains::Annotations::ImplicitUseTargetFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SendMessageOptions
#include "UnityEngine/SendMessageOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SendMessageOptions RequireReceiver
::UnityEngine::SendMessageOptions UnityEngine::SendMessageOptions::_get_RequireReceiver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMessageOptions::_get_RequireReceiver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SendMessageOptions>("UnityEngine", "SendMessageOptions", "RequireReceiver"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SendMessageOptions RequireReceiver
void UnityEngine::SendMessageOptions::_set_RequireReceiver(::UnityEngine::SendMessageOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMessageOptions::_set_RequireReceiver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMessageOptions", "RequireReceiver", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SendMessageOptions DontRequireReceiver
::UnityEngine::SendMessageOptions UnityEngine::SendMessageOptions::_get_DontRequireReceiver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMessageOptions::_get_DontRequireReceiver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SendMessageOptions>("UnityEngine", "SendMessageOptions", "DontRequireReceiver"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SendMessageOptions DontRequireReceiver
void UnityEngine::SendMessageOptions::_set_DontRequireReceiver(::UnityEngine::SendMessageOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMessageOptions::_set_DontRequireReceiver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMessageOptions", "DontRequireReceiver", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SendMessageOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMessageOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PrimitiveType
#include "UnityEngine/PrimitiveType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Sphere
::UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_get_Sphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Sphere"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Sphere
void UnityEngine::PrimitiveType::_set_Sphere(::UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_set_Sphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Sphere", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Capsule
::UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Capsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_get_Capsule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Capsule"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Capsule
void UnityEngine::PrimitiveType::_set_Capsule(::UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_set_Capsule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Capsule", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Cylinder
::UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_get_Cylinder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Cylinder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Cylinder
void UnityEngine::PrimitiveType::_set_Cylinder(::UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_set_Cylinder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Cylinder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Cube
::UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Cube() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_get_Cube");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Cube"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Cube
void UnityEngine::PrimitiveType::_set_Cube(::UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_set_Cube");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Cube", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Plane
::UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Plane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_get_Plane");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Plane"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Plane
void UnityEngine::PrimitiveType::_set_Plane(::UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_set_Plane");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Plane", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Quad
::UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Quad
void UnityEngine::PrimitiveType::_set_Quad(::UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Quad", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::PrimitiveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PrimitiveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Space World
::UnityEngine::Space UnityEngine::Space::_get_World() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Space::_get_World");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Space>("UnityEngine", "Space", "World"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Space World
void UnityEngine::Space::_set_World(::UnityEngine::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Space::_set_World");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Space", "World", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Space Self
::UnityEngine::Space UnityEngine::Space::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Space::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Space>("UnityEngine", "Space", "Self"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Space Self
void UnityEngine::Space::_set_Self(::UnityEngine::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Space::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Space", "Self", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Space::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Space::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RuntimePlatform
#include "UnityEngine/RuntimePlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform OSXEditor
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_OSXEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_OSXEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "OSXEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform OSXEditor
void UnityEngine::RuntimePlatform::_set_OSXEditor(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_OSXEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "OSXEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform OSXPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_OSXPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_OSXPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "OSXPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform OSXPlayer
void UnityEngine::RuntimePlatform::_set_OSXPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_OSXPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "OSXPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WindowsPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WindowsPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WindowsPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WindowsPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WindowsPlayer
void UnityEngine::RuntimePlatform::_set_WindowsPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WindowsPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WindowsPlayer", value));
}
// [ObsoleteAttribute] Offset: 0x104937C
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform OSXWebPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_OSXWebPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_OSXWebPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "OSXWebPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform OSXWebPlayer
void UnityEngine::RuntimePlatform::_set_OSXWebPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_OSXWebPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "OSXWebPlayer", value));
}
// [ObsoleteAttribute] Offset: 0x10493B8
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform OSXDashboardPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_OSXDashboardPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_OSXDashboardPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "OSXDashboardPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform OSXDashboardPlayer
void UnityEngine::RuntimePlatform::_set_OSXDashboardPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_OSXDashboardPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "OSXDashboardPlayer", value));
}
// [ObsoleteAttribute] Offset: 0x10493F4
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WindowsWebPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WindowsWebPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WindowsWebPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WindowsWebPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WindowsWebPlayer
void UnityEngine::RuntimePlatform::_set_WindowsWebPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WindowsWebPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WindowsWebPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WindowsEditor
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WindowsEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WindowsEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WindowsEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WindowsEditor
void UnityEngine::RuntimePlatform::_set_WindowsEditor(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WindowsEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WindowsEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform IPhonePlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_IPhonePlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_IPhonePlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "IPhonePlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform IPhonePlayer
void UnityEngine::RuntimePlatform::_set_IPhonePlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_IPhonePlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "IPhonePlayer", value));
}
// [ObsoleteAttribute] Offset: 0x1049430
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform XBOX360
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_XBOX360() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_XBOX360");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "XBOX360"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform XBOX360
void UnityEngine::RuntimePlatform::_set_XBOX360(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_XBOX360");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "XBOX360", value));
}
// [ObsoleteAttribute] Offset: 0x1049468
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform PS3
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_PS3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_PS3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "PS3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform PS3
void UnityEngine::RuntimePlatform::_set_PS3(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_PS3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "PS3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform Android
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_Android() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_Android");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "Android"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform Android
void UnityEngine::RuntimePlatform::_set_Android(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_Android");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "Android", value));
}
// [ObsoleteAttribute] Offset: 0x10494A0
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform NaCl
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_NaCl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_NaCl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "NaCl"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform NaCl
void UnityEngine::RuntimePlatform::_set_NaCl(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_NaCl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "NaCl", value));
}
// [ObsoleteAttribute] Offset: 0x10494D8
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform FlashPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_FlashPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_FlashPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "FlashPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform FlashPlayer
void UnityEngine::RuntimePlatform::_set_FlashPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_FlashPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "FlashPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform LinuxPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_LinuxPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_LinuxPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "LinuxPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform LinuxPlayer
void UnityEngine::RuntimePlatform::_set_LinuxPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_LinuxPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "LinuxPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform LinuxEditor
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_LinuxEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_LinuxEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "LinuxEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform LinuxEditor
void UnityEngine::RuntimePlatform::_set_LinuxEditor(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_LinuxEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "LinuxEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WebGLPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WebGLPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WebGLPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WebGLPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WebGLPlayer
void UnityEngine::RuntimePlatform::_set_WebGLPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WebGLPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WebGLPlayer", value));
}
// [ObsoleteAttribute] Offset: 0x1049510
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform MetroPlayerX86
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_MetroPlayerX86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_MetroPlayerX86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "MetroPlayerX86"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform MetroPlayerX86
void UnityEngine::RuntimePlatform::_set_MetroPlayerX86(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_MetroPlayerX86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "MetroPlayerX86", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WSAPlayerX86
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WSAPlayerX86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WSAPlayerX86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WSAPlayerX86"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WSAPlayerX86
void UnityEngine::RuntimePlatform::_set_WSAPlayerX86(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WSAPlayerX86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WSAPlayerX86", value));
}
// [ObsoleteAttribute] Offset: 0x1049548
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform MetroPlayerX64
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_MetroPlayerX64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_MetroPlayerX64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "MetroPlayerX64"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform MetroPlayerX64
void UnityEngine::RuntimePlatform::_set_MetroPlayerX64(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_MetroPlayerX64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "MetroPlayerX64", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WSAPlayerX64
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WSAPlayerX64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WSAPlayerX64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WSAPlayerX64"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WSAPlayerX64
void UnityEngine::RuntimePlatform::_set_WSAPlayerX64(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WSAPlayerX64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WSAPlayerX64", value));
}
// [ObsoleteAttribute] Offset: 0x1049580
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform MetroPlayerARM
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_MetroPlayerARM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_MetroPlayerARM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "MetroPlayerARM"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform MetroPlayerARM
void UnityEngine::RuntimePlatform::_set_MetroPlayerARM(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_MetroPlayerARM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "MetroPlayerARM", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WSAPlayerARM
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WSAPlayerARM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WSAPlayerARM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WSAPlayerARM"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WSAPlayerARM
void UnityEngine::RuntimePlatform::_set_WSAPlayerARM(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WSAPlayerARM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WSAPlayerARM", value));
}
// [ObsoleteAttribute] Offset: 0x10495B8
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WP8Player
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WP8Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WP8Player");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WP8Player"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WP8Player
void UnityEngine::RuntimePlatform::_set_WP8Player(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WP8Player");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WP8Player", value));
}
// [ObsoleteAttribute] Offset: 0x10495F0
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform BlackBerryPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_BlackBerryPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_BlackBerryPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "BlackBerryPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform BlackBerryPlayer
void UnityEngine::RuntimePlatform::_set_BlackBerryPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_BlackBerryPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "BlackBerryPlayer", value));
}
// [ObsoleteAttribute] Offset: 0x1049628
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform TizenPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_TizenPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_TizenPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "TizenPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform TizenPlayer
void UnityEngine::RuntimePlatform::_set_TizenPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_TizenPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "TizenPlayer", value));
}
// [ObsoleteAttribute] Offset: 0x1049660
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform PSP2
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_PSP2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_PSP2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "PSP2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform PSP2
void UnityEngine::RuntimePlatform::_set_PSP2(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_PSP2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "PSP2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform PS4
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_PS4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_PS4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "PS4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform PS4
void UnityEngine::RuntimePlatform::_set_PS4(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_PS4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "PS4", value));
}
// [ObsoleteAttribute] Offset: 0x1049698
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform PSM
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_PSM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_PSM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "PSM"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform PSM
void UnityEngine::RuntimePlatform::_set_PSM(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_PSM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "PSM", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform XboxOne
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_XboxOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_XboxOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "XboxOne"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform XboxOne
void UnityEngine::RuntimePlatform::_set_XboxOne(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_XboxOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "XboxOne", value));
}
// [ObsoleteAttribute] Offset: 0x10496D0
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform SamsungTVPlayer
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_SamsungTVPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_SamsungTVPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "SamsungTVPlayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform SamsungTVPlayer
void UnityEngine::RuntimePlatform::_set_SamsungTVPlayer(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_SamsungTVPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "SamsungTVPlayer", value));
}
// [ObsoleteAttribute] Offset: 0x1049708
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform WiiU
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_WiiU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_WiiU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "WiiU"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform WiiU
void UnityEngine::RuntimePlatform::_set_WiiU(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_WiiU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "WiiU", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform tvOS
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_tvOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_tvOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "tvOS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform tvOS
void UnityEngine::RuntimePlatform::_set_tvOS(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_tvOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "tvOS", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform Switch
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_Switch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_Switch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "Switch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform Switch
void UnityEngine::RuntimePlatform::_set_Switch(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_Switch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "Switch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform Lumin
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_Lumin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_Lumin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "Lumin"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform Lumin
void UnityEngine::RuntimePlatform::_set_Lumin(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_Lumin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "Lumin", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform Stadia
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_Stadia() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_Stadia");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "Stadia"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform Stadia
void UnityEngine::RuntimePlatform::_set_Stadia(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_Stadia");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "Stadia", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform CloudRendering
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_CloudRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_CloudRendering");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "CloudRendering"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform CloudRendering
void UnityEngine::RuntimePlatform::_set_CloudRendering(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_CloudRendering");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "CloudRendering", value));
}
// [ObsoleteAttribute] Offset: 0x1049740
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform GameCoreScarlett
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_GameCoreScarlett() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_GameCoreScarlett");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "GameCoreScarlett"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform GameCoreScarlett
void UnityEngine::RuntimePlatform::_set_GameCoreScarlett(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_GameCoreScarlett");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "GameCoreScarlett", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform GameCoreXboxSeries
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_GameCoreXboxSeries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_GameCoreXboxSeries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "GameCoreXboxSeries"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform GameCoreXboxSeries
void UnityEngine::RuntimePlatform::_set_GameCoreXboxSeries(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_GameCoreXboxSeries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "GameCoreXboxSeries", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform GameCoreXboxOne
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_GameCoreXboxOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_GameCoreXboxOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "GameCoreXboxOne"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform GameCoreXboxOne
void UnityEngine::RuntimePlatform::_set_GameCoreXboxOne(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_GameCoreXboxOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "GameCoreXboxOne", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimePlatform PS5
::UnityEngine::RuntimePlatform UnityEngine::RuntimePlatform::_get_PS5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_get_PS5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimePlatform>("UnityEngine", "RuntimePlatform", "PS5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimePlatform PS5
void UnityEngine::RuntimePlatform::_set_PS5(::UnityEngine::RuntimePlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::_set_PS5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimePlatform", "PS5", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RuntimePlatform::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimePlatform::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SystemLanguage
#include "UnityEngine/SystemLanguage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Afrikaans
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Afrikaans() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Afrikaans");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Afrikaans"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Afrikaans
void UnityEngine::SystemLanguage::_set_Afrikaans(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Afrikaans");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Afrikaans", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Arabic
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Arabic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Arabic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Arabic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Arabic
void UnityEngine::SystemLanguage::_set_Arabic(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Arabic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Arabic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Basque
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Basque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Basque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Basque"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Basque
void UnityEngine::SystemLanguage::_set_Basque(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Basque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Basque", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Belarusian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Belarusian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Belarusian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Belarusian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Belarusian
void UnityEngine::SystemLanguage::_set_Belarusian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Belarusian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Belarusian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Bulgarian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Bulgarian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Bulgarian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Bulgarian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Bulgarian
void UnityEngine::SystemLanguage::_set_Bulgarian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Bulgarian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Bulgarian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Catalan
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Catalan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Catalan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Catalan"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Catalan
void UnityEngine::SystemLanguage::_set_Catalan(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Catalan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Catalan", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Chinese
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Chinese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Chinese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Chinese"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Chinese
void UnityEngine::SystemLanguage::_set_Chinese(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Chinese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Chinese", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Czech
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Czech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Czech");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Czech"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Czech
void UnityEngine::SystemLanguage::_set_Czech(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Czech");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Czech", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Danish
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Danish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Danish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Danish"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Danish
void UnityEngine::SystemLanguage::_set_Danish(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Danish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Danish", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Dutch
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Dutch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Dutch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Dutch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Dutch
void UnityEngine::SystemLanguage::_set_Dutch(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Dutch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Dutch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage English
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_English() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_English");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "English"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage English
void UnityEngine::SystemLanguage::_set_English(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_English");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "English", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Estonian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Estonian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Estonian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Estonian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Estonian
void UnityEngine::SystemLanguage::_set_Estonian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Estonian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Estonian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Faroese
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Faroese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Faroese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Faroese"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Faroese
void UnityEngine::SystemLanguage::_set_Faroese(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Faroese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Faroese", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Finnish
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Finnish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Finnish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Finnish"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Finnish
void UnityEngine::SystemLanguage::_set_Finnish(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Finnish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Finnish", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage French
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_French() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_French");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "French"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage French
void UnityEngine::SystemLanguage::_set_French(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_French");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "French", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage German
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_German() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_German");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "German"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage German
void UnityEngine::SystemLanguage::_set_German(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_German");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "German", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Greek
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Greek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Greek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Greek"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Greek
void UnityEngine::SystemLanguage::_set_Greek(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Greek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Greek", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Hebrew
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Hebrew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Hebrew");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Hebrew"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Hebrew
void UnityEngine::SystemLanguage::_set_Hebrew(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Hebrew");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Hebrew", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Icelandic
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Icelandic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Icelandic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Icelandic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Icelandic
void UnityEngine::SystemLanguage::_set_Icelandic(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Icelandic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Icelandic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Indonesian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Indonesian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Indonesian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Indonesian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Indonesian
void UnityEngine::SystemLanguage::_set_Indonesian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Indonesian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Indonesian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Italian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Italian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Italian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Italian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Italian
void UnityEngine::SystemLanguage::_set_Italian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Italian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Italian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Japanese
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Japanese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Japanese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Japanese"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Japanese
void UnityEngine::SystemLanguage::_set_Japanese(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Japanese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Japanese", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Korean
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Korean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Korean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Korean"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Korean
void UnityEngine::SystemLanguage::_set_Korean(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Korean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Korean", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Latvian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Latvian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Latvian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Latvian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Latvian
void UnityEngine::SystemLanguage::_set_Latvian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Latvian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Latvian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Lithuanian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Lithuanian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Lithuanian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Lithuanian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Lithuanian
void UnityEngine::SystemLanguage::_set_Lithuanian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Lithuanian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Lithuanian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Norwegian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Norwegian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Norwegian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Norwegian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Norwegian
void UnityEngine::SystemLanguage::_set_Norwegian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Norwegian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Norwegian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Polish
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Polish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Polish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Polish"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Polish
void UnityEngine::SystemLanguage::_set_Polish(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Polish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Polish", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Portuguese
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Portuguese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Portuguese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Portuguese"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Portuguese
void UnityEngine::SystemLanguage::_set_Portuguese(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Portuguese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Portuguese", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Romanian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Romanian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Romanian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Romanian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Romanian
void UnityEngine::SystemLanguage::_set_Romanian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Romanian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Romanian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Russian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Russian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Russian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Russian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Russian
void UnityEngine::SystemLanguage::_set_Russian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Russian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Russian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage SerboCroatian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_SerboCroatian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_SerboCroatian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "SerboCroatian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage SerboCroatian
void UnityEngine::SystemLanguage::_set_SerboCroatian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_SerboCroatian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "SerboCroatian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Slovak
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Slovak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Slovak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Slovak"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Slovak
void UnityEngine::SystemLanguage::_set_Slovak(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Slovak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Slovak", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Slovenian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Slovenian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Slovenian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Slovenian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Slovenian
void UnityEngine::SystemLanguage::_set_Slovenian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Slovenian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Slovenian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Spanish
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Spanish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Spanish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Spanish"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Spanish
void UnityEngine::SystemLanguage::_set_Spanish(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Spanish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Spanish", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Swedish
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Swedish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Swedish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Swedish"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Swedish
void UnityEngine::SystemLanguage::_set_Swedish(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Swedish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Swedish", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Thai
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Thai() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Thai");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Thai"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Thai
void UnityEngine::SystemLanguage::_set_Thai(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Thai");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Thai", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Turkish
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Turkish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Turkish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Turkish"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Turkish
void UnityEngine::SystemLanguage::_set_Turkish(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Turkish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Turkish", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Ukrainian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Ukrainian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Ukrainian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Ukrainian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Ukrainian
void UnityEngine::SystemLanguage::_set_Ukrainian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Ukrainian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Ukrainian", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Vietnamese
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Vietnamese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Vietnamese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Vietnamese"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Vietnamese
void UnityEngine::SystemLanguage::_set_Vietnamese(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Vietnamese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Vietnamese", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage ChineseSimplified
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_ChineseSimplified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_ChineseSimplified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "ChineseSimplified"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage ChineseSimplified
void UnityEngine::SystemLanguage::_set_ChineseSimplified(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_ChineseSimplified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "ChineseSimplified", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage ChineseTraditional
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_ChineseTraditional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_ChineseTraditional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "ChineseTraditional"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage ChineseTraditional
void UnityEngine::SystemLanguage::_set_ChineseTraditional(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_ChineseTraditional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "ChineseTraditional", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Unknown
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Unknown
void UnityEngine::SystemLanguage::_set_Unknown(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SystemLanguage Hungarian
::UnityEngine::SystemLanguage UnityEngine::SystemLanguage::_get_Hungarian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_get_Hungarian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SystemLanguage>("UnityEngine", "SystemLanguage", "Hungarian"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SystemLanguage Hungarian
void UnityEngine::SystemLanguage::_set_Hungarian(::UnityEngine::SystemLanguage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::_set_Hungarian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SystemLanguage", "Hungarian", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::SystemLanguage::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemLanguage::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.LogType Error
::UnityEngine::LogType UnityEngine::LogType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LogType>("UnityEngine", "LogType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LogType Error
void UnityEngine::LogType::_set_Error(::UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LogType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LogType Assert
::UnityEngine::LogType UnityEngine::LogType::_get_Assert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_get_Assert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LogType>("UnityEngine", "LogType", "Assert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LogType Assert
void UnityEngine::LogType::_set_Assert(::UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_set_Assert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LogType", "Assert", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LogType Warning
::UnityEngine::LogType UnityEngine::LogType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LogType>("UnityEngine", "LogType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LogType Warning
void UnityEngine::LogType::_set_Warning(::UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LogType", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LogType Log
::UnityEngine::LogType UnityEngine::LogType::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LogType>("UnityEngine", "LogType", "Log"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LogType Log
void UnityEngine::LogType::_set_Log(::UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LogType", "Log", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LogType Exception
::UnityEngine::LogType UnityEngine::LogType::_get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_get_Exception");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LogType>("UnityEngine", "LogType", "Exception"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LogType Exception
void UnityEngine::LogType::_set_Exception(::UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::_set_Exception");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LogType", "Exception", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::LogType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LogOption
#include "UnityEngine/LogOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.LogOption None
::UnityEngine::LogOption UnityEngine::LogOption::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogOption::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LogOption>("UnityEngine", "LogOption", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LogOption None
void UnityEngine::LogOption::_set_None(::UnityEngine::LogOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogOption::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LogOption", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.LogOption NoStacktrace
::UnityEngine::LogOption UnityEngine::LogOption::_get_NoStacktrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogOption::_get_NoStacktrace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LogOption>("UnityEngine", "LogOption", "NoStacktrace"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.LogOption NoStacktrace
void UnityEngine::LogOption::_set_NoStacktrace(::UnityEngine::LogOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogOption::_set_NoStacktrace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "LogOption", "NoStacktrace", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::LogOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LogOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ThreadPriority
#include "UnityEngine/ThreadPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ThreadPriority Low
::UnityEngine::ThreadPriority UnityEngine::ThreadPriority::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ThreadPriority>("UnityEngine", "ThreadPriority", "Low"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ThreadPriority Low
void UnityEngine::ThreadPriority::_set_Low(::UnityEngine::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ThreadPriority", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ThreadPriority BelowNormal
::UnityEngine::ThreadPriority UnityEngine::ThreadPriority::_get_BelowNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::_get_BelowNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ThreadPriority>("UnityEngine", "ThreadPriority", "BelowNormal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ThreadPriority BelowNormal
void UnityEngine::ThreadPriority::_set_BelowNormal(::UnityEngine::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::_set_BelowNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ThreadPriority", "BelowNormal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ThreadPriority Normal
::UnityEngine::ThreadPriority UnityEngine::ThreadPriority::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ThreadPriority>("UnityEngine", "ThreadPriority", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ThreadPriority Normal
void UnityEngine::ThreadPriority::_set_Normal(::UnityEngine::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ThreadPriority", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ThreadPriority High
::UnityEngine::ThreadPriority UnityEngine::ThreadPriority::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ThreadPriority>("UnityEngine", "ThreadPriority", "High"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ThreadPriority High
void UnityEngine::ThreadPriority::_set_High(::UnityEngine::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ThreadPriority", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ThreadPriority::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ThreadPriority::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SortingLayer
#include "UnityEngine/SortingLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Id
[[deprecated("Use field access instead!")]] int& UnityEngine::SortingLayer::dyn_m_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SortingLayer::dyn_m_Id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SortingLayer.GetLayerValueFromID
int UnityEngine::SortingLayer::GetLayerValueFromID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SortingLayer::GetLayerValueFromID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SortingLayer", "GetLayerValueFromID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Keyframe
#include "UnityEngine/Keyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_Time
[[deprecated("Use field access instead!")]] float& UnityEngine::Keyframe::dyn_m_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::dyn_m_Time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Value
[[deprecated("Use field access instead!")]] float& UnityEngine::Keyframe::dyn_m_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::dyn_m_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InTangent
[[deprecated("Use field access instead!")]] float& UnityEngine::Keyframe::dyn_m_InTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::dyn_m_InTangent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InTangent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_OutTangent
[[deprecated("Use field access instead!")]] float& UnityEngine::Keyframe::dyn_m_OutTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::dyn_m_OutTangent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OutTangent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_WeightedMode
[[deprecated("Use field access instead!")]] int& UnityEngine::Keyframe::dyn_m_WeightedMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::dyn_m_WeightedMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WeightedMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Keyframe::dyn_m_InWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::dyn_m_InWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_OutWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Keyframe::dyn_m_OutWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::dyn_m_OutWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OutWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Keyframe.get_time
float UnityEngine::Keyframe::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Keyframe.set_time
void UnityEngine::Keyframe::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Keyframe.get_value
float UnityEngine::Keyframe::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Keyframe.set_value
void UnityEngine::Keyframe::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Keyframe.get_inTangent
float UnityEngine::Keyframe::get_inTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::get_inTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_inTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Keyframe.set_inTangent
void UnityEngine::Keyframe::set_inTangent(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::set_inTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_inTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Keyframe.get_outTangent
float UnityEngine::Keyframe::get_outTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::get_outTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_outTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Keyframe.set_outTangent
void UnityEngine::Keyframe::set_outTangent(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::set_outTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_outTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Keyframe..ctor
UnityEngine::Keyframe::Keyframe(float time, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, value);
}
// Autogenerated method: UnityEngine.Keyframe..ctor
UnityEngine::Keyframe::Keyframe(float time, float value, float inTangent, float outTangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Keyframe::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(inTangent), ::il2cpp_utils::ExtractType(outTangent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, value, inTangent, outTangent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WrapMode
#include "UnityEngine/WrapMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.WrapMode Once
::UnityEngine::WrapMode UnityEngine::WrapMode::_get_Once() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_get_Once");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WrapMode>("UnityEngine", "WrapMode", "Once"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.WrapMode Once
void UnityEngine::WrapMode::_set_Once(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_set_Once");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WrapMode", "Once", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.WrapMode Loop
::UnityEngine::WrapMode UnityEngine::WrapMode::_get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_get_Loop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WrapMode>("UnityEngine", "WrapMode", "Loop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.WrapMode Loop
void UnityEngine::WrapMode::_set_Loop(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_set_Loop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WrapMode", "Loop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.WrapMode PingPong
::UnityEngine::WrapMode UnityEngine::WrapMode::_get_PingPong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_get_PingPong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WrapMode>("UnityEngine", "WrapMode", "PingPong"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.WrapMode PingPong
void UnityEngine::WrapMode::_set_PingPong(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_set_PingPong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WrapMode", "PingPong", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.WrapMode Default
::UnityEngine::WrapMode UnityEngine::WrapMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WrapMode>("UnityEngine", "WrapMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.WrapMode Default
void UnityEngine::WrapMode::_set_Default(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WrapMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.WrapMode ClampForever
::UnityEngine::WrapMode UnityEngine::WrapMode::_get_ClampForever() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_get_ClampForever");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WrapMode>("UnityEngine", "WrapMode", "ClampForever"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.WrapMode ClampForever
void UnityEngine::WrapMode::_set_ClampForever(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_set_ClampForever");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WrapMode", "ClampForever", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.WrapMode Clamp
::UnityEngine::WrapMode UnityEngine::WrapMode::_get_Clamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_get_Clamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::WrapMode>("UnityEngine", "WrapMode", "Clamp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.WrapMode Clamp
void UnityEngine::WrapMode::_set_Clamp(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::_set_Clamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "WrapMode", "Clamp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::WrapMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WrapMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::AnimationCurve::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AnimationCurve.get_keys
::ArrayW<::UnityEngine::Keyframe> UnityEngine::AnimationCurve::get_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::get_keys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Keyframe>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationCurve.set_keys
void UnityEngine::AnimationCurve::set_keys(::ArrayW<::UnityEngine::Keyframe> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::set_keys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationCurve.get_length
int UnityEngine::AnimationCurve::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationCurve.Internal_Destroy
void UnityEngine::AnimationCurve::Internal_Destroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::Internal_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationCurve", "Internal_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AnimationCurve.Internal_Create
::System::IntPtr UnityEngine::AnimationCurve::Internal_Create(::ArrayW<::UnityEngine::Keyframe> keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationCurve", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys);
}
// Autogenerated method: UnityEngine.AnimationCurve.Internal_Equals
bool UnityEngine::AnimationCurve::Internal_Equals(::System::IntPtr other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::Internal_Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.AnimationCurve.Evaluate
float UnityEngine::AnimationCurve::Evaluate(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.AnimationCurve.AddKey
int UnityEngine::AnimationCurve::AddKey(float time, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::AddKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, time, value);
}
// Autogenerated method: UnityEngine.AnimationCurve.SetKeys
void UnityEngine::AnimationCurve::SetKeys(::ArrayW<::UnityEngine::Keyframe> keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::SetKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keys);
}
// Autogenerated method: UnityEngine.AnimationCurve.GetKeys
::ArrayW<::UnityEngine::Keyframe> UnityEngine::AnimationCurve::GetKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::GetKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Keyframe>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationCurve.Linear
::UnityEngine::AnimationCurve* UnityEngine::AnimationCurve::Linear(float timeStart, float valueStart, float timeEnd, float valueEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::Linear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationCurve", "Linear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeStart), ::il2cpp_utils::ExtractType(valueStart), ::il2cpp_utils::ExtractType(timeEnd), ::il2cpp_utils::ExtractType(valueEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeStart, valueStart, timeEnd, valueEnd);
}
// Autogenerated method: UnityEngine.AnimationCurve.EaseInOut
::UnityEngine::AnimationCurve* UnityEngine::AnimationCurve::EaseInOut(float timeStart, float valueStart, float timeEnd, float valueEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::EaseInOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationCurve", "EaseInOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeStart), ::il2cpp_utils::ExtractType(valueStart), ::il2cpp_utils::ExtractType(timeEnd), ::il2cpp_utils::ExtractType(valueEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationCurve*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeStart, valueStart, timeEnd, valueEnd);
}
// Autogenerated method: UnityEngine.AnimationCurve.Equals
bool UnityEngine::AnimationCurve::Equals(::UnityEngine::AnimationCurve* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.AnimationCurve.Finalize
void UnityEngine::AnimationCurve::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationCurve.Equals
bool UnityEngine::AnimationCurve::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: UnityEngine.AnimationCurve.GetHashCode
int UnityEngine::AnimationCurve::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationCurve::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Application
#include "UnityEngine/Application.hpp"
// Including type: UnityEngine.Application/UnityEngine.LowMemoryCallback
#include "UnityEngine/Application_LowMemoryCallback.hpp"
// Including type: UnityEngine.Application/UnityEngine.LogCallback
#include "UnityEngine/Application_LogCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.ThreadPriority
#include "UnityEngine/ThreadPriority.hpp"
// Including type: UnityEngine.RuntimePlatform
#include "UnityEngine/RuntimePlatform.hpp"
// Including type: UnityEngine.SystemLanguage
#include "UnityEngine/SystemLanguage.hpp"
// Including type: UnityEngine.NetworkReachability
#include "UnityEngine/NetworkReachability.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x104977C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Application/UnityEngine.LowMemoryCallback lowMemory
::UnityEngine::Application::LowMemoryCallback* UnityEngine::Application::_get_lowMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_get_lowMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Application::LowMemoryCallback*>("UnityEngine", "Application", "lowMemory"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Application/UnityEngine.LowMemoryCallback lowMemory
void UnityEngine::Application::_set_lowMemory(::UnityEngine::Application::LowMemoryCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_set_lowMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Application", "lowMemory", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Application/UnityEngine.LogCallback s_LogCallbackHandler
::UnityEngine::Application::LogCallback* UnityEngine::Application::_get_s_LogCallbackHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_get_s_LogCallbackHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Application::LogCallback*>("UnityEngine", "Application", "s_LogCallbackHandler"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Application/UnityEngine.LogCallback s_LogCallbackHandler
void UnityEngine::Application::_set_s_LogCallbackHandler(::UnityEngine::Application::LogCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_set_s_LogCallbackHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Application", "s_LogCallbackHandler", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Application/UnityEngine.LogCallback s_LogCallbackHandlerThreaded
::UnityEngine::Application::LogCallback* UnityEngine::Application::_get_s_LogCallbackHandlerThreaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_get_s_LogCallbackHandlerThreaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Application::LogCallback*>("UnityEngine", "Application", "s_LogCallbackHandlerThreaded"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Application/UnityEngine.LogCallback s_LogCallbackHandlerThreaded
void UnityEngine::Application::_set_s_LogCallbackHandlerThreaded(::UnityEngine::Application::LogCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_set_s_LogCallbackHandlerThreaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Application", "s_LogCallbackHandlerThreaded", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x10497B8
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Boolean> focusChanged
::System::Action_1<bool>* UnityEngine::Application::_get_focusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_get_focusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("UnityEngine", "Application", "focusChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Boolean> focusChanged
void UnityEngine::Application::_set_focusChanged(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_set_focusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Application", "focusChanged", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x10497F4
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.String> deepLinkActivated
::System::Action_1<::StringW>* UnityEngine::Application::_get_deepLinkActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_get_deepLinkActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("UnityEngine", "Application", "deepLinkActivated"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.String> deepLinkActivated
void UnityEngine::Application::_set_deepLinkActivated(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_set_deepLinkActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Application", "deepLinkActivated", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x1049830
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.Boolean> wantsToQuit
::System::Func_1<bool>* UnityEngine::Application::_get_wantsToQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_get_wantsToQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("UnityEngine", "Application", "wantsToQuit"));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.Boolean> wantsToQuit
void UnityEngine::Application::_set_wantsToQuit(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_set_wantsToQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Application", "wantsToQuit", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x104986C
// Autogenerated static field getter
// Get static field: static private System.Action quitting
::System::Action* UnityEngine::Application::_get_quitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_get_quitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "Application", "quitting"));
}
// Autogenerated static field setter
// Set static field: static private System.Action quitting
void UnityEngine::Application::_set_quitting(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::_set_quitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Application", "quitting", value));
}
// Autogenerated method: UnityEngine.Application.get_isPlaying
bool UnityEngine::Application::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.set_runInBackground
void UnityEngine::Application::set_runInBackground(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::set_runInBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "set_runInBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.get_dataPath
::StringW UnityEngine::Application::get_dataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_dataPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_dataPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_streamingAssetsPath
::StringW UnityEngine::Application::get_streamingAssetsPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_streamingAssetsPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_streamingAssetsPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_persistentDataPath
::StringW UnityEngine::Application::get_persistentDataPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_persistentDataPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_persistentDataPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_temporaryCachePath
::StringW UnityEngine::Application::get_temporaryCachePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_temporaryCachePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_temporaryCachePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_unityVersion
::StringW UnityEngine::Application::get_unityVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_unityVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_unityVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_version
::StringW UnityEngine::Application::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_identifier
::StringW UnityEngine::Application::get_identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_productName
::StringW UnityEngine::Application::get_productName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_productName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_productName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_companyName
::StringW UnityEngine::Application::get_companyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_companyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_companyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.set_targetFrameRate
void UnityEngine::Application::set_targetFrameRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::set_targetFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "set_targetFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.set_backgroundLoadingPriority
void UnityEngine::Application::set_backgroundLoadingPriority(::UnityEngine::ThreadPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::set_backgroundLoadingPriority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "set_backgroundLoadingPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.get_platform
::UnityEngine::RuntimePlatform UnityEngine::Application::get_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_platform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_platform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RuntimePlatform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_isMobilePlatform
bool UnityEngine::Application::get_isMobilePlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_isMobilePlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_isMobilePlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_systemLanguage
::UnityEngine::SystemLanguage UnityEngine::Application::get_systemLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_systemLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_systemLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SystemLanguage, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_internetReachability
::UnityEngine::NetworkReachability UnityEngine::Application::get_internetReachability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_internetReachability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_internetReachability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::NetworkReachability, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.get_isEditor
bool UnityEngine::Application::get_isEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::get_isEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "get_isEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.add_logMessageReceived
void UnityEngine::Application::add_logMessageReceived(::UnityEngine::Application::LogCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::add_logMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "add_logMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.remove_logMessageReceived
void UnityEngine::Application::remove_logMessageReceived(::UnityEngine::Application::LogCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::remove_logMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "remove_logMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.add_logMessageReceivedThreaded
void UnityEngine::Application::add_logMessageReceivedThreaded(::UnityEngine::Application::LogCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::add_logMessageReceivedThreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "add_logMessageReceivedThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.remove_logMessageReceivedThreaded
void UnityEngine::Application::remove_logMessageReceivedThreaded(::UnityEngine::Application::LogCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::remove_logMessageReceivedThreaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "remove_logMessageReceivedThreaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.add_onBeforeRender
void UnityEngine::Application::add_onBeforeRender(::UnityEngine::Events::UnityAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::add_onBeforeRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "add_onBeforeRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.remove_onBeforeRender
void UnityEngine::Application::remove_onBeforeRender(::UnityEngine::Events::UnityAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::remove_onBeforeRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "remove_onBeforeRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Application.Quit
void UnityEngine::Application::Quit(int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::Quit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "Quit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exitCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exitCode);
}
// Autogenerated method: UnityEngine.Application.Quit
void UnityEngine::Application::Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::Quit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "Quit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.CanStreamedLevelBeLoaded
bool UnityEngine::Application::CanStreamedLevelBeLoaded(int levelIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::CanStreamedLevelBeLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "CanStreamedLevelBeLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelIndex);
}
// Autogenerated method: UnityEngine.Application.CanStreamedLevelBeLoaded
bool UnityEngine::Application::CanStreamedLevelBeLoaded(::StringW levelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::CanStreamedLevelBeLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "CanStreamedLevelBeLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelName);
}
// Autogenerated method: UnityEngine.Application.OpenURL
void UnityEngine::Application::OpenURL(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::OpenURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "OpenURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: UnityEngine.Application.SetLogCallbackDefined
void UnityEngine::Application::SetLogCallbackDefined(bool defined) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::SetLogCallbackDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "SetLogCallbackDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defined)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, defined);
}
// Autogenerated method: UnityEngine.Application.CallLowMemory
void UnityEngine::Application::CallLowMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::CallLowMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "CallLowMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.CallLogCallback
void UnityEngine::Application::CallLogCallback(::StringW logString, ::StringW stackTrace, ::UnityEngine::LogType type, bool invokedOnMainThread) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::CallLogCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "CallLogCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logString), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(invokedOnMainThread)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logString, stackTrace, type, invokedOnMainThread);
}
// Autogenerated method: UnityEngine.Application.Internal_ApplicationWantsToQuit
bool UnityEngine::Application::Internal_ApplicationWantsToQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::Internal_ApplicationWantsToQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "Internal_ApplicationWantsToQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.Internal_ApplicationQuit
void UnityEngine::Application::Internal_ApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::Internal_ApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "Internal_ApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.InvokeOnBeforeRender
void UnityEngine::Application::InvokeOnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::InvokeOnBeforeRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "InvokeOnBeforeRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Application.InvokeFocusChanged
void UnityEngine::Application::InvokeFocusChanged(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::InvokeFocusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "InvokeFocusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, focus);
}
// Autogenerated method: UnityEngine.Application.InvokeDeepLinkActivated
void UnityEngine::Application::InvokeDeepLinkActivated(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::InvokeDeepLinkActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Application", "InvokeDeepLinkActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Application/UnityEngine.LowMemoryCallback
#include "UnityEngine/Application_LowMemoryCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Application/UnityEngine.LowMemoryCallback.Invoke
void UnityEngine::Application::LowMemoryCallback::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::LowMemoryCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Application/UnityEngine.LowMemoryCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Application::LowMemoryCallback::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::LowMemoryCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.Application/UnityEngine.LowMemoryCallback.EndInvoke
void UnityEngine::Application::LowMemoryCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::LowMemoryCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Application/UnityEngine.LogCallback
#include "UnityEngine/Application_LogCallback.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Application/UnityEngine.LogCallback.Invoke
void UnityEngine::Application::LogCallback::Invoke(::StringW condition, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::LogCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, condition, stackTrace, type);
}
// Autogenerated method: UnityEngine.Application/UnityEngine.LogCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Application::LogCallback::BeginInvoke(::StringW condition, ::StringW stackTrace, ::UnityEngine::LogType type, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::LogCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, condition, stackTrace, type, callback, object);
}
// Autogenerated method: UnityEngine.Application/UnityEngine.LogCallback.EndInvoke
void UnityEngine::Application::LogCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Application::LogCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.NetworkReachability
#include "UnityEngine/NetworkReachability.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.NetworkReachability NotReachable
::UnityEngine::NetworkReachability UnityEngine::NetworkReachability::_get_NotReachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NetworkReachability::_get_NotReachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::NetworkReachability>("UnityEngine", "NetworkReachability", "NotReachable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.NetworkReachability NotReachable
void UnityEngine::NetworkReachability::_set_NotReachable(::UnityEngine::NetworkReachability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NetworkReachability::_set_NotReachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "NetworkReachability", "NotReachable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.NetworkReachability ReachableViaCarrierDataNetwork
::UnityEngine::NetworkReachability UnityEngine::NetworkReachability::_get_ReachableViaCarrierDataNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NetworkReachability::_get_ReachableViaCarrierDataNetwork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::NetworkReachability>("UnityEngine", "NetworkReachability", "ReachableViaCarrierDataNetwork"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.NetworkReachability ReachableViaCarrierDataNetwork
void UnityEngine::NetworkReachability::_set_ReachableViaCarrierDataNetwork(::UnityEngine::NetworkReachability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NetworkReachability::_set_ReachableViaCarrierDataNetwork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "NetworkReachability", "ReachableViaCarrierDataNetwork", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.NetworkReachability ReachableViaLocalAreaNetwork
::UnityEngine::NetworkReachability UnityEngine::NetworkReachability::_get_ReachableViaLocalAreaNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NetworkReachability::_get_ReachableViaLocalAreaNetwork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::NetworkReachability>("UnityEngine", "NetworkReachability", "ReachableViaLocalAreaNetwork"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.NetworkReachability ReachableViaLocalAreaNetwork
void UnityEngine::NetworkReachability::_set_ReachableViaLocalAreaNetwork(::UnityEngine::NetworkReachability value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NetworkReachability::_set_ReachableViaLocalAreaNetwork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "NetworkReachability", "ReachableViaLocalAreaNetwork", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::NetworkReachability::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NetworkReachability::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioType
#include "UnityEngine/AudioType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType UNKNOWN
::UnityEngine::AudioType UnityEngine::AudioType::_get_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType UNKNOWN
void UnityEngine::AudioType::_set_UNKNOWN(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType ACC
::UnityEngine::AudioType UnityEngine::AudioType::_get_ACC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_ACC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "ACC"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType ACC
void UnityEngine::AudioType::_set_ACC(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_ACC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "ACC", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType AIFF
::UnityEngine::AudioType UnityEngine::AudioType::_get_AIFF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_AIFF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "AIFF"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType AIFF
void UnityEngine::AudioType::_set_AIFF(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_AIFF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "AIFF", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType IT
::UnityEngine::AudioType UnityEngine::AudioType::_get_IT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_IT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "IT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType IT
void UnityEngine::AudioType::_set_IT(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_IT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "IT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType MOD
::UnityEngine::AudioType UnityEngine::AudioType::_get_MOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_MOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "MOD"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType MOD
void UnityEngine::AudioType::_set_MOD(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_MOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "MOD", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType MPEG
::UnityEngine::AudioType UnityEngine::AudioType::_get_MPEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_MPEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "MPEG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType MPEG
void UnityEngine::AudioType::_set_MPEG(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_MPEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "MPEG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType OGGVORBIS
::UnityEngine::AudioType UnityEngine::AudioType::_get_OGGVORBIS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_OGGVORBIS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "OGGVORBIS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType OGGVORBIS
void UnityEngine::AudioType::_set_OGGVORBIS(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_OGGVORBIS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "OGGVORBIS", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType S3M
::UnityEngine::AudioType UnityEngine::AudioType::_get_S3M() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_S3M");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "S3M"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType S3M
void UnityEngine::AudioType::_set_S3M(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_S3M");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "S3M", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType WAV
::UnityEngine::AudioType UnityEngine::AudioType::_get_WAV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_WAV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "WAV"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType WAV
void UnityEngine::AudioType::_set_WAV(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_WAV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "WAV", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType XM
::UnityEngine::AudioType UnityEngine::AudioType::_get_XM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_XM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "XM"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType XM
void UnityEngine::AudioType::_set_XM(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_XM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "XM", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType XMA
::UnityEngine::AudioType UnityEngine::AudioType::_get_XMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_XMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "XMA"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType XMA
void UnityEngine::AudioType::_set_XMA(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_XMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "XMA", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType VAG
::UnityEngine::AudioType UnityEngine::AudioType::_get_VAG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_VAG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "VAG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType VAG
void UnityEngine::AudioType::_set_VAG(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_VAG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "VAG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioType AUDIOQUEUE
::UnityEngine::AudioType UnityEngine::AudioType::_get_AUDIOQUEUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_get_AUDIOQUEUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AudioType>("UnityEngine", "AudioType", "AUDIOQUEUE"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioType AUDIOQUEUE
void UnityEngine::AudioType::_set_AUDIOQUEUE(::UnityEngine::AudioType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::_set_AUDIOQUEUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioType", "AUDIOQUEUE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.BootConfigData
#include "UnityEngine/BootConfigData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::BootConfigData::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BootConfigData::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.BootConfigData.WrapBootConfigData
::UnityEngine::BootConfigData* UnityEngine::BootConfigData::WrapBootConfigData(::System::IntPtr nativeHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BootConfigData::WrapBootConfigData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "BootConfigData", "WrapBootConfigData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::BootConfigData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeHandle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CachedAssetBundle
#include "UnityEngine/CachedAssetBundle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::CachedAssetBundle::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CachedAssetBundle::dyn_m_Name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Hash128 m_Hash
[[deprecated("Use field access instead!")]] ::UnityEngine::Hash128& UnityEngine::CachedAssetBundle::dyn_m_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CachedAssetBundle::dyn_m_Hash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Hash"))->offset;
  return *reinterpret_cast<::UnityEngine::Hash128*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.CachedAssetBundle.get_name
::StringW UnityEngine::CachedAssetBundle::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CachedAssetBundle::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CachedAssetBundle.get_hash
::UnityEngine::Hash128 UnityEngine::CachedAssetBundle::get_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CachedAssetBundle::get_hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Hash128, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CachedAssetBundle..ctor
// ABORTED elsewhere.  UnityEngine::CachedAssetBundle::CachedAssetBundle(::StringW name, ::UnityEngine::Hash128 hash)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Cache
#include "UnityEngine/Cache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
[[deprecated("Use field access instead!")]] int& UnityEngine::Cache::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Cache.get_handle
int UnityEngine::Cache::get_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::get_handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cache.get_valid
bool UnityEngine::Cache::get_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::get_valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cache.get_path
::StringW UnityEngine::Cache::get_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::get_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cache.set_maximumAvailableStorageSpace
void UnityEngine::Cache::set_maximumAvailableStorageSpace(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::set_maximumAvailableStorageSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maximumAvailableStorageSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Cache.set_expirationDelay
void UnityEngine::Cache::set_expirationDelay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::set_expirationDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_expirationDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Cache.Equals
bool UnityEngine::Cache::Equals(::UnityEngine::Cache other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Cache.Cache_IsValid
bool UnityEngine::Cache::Cache_IsValid(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::Cache_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cache", "Cache_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Cache.Cache_GetPath
::StringW UnityEngine::Cache::Cache_GetPath(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::Cache_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cache", "Cache_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Cache.Cache_SetMaximumDiskSpaceAvailable
void UnityEngine::Cache::Cache_SetMaximumDiskSpaceAvailable(int handle, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::Cache_SetMaximumDiskSpaceAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cache", "Cache_SetMaximumDiskSpaceAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Cache.Cache_SetExpirationDelay
void UnityEngine::Cache::Cache_SetExpirationDelay(int handle, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::Cache_SetExpirationDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Cache", "Cache_SetExpirationDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Cache.GetHashCode
int UnityEngine::Cache::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Cache.Equals
bool UnityEngine::Cache::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Cache::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Caching
#include "UnityEngine/Caching.hpp"
// Including type: UnityEngine.Cache
#include "UnityEngine/Cache.hpp"
// Including type: UnityEngine.Hash128
#include "UnityEngine/Hash128.hpp"
// Including type: UnityEngine.CachedAssetBundle
#include "UnityEngine/CachedAssetBundle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Caching.set_compressionEnabled
void UnityEngine::Caching::set_compressionEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::set_compressionEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "set_compressionEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Caching.get_ready
bool UnityEngine::Caching::get_ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::get_ready");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_ready", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Caching.get_defaultCache
::UnityEngine::Cache UnityEngine::Caching::get_defaultCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::get_defaultCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_defaultCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cache, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Caching.get_currentCacheForWriting
::UnityEngine::Cache UnityEngine::Caching::get_currentCacheForWriting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::get_currentCacheForWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_currentCacheForWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cache, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Caching.set_currentCacheForWriting
void UnityEngine::Caching::set_currentCacheForWriting(::UnityEngine::Cache value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::set_currentCacheForWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "set_currentCacheForWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersion
bool UnityEngine::Caching::ClearCachedVersion(::StringW assetBundleName, ::UnityEngine::Hash128 hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::ClearCachedVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersionInternal
bool UnityEngine::Caching::ClearCachedVersionInternal(::StringW assetBundleName, ::UnityEngine::Hash128 hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::ClearCachedVersionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.ClearOtherCachedVersions
bool UnityEngine::Caching::ClearOtherCachedVersions(::StringW assetBundleName, ::UnityEngine::Hash128 hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::ClearOtherCachedVersions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearOtherCachedVersions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.ClearAllCachedVersions
bool UnityEngine::Caching::ClearAllCachedVersions(::StringW assetBundleName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::ClearAllCachedVersions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearAllCachedVersions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetBundleName);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersions
bool UnityEngine::Caching::ClearCachedVersions(::StringW assetBundleName, ::UnityEngine::Hash128 hash, bool keepInputVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::ClearCachedVersions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(keepInputVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetBundleName, hash, keepInputVersion);
}
// Autogenerated method: UnityEngine.Caching.IsVersionCached
bool UnityEngine::Caching::IsVersionCached(::UnityEngine::CachedAssetBundle cachedBundle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::IsVersionCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "IsVersionCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachedBundle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cachedBundle);
}
// Autogenerated method: UnityEngine.Caching.IsVersionCached
bool UnityEngine::Caching::IsVersionCached(::StringW url, ::StringW assetBundleName, ::UnityEngine::Hash128 hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::IsVersionCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "IsVersionCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, assetBundleName, hash);
}
// Autogenerated method: UnityEngine.Caching.AddCache
::UnityEngine::Cache UnityEngine::Caching::AddCache(::StringW cachePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::AddCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "AddCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cache, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cachePath);
}
// Autogenerated method: UnityEngine.Caching.AddCache
::UnityEngine::Cache UnityEngine::Caching::AddCache(::StringW cachePath, bool isReadonly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::AddCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "AddCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath), ::il2cpp_utils::ExtractType(isReadonly)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cache, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cachePath, isReadonly);
}
// Autogenerated method: UnityEngine.Caching.GetCacheByPath
::UnityEngine::Cache UnityEngine::Caching::GetCacheByPath(::StringW cachePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::GetCacheByPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "GetCacheByPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cache, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cachePath);
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersionInternal_Injected
bool UnityEngine::Caching::ClearCachedVersionInternal_Injected(::StringW assetBundleName, ByRef<::UnityEngine::Hash128> hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::ClearCachedVersionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetBundleName, byref(hash));
}
// Autogenerated method: UnityEngine.Caching.ClearCachedVersions_Injected
bool UnityEngine::Caching::ClearCachedVersions_Injected(::StringW assetBundleName, ByRef<::UnityEngine::Hash128> hash, bool keepInputVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::ClearCachedVersions_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "ClearCachedVersions_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(keepInputVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetBundleName, byref(hash), keepInputVersion);
}
// Autogenerated method: UnityEngine.Caching.IsVersionCached_Injected
bool UnityEngine::Caching::IsVersionCached_Injected(::StringW url, ::StringW assetBundleName, ByRef<::UnityEngine::Hash128> hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::IsVersionCached_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "IsVersionCached_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(assetBundleName), ::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, assetBundleName, byref(hash));
}
// Autogenerated method: UnityEngine.Caching.AddCache_Injected
void UnityEngine::Caching::AddCache_Injected(::StringW cachePath, bool isReadonly, ByRef<::UnityEngine::Cache> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::AddCache_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "AddCache_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath), ::il2cpp_utils::ExtractType(isReadonly), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Cache&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cachePath, isReadonly, byref(ret));
}
// Autogenerated method: UnityEngine.Caching.GetCacheByPath_Injected
void UnityEngine::Caching::GetCacheByPath_Injected(::StringW cachePath, ByRef<::UnityEngine::Cache> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::GetCacheByPath_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "GetCacheByPath_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cachePath), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Cache&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cachePath, byref(ret));
}
// Autogenerated method: UnityEngine.Caching.get_defaultCache_Injected
void UnityEngine::Caching::get_defaultCache_Injected(ByRef<::UnityEngine::Cache> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::get_defaultCache_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_defaultCache_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Cache&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Caching.get_currentCacheForWriting_Injected
void UnityEngine::Caching::get_currentCacheForWriting_Injected(ByRef<::UnityEngine::Cache> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::get_currentCacheForWriting_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "get_currentCacheForWriting_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Cache&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Caching.set_currentCacheForWriting_Injected
void UnityEngine::Caching::set_currentCacheForWriting_Injected(ByRef<::UnityEngine::Cache> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Caching::set_currentCacheForWriting_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Caching", "set_currentCacheForWriting_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Camera/UnityEngine.StereoscopicEye
#include "UnityEngine/Camera_StereoscopicEye.hpp"
// Including type: UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye
#include "UnityEngine/Camera_MonoOrStereoscopicEye.hpp"
// Including type: UnityEngine.Camera/UnityEngine.CameraCallback
#include "UnityEngine/Camera_CameraCallback.hpp"
// Including type: UnityEngine.RenderingPath
#include "UnityEngine/RenderingPath.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.CameraClearFlags
#include "UnityEngine/CameraClearFlags.hpp"
// Including type: UnityEngine.DepthTextureMode
#include "UnityEngine/DepthTextureMode.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.StereoTargetEyeMask
#include "UnityEngine/StereoTargetEyeMask.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPreCull
::UnityEngine::Camera::CameraCallback* UnityEngine::Camera::_get_onPreCull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::_get_onPreCull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera::CameraCallback*>("UnityEngine", "Camera", "onPreCull"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPreCull
void UnityEngine::Camera::_set_onPreCull(::UnityEngine::Camera::CameraCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::_set_onPreCull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera", "onPreCull", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPreRender
::UnityEngine::Camera::CameraCallback* UnityEngine::Camera::_get_onPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::_get_onPreRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera::CameraCallback*>("UnityEngine", "Camera", "onPreRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPreRender
void UnityEngine::Camera::_set_onPreRender(::UnityEngine::Camera::CameraCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::_set_onPreRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera", "onPreRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPostRender
::UnityEngine::Camera::CameraCallback* UnityEngine::Camera::_get_onPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::_get_onPostRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera::CameraCallback*>("UnityEngine", "Camera", "onPostRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/UnityEngine.CameraCallback onPostRender
void UnityEngine::Camera::_set_onPostRender(::UnityEngine::Camera::CameraCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::_set_onPostRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera", "onPostRender", value));
}
// Autogenerated method: UnityEngine.Camera.get_nearClipPlane
float UnityEngine::Camera::get_nearClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_nearClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nearClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_nearClipPlane
void UnityEngine::Camera::set_nearClipPlane(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_nearClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nearClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_farClipPlane
float UnityEngine::Camera::get_farClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_farClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_farClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_farClipPlane
void UnityEngine::Camera::set_farClipPlane(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_farClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_farClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_fieldOfView
float UnityEngine::Camera::get_fieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_fieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_fieldOfView
void UnityEngine::Camera::set_fieldOfView(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_fieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_renderingPath
void UnityEngine::Camera::set_renderingPath(::UnityEngine::RenderingPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_renderingPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderingPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_actualRenderingPath
::UnityEngine::RenderingPath UnityEngine::Camera::get_actualRenderingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_actualRenderingPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actualRenderingPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderingPath, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_allowHDR
void UnityEngine::Camera::set_allowHDR(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_allowHDR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowHDR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_allowMSAA
void UnityEngine::Camera::set_allowMSAA(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_allowMSAA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowMSAA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_forceIntoRenderTexture
void UnityEngine::Camera::set_forceIntoRenderTexture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_forceIntoRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forceIntoRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.set_orthographicSize
void UnityEngine::Camera::set_orthographicSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_orthographicSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_orthographicSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_orthographic
bool UnityEngine::Camera::get_orthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_orthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_orthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_orthographic
void UnityEngine::Camera::set_orthographic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_orthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_orthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_depth
float UnityEngine::Camera::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_depth
void UnityEngine::Camera::set_depth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_aspect
float UnityEngine::Camera::get_aspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_aspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_aspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_aspect
void UnityEngine::Camera::set_aspect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_aspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_aspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_cullingMask
int UnityEngine::Camera::get_cullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_cullingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_cullingMask
void UnityEngine::Camera::set_cullingMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_cullingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_eventMask
int UnityEngine::Camera::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_useOcclusionCulling
void UnityEngine::Camera::set_useOcclusionCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_useOcclusionCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useOcclusionCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_backgroundColor
::UnityEngine::Color UnityEngine::Camera::get_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_backgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_backgroundColor
void UnityEngine::Camera::set_backgroundColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_backgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_clearFlags
::UnityEngine::CameraClearFlags UnityEngine::Camera::get_clearFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_clearFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CameraClearFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_clearFlags
void UnityEngine::Camera::set_clearFlags(::UnityEngine::CameraClearFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_clearFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clearFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_depthTextureMode
::UnityEngine::DepthTextureMode UnityEngine::Camera::get_depthTextureMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_depthTextureMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depthTextureMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DepthTextureMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_depthTextureMode
void UnityEngine::Camera::set_depthTextureMode(::UnityEngine::DepthTextureMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_depthTextureMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_depthTextureMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_rect
::UnityEngine::Rect UnityEngine::Camera::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_rect
void UnityEngine::Camera::set_rect(::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_pixelRect
::UnityEngine::Rect UnityEngine::Camera::get_pixelRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_pixelRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_pixelWidth
int UnityEngine::Camera::get_pixelWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_pixelWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_pixelHeight
int UnityEngine::Camera::get_pixelHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_pixelHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_targetTexture
::UnityEngine::RenderTexture* UnityEngine::Camera::get_targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_targetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_targetTexture
void UnityEngine::Camera::set_targetTexture(::UnityEngine::RenderTexture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_targetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_targetDisplay
int UnityEngine::Camera::get_targetDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_targetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_targetDisplay
void UnityEngine::Camera::set_targetDisplay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_targetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_worldToCameraMatrix
::UnityEngine::Matrix4x4 UnityEngine::Camera::get_worldToCameraMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_worldToCameraMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToCameraMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_worldToCameraMatrix
void UnityEngine::Camera::set_worldToCameraMatrix(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_worldToCameraMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_worldToCameraMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_projectionMatrix
::UnityEngine::Matrix4x4 UnityEngine::Camera::get_projectionMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_projectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_projectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_projectionMatrix
void UnityEngine::Camera::set_projectionMatrix(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_projectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_projectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_main
::UnityEngine::Camera* UnityEngine::Camera::get_main() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_main");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "get_main", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_current
::UnityEngine::Camera* UnityEngine::Camera::get_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "get_current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_stereoEnabled
bool UnityEngine::Camera::get_stereoEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_stereoEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stereoEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.get_stereoTargetEye
::UnityEngine::StereoTargetEyeMask UnityEngine::Camera::get_stereoTargetEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_stereoTargetEye");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stereoTargetEye", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::StereoTargetEyeMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.set_stereoTargetEye
void UnityEngine::Camera::set_stereoTargetEye(::UnityEngine::StereoTargetEyeMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_stereoTargetEye");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stereoTargetEye", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Camera.get_allCamerasCount
int UnityEngine::Camera::get_allCamerasCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_allCamerasCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "get_allCamerasCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.ResetWorldToCameraMatrix
void UnityEngine::Camera::ResetWorldToCameraMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ResetWorldToCameraMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWorldToCameraMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.CalculateObliqueMatrix
::UnityEngine::Matrix4x4 UnityEngine::Camera::CalculateObliqueMatrix(::UnityEngine::Vector4 clipPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::CalculateObliqueMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateObliqueMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipPlane)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method, clipPlane);
}
// Autogenerated method: UnityEngine.Camera.WorldToScreenPoint
::UnityEngine::Vector3 UnityEngine::Camera::WorldToScreenPoint(::UnityEngine::Vector3 position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::WorldToScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, eye);
}
// Autogenerated method: UnityEngine.Camera.WorldToViewportPoint
::UnityEngine::Vector3 UnityEngine::Camera::WorldToViewportPoint(::UnityEngine::Vector3 position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::WorldToViewportPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToViewportPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, eye);
}
// Autogenerated method: UnityEngine.Camera.ViewportToWorldPoint
::UnityEngine::Vector3 UnityEngine::Camera::ViewportToWorldPoint(::UnityEngine::Vector3 position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ViewportToWorldPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ViewportToWorldPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, eye);
}
// Autogenerated method: UnityEngine.Camera.WorldToScreenPoint
::UnityEngine::Vector3 UnityEngine::Camera::WorldToScreenPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::WorldToScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Camera.WorldToViewportPoint
::UnityEngine::Vector3 UnityEngine::Camera::WorldToViewportPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::WorldToViewportPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToViewportPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Camera.ScreenToViewportPoint
::UnityEngine::Vector3 UnityEngine::Camera::ScreenToViewportPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ScreenToViewportPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenToViewportPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Camera.ScreenPointToRay
::UnityEngine::Ray UnityEngine::Camera::ScreenPointToRay(::UnityEngine::Vector2 pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(this, ___internal__method, pos, eye);
}
// Autogenerated method: UnityEngine.Camera.ScreenPointToRay
::UnityEngine::Ray UnityEngine::Camera::ScreenPointToRay(::UnityEngine::Vector3 pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(this, ___internal__method, pos, eye);
}
// Autogenerated method: UnityEngine.Camera.ScreenPointToRay
::UnityEngine::Ray UnityEngine::Camera::ScreenPointToRay(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(this, ___internal__method, pos);
}
// Autogenerated method: UnityEngine.Camera.GetStereoProjectionMatrix
::UnityEngine::Matrix4x4 UnityEngine::Camera::GetStereoProjectionMatrix(::UnityEngine::Camera::StereoscopicEye eye) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::GetStereoProjectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStereoProjectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method, eye);
}
// Autogenerated method: UnityEngine.Camera.GetAllCamerasCount
int UnityEngine::Camera::GetAllCamerasCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::GetAllCamerasCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "GetAllCamerasCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.GetAllCamerasImpl
int UnityEngine::Camera::GetAllCamerasImpl(ByRef<::ArrayW<::UnityEngine::Camera*>> cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::GetAllCamerasImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "GetAllCamerasImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::Camera*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(cam));
}
// Autogenerated method: UnityEngine.Camera.GetAllCameras
int UnityEngine::Camera::GetAllCameras(::ArrayW<::UnityEngine::Camera*> cameras) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::GetAllCameras");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "GetAllCameras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameras)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameras);
}
// Autogenerated method: UnityEngine.Camera.RenderToCubemapImpl
bool UnityEngine::Camera::RenderToCubemapImpl(::UnityEngine::Texture* tex, int faceMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::RenderToCubemapImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderToCubemapImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tex), ::il2cpp_utils::ExtractType(faceMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tex, faceMask);
}
// Autogenerated method: UnityEngine.Camera.RenderToCubemap
bool UnityEngine::Camera::RenderToCubemap(::UnityEngine::RenderTexture* cubemap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::RenderToCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderToCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cubemap)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cubemap);
}
// Autogenerated method: UnityEngine.Camera.Render
void UnityEngine::Camera::Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Camera.RenderWithShader
void UnityEngine::Camera::RenderWithShader(::UnityEngine::Shader* shader, ::StringW replacementTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::RenderWithShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderWithShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(replacementTag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shader, replacementTag);
}
// Autogenerated method: UnityEngine.Camera.CopyFrom
void UnityEngine::Camera::CopyFrom(::UnityEngine::Camera* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Camera.AddCommandBufferImpl
void UnityEngine::Camera::AddCommandBufferImpl(::UnityEngine::Rendering::CameraEvent evt, ::UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::AddCommandBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCommandBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Camera.RemoveCommandBufferImpl
void UnityEngine::Camera::RemoveCommandBufferImpl(::UnityEngine::Rendering::CameraEvent evt, ::UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::RemoveCommandBufferImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCommandBufferImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Camera.AddCommandBuffer
void UnityEngine::Camera::AddCommandBuffer(::UnityEngine::Rendering::CameraEvent evt, ::UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::AddCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Camera.RemoveCommandBuffer
void UnityEngine::Camera::RemoveCommandBuffer(::UnityEngine::Rendering::CameraEvent evt, ::UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::RemoveCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Camera.FireOnPreCull
void UnityEngine::Camera::FireOnPreCull(::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::FireOnPreCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "FireOnPreCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera.FireOnPreRender
void UnityEngine::Camera::FireOnPreRender(::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::FireOnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "FireOnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera.FireOnPostRender
void UnityEngine::Camera::FireOnPostRender(::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::FireOnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Camera", "FireOnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera.get_backgroundColor_Injected
void UnityEngine::Camera::get_backgroundColor_Injected(ByRef<::UnityEngine::Color> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_backgroundColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.set_backgroundColor_Injected
void UnityEngine::Camera::set_backgroundColor_Injected(ByRef<::UnityEngine::Color> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_backgroundColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backgroundColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Camera.get_rect_Injected
void UnityEngine::Camera::get_rect_Injected(ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.set_rect_Injected
void UnityEngine::Camera::set_rect_Injected(ByRef<::UnityEngine::Rect> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Camera.get_pixelRect_Injected
void UnityEngine::Camera::get_pixelRect_Injected(ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_pixelRect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelRect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.get_worldToCameraMatrix_Injected
void UnityEngine::Camera::get_worldToCameraMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_worldToCameraMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToCameraMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.set_worldToCameraMatrix_Injected
void UnityEngine::Camera::set_worldToCameraMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_worldToCameraMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_worldToCameraMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Camera.get_projectionMatrix_Injected
void UnityEngine::Camera::get_projectionMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::get_projectionMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_projectionMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.set_projectionMatrix_Injected
void UnityEngine::Camera::set_projectionMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::set_projectionMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_projectionMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Camera.CalculateObliqueMatrix_Injected
void UnityEngine::Camera::CalculateObliqueMatrix_Injected(ByRef<::UnityEngine::Vector4> clipPlane, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::CalculateObliqueMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateObliqueMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipPlane), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(clipPlane), byref(ret));
}
// Autogenerated method: UnityEngine.Camera.WorldToScreenPoint_Injected
void UnityEngine::Camera::WorldToScreenPoint_Injected(ByRef<::UnityEngine::Vector3> position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::WorldToScreenPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToScreenPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), eye, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.WorldToViewportPoint_Injected
void UnityEngine::Camera::WorldToViewportPoint_Injected(ByRef<::UnityEngine::Vector3> position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::WorldToViewportPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToViewportPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), eye, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.ViewportToWorldPoint_Injected
void UnityEngine::Camera::ViewportToWorldPoint_Injected(ByRef<::UnityEngine::Vector3> position, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ViewportToWorldPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ViewportToWorldPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), eye, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.ScreenToViewportPoint_Injected
void UnityEngine::Camera::ScreenToViewportPoint_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ScreenToViewportPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenToViewportPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(ret));
}
// Autogenerated method: UnityEngine.Camera.ScreenPointToRay_Injected
void UnityEngine::Camera::ScreenPointToRay_Injected(ByRef<::UnityEngine::Vector2> pos, ::UnityEngine::Camera::MonoOrStereoscopicEye eye, ByRef<::UnityEngine::Ray> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::ScreenPointToRay_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScreenPointToRay_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Ray&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pos), eye, byref(ret));
}
// Autogenerated method: UnityEngine.Camera.GetStereoProjectionMatrix_Injected
void UnityEngine::Camera::GetStereoProjectionMatrix_Injected(::UnityEngine::Camera::StereoscopicEye eye, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::GetStereoProjectionMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStereoProjectionMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eye), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eye, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Camera/UnityEngine.StereoscopicEye
#include "UnityEngine/Camera_StereoscopicEye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/UnityEngine.StereoscopicEye Left
::UnityEngine::Camera::StereoscopicEye UnityEngine::Camera::StereoscopicEye::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::StereoscopicEye::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera::StereoscopicEye>("UnityEngine", "Camera/StereoscopicEye", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/UnityEngine.StereoscopicEye Left
void UnityEngine::Camera::StereoscopicEye::_set_Left(::UnityEngine::Camera::StereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::StereoscopicEye::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/StereoscopicEye", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/UnityEngine.StereoscopicEye Right
::UnityEngine::Camera::StereoscopicEye UnityEngine::Camera::StereoscopicEye::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::StereoscopicEye::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera::StereoscopicEye>("UnityEngine", "Camera/StereoscopicEye", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/UnityEngine.StereoscopicEye Right
void UnityEngine::Camera::StereoscopicEye::_set_Right(::UnityEngine::Camera::StereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::StereoscopicEye::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/StereoscopicEye", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Camera::StereoscopicEye::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::StereoscopicEye::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye
#include "UnityEngine/Camera_MonoOrStereoscopicEye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye Left
::UnityEngine::Camera::MonoOrStereoscopicEye UnityEngine::Camera::MonoOrStereoscopicEye::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::MonoOrStereoscopicEye::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera::MonoOrStereoscopicEye>("UnityEngine", "Camera/MonoOrStereoscopicEye", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye Left
void UnityEngine::Camera::MonoOrStereoscopicEye::_set_Left(::UnityEngine::Camera::MonoOrStereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::MonoOrStereoscopicEye::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/MonoOrStereoscopicEye", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye Right
::UnityEngine::Camera::MonoOrStereoscopicEye UnityEngine::Camera::MonoOrStereoscopicEye::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::MonoOrStereoscopicEye::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera::MonoOrStereoscopicEye>("UnityEngine", "Camera/MonoOrStereoscopicEye", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye Right
void UnityEngine::Camera::MonoOrStereoscopicEye::_set_Right(::UnityEngine::Camera::MonoOrStereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::MonoOrStereoscopicEye::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/MonoOrStereoscopicEye", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye Mono
::UnityEngine::Camera::MonoOrStereoscopicEye UnityEngine::Camera::MonoOrStereoscopicEye::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::MonoOrStereoscopicEye::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera::MonoOrStereoscopicEye>("UnityEngine", "Camera/MonoOrStereoscopicEye", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera/UnityEngine.MonoOrStereoscopicEye Mono
void UnityEngine::Camera::MonoOrStereoscopicEye::_set_Mono(::UnityEngine::Camera::MonoOrStereoscopicEye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::MonoOrStereoscopicEye::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Camera/MonoOrStereoscopicEye", "Mono", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Camera::MonoOrStereoscopicEye::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::MonoOrStereoscopicEye::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Camera/UnityEngine.CameraCallback
#include "UnityEngine/Camera_CameraCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Camera/UnityEngine.CameraCallback.Invoke
void UnityEngine::Camera::CameraCallback::Invoke(::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::CameraCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cam);
}
// Autogenerated method: UnityEngine.Camera/UnityEngine.CameraCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Camera::CameraCallback::BeginInvoke(::UnityEngine::Camera* cam, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::CameraCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, cam, callback, object);
}
// Autogenerated method: UnityEngine.Camera/UnityEngine.CameraCallback.EndInvoke
void UnityEngine::Camera::CameraCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Camera::CameraCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CullingGroup
#include "UnityEngine/CullingGroup.hpp"
// Including type: UnityEngine.CullingGroup/UnityEngine.StateChanged
#include "UnityEngine/CullingGroup_StateChanged.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::CullingGroup::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CullingGroup::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CullingGroup/UnityEngine.StateChanged m_OnStateChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::CullingGroup::StateChanged*& UnityEngine::CullingGroup::dyn_m_OnStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CullingGroup::dyn_m_OnStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnStateChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::CullingGroup::StateChanged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.CullingGroup.SendEvents
void UnityEngine::CullingGroup::SendEvents(::UnityEngine::CullingGroup* cullingGroup, ::System::IntPtr eventsPtr, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CullingGroup::SendEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CullingGroup", "SendEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cullingGroup), ::il2cpp_utils::ExtractType(eventsPtr), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cullingGroup, eventsPtr, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CullingGroup/UnityEngine.StateChanged
#include "UnityEngine/CullingGroup_StateChanged.hpp"
// Including type: UnityEngine.CullingGroupEvent
#include "UnityEngine/CullingGroupEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CullingGroup/UnityEngine.StateChanged.Invoke
void UnityEngine::CullingGroup::StateChanged::Invoke(::UnityEngine::CullingGroupEvent sphere) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CullingGroup::StateChanged::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sphere)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sphere);
}
// Autogenerated method: UnityEngine.CullingGroup/UnityEngine.StateChanged.BeginInvoke
::System::IAsyncResult* UnityEngine::CullingGroup::StateChanged::BeginInvoke(::UnityEngine::CullingGroupEvent sphere, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CullingGroup::StateChanged::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sphere), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sphere, callback, object);
}
// Autogenerated method: UnityEngine.CullingGroup/UnityEngine.StateChanged.EndInvoke
void UnityEngine::CullingGroup::StateChanged::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CullingGroup::StateChanged::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ReflectionProbe
#include "UnityEngine/ReflectionProbe.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x10498A8
// Autogenerated static field getter
// Get static field: static private System.Action`2<UnityEngine.ReflectionProbe,UnityEngine.ReflectionProbe/UnityEngine.ReflectionProbeEvent> reflectionProbeChanged
::System::Action_2<::UnityEngine::ReflectionProbe*, ::UnityEngine::ReflectionProbe::ReflectionProbeEvent>* UnityEngine::ReflectionProbe::_get_reflectionProbeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::_get_reflectionProbeChanged");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::UnityEngine::ReflectionProbe*, ::UnityEngine::ReflectionProbe::ReflectionProbeEvent>*>("UnityEngine", "ReflectionProbe", "reflectionProbeChanged")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<UnityEngine.ReflectionProbe,UnityEngine.ReflectionProbe/UnityEngine.ReflectionProbeEvent> reflectionProbeChanged
void UnityEngine::ReflectionProbe::_set_reflectionProbeChanged(::System::Action_2<::UnityEngine::ReflectionProbe*, ::UnityEngine::ReflectionProbe::ReflectionProbeEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::_set_reflectionProbeChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ReflectionProbe", "reflectionProbeChanged", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x10498E4
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Cubemap> defaultReflectionSet
::System::Action_1<::UnityEngine::Cubemap*>* UnityEngine::ReflectionProbe::_get_defaultReflectionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::_get_defaultReflectionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::Cubemap*>*>("UnityEngine", "ReflectionProbe", "defaultReflectionSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Cubemap> defaultReflectionSet
void UnityEngine::ReflectionProbe::_set_defaultReflectionSet(::System::Action_1<::UnityEngine::Cubemap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::_set_defaultReflectionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ReflectionProbe", "defaultReflectionSet", value));
}
// Autogenerated method: UnityEngine.ReflectionProbe.CallReflectionProbeEvent
void UnityEngine::ReflectionProbe::CallReflectionProbeEvent(::UnityEngine::ReflectionProbe* probe, ::UnityEngine::ReflectionProbe::ReflectionProbeEvent probeEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::CallReflectionProbeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ReflectionProbe", "CallReflectionProbeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(probe), ::il2cpp_utils::ExtractType(probeEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, probe, probeEvent);
}
// Autogenerated method: UnityEngine.ReflectionProbe.CallSetDefaultReflection
void UnityEngine::ReflectionProbe::CallSetDefaultReflection(::UnityEngine::Cubemap* defaultReflectionCubemap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::CallSetDefaultReflection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ReflectionProbe", "CallSetDefaultReflection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultReflectionCubemap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, defaultReflectionCubemap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ReflectionProbe/UnityEngine.ReflectionProbeEvent
#include "UnityEngine/ReflectionProbe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ReflectionProbe/UnityEngine.ReflectionProbeEvent ReflectionProbeAdded
::UnityEngine::ReflectionProbe::ReflectionProbeEvent UnityEngine::ReflectionProbe::ReflectionProbeEvent::_get_ReflectionProbeAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::ReflectionProbeEvent::_get_ReflectionProbeAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ReflectionProbe::ReflectionProbeEvent>("UnityEngine", "ReflectionProbe/ReflectionProbeEvent", "ReflectionProbeAdded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ReflectionProbe/UnityEngine.ReflectionProbeEvent ReflectionProbeAdded
void UnityEngine::ReflectionProbe::ReflectionProbeEvent::_set_ReflectionProbeAdded(::UnityEngine::ReflectionProbe::ReflectionProbeEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::ReflectionProbeEvent::_set_ReflectionProbeAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ReflectionProbe/ReflectionProbeEvent", "ReflectionProbeAdded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ReflectionProbe/UnityEngine.ReflectionProbeEvent ReflectionProbeRemoved
::UnityEngine::ReflectionProbe::ReflectionProbeEvent UnityEngine::ReflectionProbe::ReflectionProbeEvent::_get_ReflectionProbeRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::ReflectionProbeEvent::_get_ReflectionProbeRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ReflectionProbe::ReflectionProbeEvent>("UnityEngine", "ReflectionProbe/ReflectionProbeEvent", "ReflectionProbeRemoved"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ReflectionProbe/UnityEngine.ReflectionProbeEvent ReflectionProbeRemoved
void UnityEngine::ReflectionProbe::ReflectionProbeEvent::_set_ReflectionProbeRemoved(::UnityEngine::ReflectionProbe::ReflectionProbeEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::ReflectionProbeEvent::_set_ReflectionProbeRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ReflectionProbe/ReflectionProbeEvent", "ReflectionProbeRemoved", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ReflectionProbe::ReflectionProbeEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ReflectionProbe::ReflectionProbeEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.DebugLogHandler
#include "UnityEngine/DebugLogHandler.hpp"
// Including type: UnityEngine.LogOption
#include "UnityEngine/LogOption.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.DebugLogHandler.Internal_Log
void UnityEngine::DebugLogHandler::Internal_Log(::UnityEngine::LogType level, ::UnityEngine::LogOption options, ::StringW msg, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DebugLogHandler::Internal_Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "DebugLogHandler", "Internal_Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level, options, msg, obj);
}
// Autogenerated method: UnityEngine.DebugLogHandler.Internal_LogException
void UnityEngine::DebugLogHandler::Internal_LogException(::System::Exception* exception, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DebugLogHandler::Internal_LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "DebugLogHandler", "Internal_LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception, obj);
}
// Autogenerated method: UnityEngine.DebugLogHandler.LogFormat
void UnityEngine::DebugLogHandler::LogFormat(::UnityEngine::LogType logType, ::UnityEngine::Object* context, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DebugLogHandler::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logType, context, format, args);
}
// Autogenerated method: UnityEngine.DebugLogHandler.LogException
void UnityEngine::DebugLogHandler::LogException(::System::Exception* exception, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DebugLogHandler::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Debug
#include "UnityEngine/Debug.hpp"
// Including type: UnityEngine.ILogger
#include "UnityEngine/ILogger.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly UnityEngine.ILogger s_DefaultLogger
::UnityEngine::ILogger* UnityEngine::Debug::_get_s_DefaultLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::_get_s_DefaultLogger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ILogger*>("UnityEngine", "Debug", "s_DefaultLogger"));
}
// Autogenerated static field setter
// Set static field: static readonly UnityEngine.ILogger s_DefaultLogger
void UnityEngine::Debug::_set_s_DefaultLogger(::UnityEngine::ILogger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::_set_s_DefaultLogger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Debug", "s_DefaultLogger", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.ILogger s_Logger
::UnityEngine::ILogger* UnityEngine::Debug::_get_s_Logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::_get_s_Logger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ILogger*>("UnityEngine", "Debug", "s_Logger"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.ILogger s_Logger
void UnityEngine::Debug::_set_s_Logger(::UnityEngine::ILogger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::_set_s_Logger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Debug", "s_Logger", value));
}
// Autogenerated method: UnityEngine.Debug.get_unityLogger
::UnityEngine::ILogger* UnityEngine::Debug::get_unityLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::get_unityLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "get_unityLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ILogger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Debug.get_isDebugBuild
bool UnityEngine::Debug::get_isDebugBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::get_isDebugBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "get_isDebugBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Debug..cctor
void UnityEngine::Debug::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Debug.DrawLine
void UnityEngine::Debug::DrawLine(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, color);
}
// Autogenerated method: UnityEngine.Debug.DrawLine
void UnityEngine::Debug::DrawLine(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::Color color, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, color, duration, depthTest);
}
// Autogenerated method: UnityEngine.Debug.ExtractStackTraceNoAlloc
int UnityEngine::Debug::ExtractStackTraceNoAlloc(uint8_t* buffer, int bufferMax, ::StringW projectFolder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::ExtractStackTraceNoAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "ExtractStackTraceNoAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferMax), ::il2cpp_utils::ExtractType(projectFolder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, bufferMax, projectFolder);
}
// Autogenerated method: UnityEngine.Debug.Log
void UnityEngine::Debug::Log(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Debug.Log
void UnityEngine::Debug::Log(::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: UnityEngine.Debug.LogFormat
void UnityEngine::Debug::LogFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.Debug.LogError
void UnityEngine::Debug::LogError(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Debug.LogError
void UnityEngine::Debug::LogError(::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: UnityEngine.Debug.LogErrorFormat
void UnityEngine::Debug::LogErrorFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogErrorFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogErrorFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.Debug.LogErrorFormat
void UnityEngine::Debug::LogErrorFormat(::UnityEngine::Object* context, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogErrorFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogErrorFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, format, args);
}
// Autogenerated method: UnityEngine.Debug.LogException
void UnityEngine::Debug::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: UnityEngine.Debug.LogException
void UnityEngine::Debug::LogException(::System::Exception* exception, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception, context);
}
// Autogenerated method: UnityEngine.Debug.LogWarning
void UnityEngine::Debug::LogWarning(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Debug.LogWarning
void UnityEngine::Debug::LogWarning(::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context);
}
// Autogenerated method: UnityEngine.Debug.LogWarningFormat
void UnityEngine::Debug::LogWarningFormat(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogWarningFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogWarningFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: UnityEngine.Debug.LogWarningFormat
void UnityEngine::Debug::LogWarningFormat(::UnityEngine::Object* context, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogWarningFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogWarningFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, format, args);
}
// Autogenerated method: UnityEngine.Debug.LogAssertion
void UnityEngine::Debug::LogAssertion(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::LogAssertion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "LogAssertion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Debug.CallOverridenDebugHandler
bool UnityEngine::Debug::CallOverridenDebugHandler(::System::Exception* exception, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::CallOverridenDebugHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "CallOverridenDebugHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception, obj);
}
// Autogenerated method: UnityEngine.Debug.IsLoggingEnabled
bool UnityEngine::Debug::IsLoggingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::IsLoggingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "IsLoggingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Debug.DrawLine_Injected
void UnityEngine::Debug::DrawLine_Injected(ByRef<::UnityEngine::Vector3> start, ByRef<::UnityEngine::Vector3> end, ByRef<::UnityEngine::Color> color, float duration, bool depthTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Debug::DrawLine_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Debug", "DrawLine_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(depthTest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(start), byref(end), byref(color), duration, depthTest);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.IExposedPropertyTable
#include "UnityEngine/IExposedPropertyTable.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.IExposedPropertyTable.GetReferenceValue
::UnityEngine::Object* UnityEngine::IExposedPropertyTable::GetReferenceValue(::UnityEngine::PropertyName id, ByRef<bool> idValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IExposedPropertyTable::GetReferenceValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReferenceValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, id, byref(idValid));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Bounds::dyn_m_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::dyn_m_Center");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Extents
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Bounds::dyn_m_Extents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::dyn_m_Extents");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Extents"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bounds.get_center
::UnityEngine::Vector3 UnityEngine::Bounds::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.set_center
void UnityEngine::Bounds::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bounds.get_size
::UnityEngine::Vector3 UnityEngine::Bounds::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.set_size
void UnityEngine::Bounds::set_size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bounds.get_extents
::UnityEngine::Vector3 UnityEngine::Bounds::get_extents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::get_extents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_extents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.set_extents
void UnityEngine::Bounds::set_extents(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::set_extents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_extents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bounds.get_min
::UnityEngine::Vector3 UnityEngine::Bounds::get_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::get_min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.get_max
::UnityEngine::Vector3 UnityEngine::Bounds::get_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::get_max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds..ctor
// ABORTED elsewhere.  UnityEngine::Bounds::Bounds(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 size)
// Autogenerated method: UnityEngine.Bounds.Equals
bool UnityEngine::Bounds::Equals(::UnityEngine::Bounds other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Bounds.SetMinMax
void UnityEngine::Bounds::SetMinMax(::UnityEngine::Vector3 min, ::UnityEngine::Vector3 max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::SetMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min, max);
}
// Autogenerated method: UnityEngine.Bounds.Encapsulate
void UnityEngine::Bounds::Encapsulate(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::Encapsulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Encapsulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Bounds.Intersects
bool UnityEngine::Bounds::Intersects(::UnityEngine::Bounds bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::Intersects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Intersects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bounds);
}
// Autogenerated method: UnityEngine.Bounds.IntersectRay
bool UnityEngine::Bounds::IntersectRay(::UnityEngine::Ray ray, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::IntersectRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntersectRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ray, byref(distance));
}
// Autogenerated method: UnityEngine.Bounds.Contains
bool UnityEngine::Bounds::Contains(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Bounds.IntersectRayAABB
bool UnityEngine::Bounds::IntersectRayAABB(::UnityEngine::Ray ray, ::UnityEngine::Bounds bounds, ByRef<float> dist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::IntersectRayAABB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "IntersectRayAABB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, bounds, byref(dist));
}
// Autogenerated method: UnityEngine.Bounds.Contains_Injected
bool UnityEngine::Bounds::Contains_Injected(ByRef<::UnityEngine::Bounds> _unity_self, ByRef<::UnityEngine::Vector3> point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::Contains_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "Contains_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(point));
}
// Autogenerated method: UnityEngine.Bounds.IntersectRayAABB_Injected
bool UnityEngine::Bounds::IntersectRayAABB_Injected(ByRef<::UnityEngine::Ray> ray, ByRef<::UnityEngine::Bounds> bounds, ByRef<float> dist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::IntersectRayAABB_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "IntersectRayAABB_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(bounds), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ray), byref(bounds), byref(dist));
}
// Autogenerated method: UnityEngine.Bounds.GetHashCode
int UnityEngine::Bounds::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.Equals
bool UnityEngine::Bounds::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Bounds.ToString
::StringW UnityEngine::Bounds::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Bounds.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Bounds& lhs, const ::UnityEngine::Bounds& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Bounds.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Bounds& lhs, const ::UnityEngine::Bounds& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bounds::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Bounds", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.BoundsInt
#include "UnityEngine/BoundsInt.hpp"
// Including type: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator
#include "UnityEngine/BoundsInt_PositionEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3Int m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3Int& UnityEngine::BoundsInt::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3Int m_Size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3Int& UnityEngine::BoundsInt::dyn_m_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::dyn_m_Size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.BoundsInt.get_min
::UnityEngine::Vector3Int UnityEngine::BoundsInt::get_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.set_min
void UnityEngine::BoundsInt::set_min(::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::set_min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoundsInt.get_max
::UnityEngine::Vector3Int UnityEngine::BoundsInt::get_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.set_max
void UnityEngine::BoundsInt::set_max(::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::set_max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoundsInt.get_xMin
int UnityEngine::BoundsInt::get_xMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_xMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.set_xMin
void UnityEngine::BoundsInt::set_xMin(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::set_xMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_xMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoundsInt.get_yMin
int UnityEngine::BoundsInt::get_yMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_yMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.set_yMin
void UnityEngine::BoundsInt::set_yMin(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::set_yMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_yMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoundsInt.get_zMin
int UnityEngine::BoundsInt::get_zMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_zMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_zMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.set_zMin
void UnityEngine::BoundsInt::set_zMin(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::set_zMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_zMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoundsInt.get_xMax
int UnityEngine::BoundsInt::get_xMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_xMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.set_xMax
void UnityEngine::BoundsInt::set_xMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::set_xMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_xMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoundsInt.get_yMax
int UnityEngine::BoundsInt::get_yMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_yMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.set_yMax
void UnityEngine::BoundsInt::set_yMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::set_yMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_yMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoundsInt.get_zMax
int UnityEngine::BoundsInt::get_zMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_zMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_zMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.set_zMax
void UnityEngine::BoundsInt::set_zMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::set_zMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_zMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoundsInt.get_size
::UnityEngine::Vector3Int UnityEngine::BoundsInt::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.get_allPositionsWithin
::UnityEngine::BoundsInt::PositionEnumerator UnityEngine::BoundsInt::get_allPositionsWithin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::get_allPositionsWithin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_allPositionsWithin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::BoundsInt::PositionEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt..ctor
// ABORTED elsewhere.  UnityEngine::BoundsInt::BoundsInt(::UnityEngine::Vector3Int position, ::UnityEngine::Vector3Int size)
// Autogenerated method: UnityEngine.BoundsInt.Equals
bool UnityEngine::BoundsInt::Equals(::UnityEngine::BoundsInt other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.BoundsInt.ToString
::StringW UnityEngine::BoundsInt::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt.Equals
bool UnityEngine::BoundsInt::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.BoundsInt.GetHashCode
int UnityEngine::BoundsInt::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator
#include "UnityEngine/BoundsInt_PositionEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3Int _min
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3Int& UnityEngine::BoundsInt::PositionEnumerator::dyn__min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::dyn__min");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_min"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3Int _max
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3Int& UnityEngine::BoundsInt::PositionEnumerator::dyn__max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::dyn__max");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3Int _current
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3Int& UnityEngine::BoundsInt::PositionEnumerator::dyn__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::dyn__current");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_current"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3Int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator.get_Current
::UnityEngine::Vector3Int UnityEngine::BoundsInt::PositionEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::BoundsInt::PositionEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator..ctor
UnityEngine::BoundsInt::PositionEnumerator::PositionEnumerator(::UnityEngine::Vector3Int min, ::UnityEngine::Vector3Int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min, max);
}
// Autogenerated method: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator.GetEnumerator
::UnityEngine::BoundsInt::PositionEnumerator UnityEngine::BoundsInt::PositionEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::BoundsInt::PositionEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator.MoveNext
bool UnityEngine::BoundsInt::PositionEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator.Reset
void UnityEngine::BoundsInt::PositionEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoundsInt/UnityEngine.PositionEnumerator.System.IDisposable.Dispose
void UnityEngine::BoundsInt::PositionEnumerator::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoundsInt::PositionEnumerator::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 size
int UnityEngine::Plane::_get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::_get_size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "Plane", "size"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 size
void UnityEngine::Plane::_set_size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::_set_size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Plane", "size", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Plane::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::Plane::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Plane.get_normal
::UnityEngine::Vector3 UnityEngine::Plane::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Plane.get_distance
float UnityEngine::Plane::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Plane..ctor
UnityEngine::Plane::Plane(::UnityEngine::Vector3 inNormal, ::UnityEngine::Vector3 inPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inNormal), ::il2cpp_utils::ExtractType(inPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inNormal, inPoint);
}
// Autogenerated method: UnityEngine.Plane..ctor
UnityEngine::Plane::Plane(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, c);
}
// Autogenerated method: UnityEngine.Plane.SetNormalAndPosition
void UnityEngine::Plane::SetNormalAndPosition(::UnityEngine::Vector3 inNormal, ::UnityEngine::Vector3 inPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::SetNormalAndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetNormalAndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inNormal), ::il2cpp_utils::ExtractType(inPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inNormal, inPoint);
}
// Autogenerated method: UnityEngine.Plane.ClosestPointOnPlane
::UnityEngine::Vector3 UnityEngine::Plane::ClosestPointOnPlane(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::ClosestPointOnPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClosestPointOnPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Plane.GetDistanceToPoint
float UnityEngine::Plane::GetDistanceToPoint(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::GetDistanceToPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDistanceToPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Plane.SameSide
bool UnityEngine::Plane::SameSide(::UnityEngine::Vector3 inPt0, ::UnityEngine::Vector3 inPt1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::SameSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SameSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inPt0), ::il2cpp_utils::ExtractType(inPt1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inPt0, inPt1);
}
// Autogenerated method: UnityEngine.Plane.Raycast
bool UnityEngine::Plane::Raycast(::UnityEngine::Ray ray, ByRef<float> enter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ray, byref(enter));
}
// Autogenerated method: UnityEngine.Plane.ToString
::StringW UnityEngine::Plane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Plane::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
